var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.841,1,1.153]],["body/components/AppComponent.html",[0,1.493,1,2.136,2,2.622,3,0.542,4,0.466,5,2.401,6,2.401,7,2.401,8,2.401,9,0.466,10,3.206,11,2.401,12,3.504,13,2.77,14,3.385,15,2.96,16,5.22,17,2.96,18,4.815,19,0.542,20,1.377,21,5.22,22,0.708,23,0.041,24,1.241,25,3.206,26,3.206,27,4.815,28,1.117,29,3.905,30,0.542,31,1.531,32,0.542,33,0.081,34,2.96,35,1.898,36,2.96,37,2.622,38,2.401,39,3.35,40,2.401,41,1.53,42,2.401,43,1.378,44,2.401,45,1.378,46,1.003,47,2.401,48,1.378,49,2.127,50,2.401,51,2.401,52,0.027,53,0.033,54,0.027]],["title/modules/AppModule.html",[55,1.809,56,1.809]],["body/modules/AppModule.html",[1,2.313,3,0.494,4,0.425,9,0.425,13,1.73,23,0.042,30,0.814,31,1.395,32,0.494,33,0.074,35,1.73,43,1.965,45,1.965,48,1.965,52,0.024,53,0.031,54,0.024,55,2.188,56,3.672,57,1.938,58,2.188,59,4.107,60,4.107,61,3.729,62,2.502,63,2.922,64,2.922,65,2.922,66,2.922,67,3.032,68,2.207,69,2.922,70,2.502,71,3.559,72,3.729,73,4.542,74,3.729,75,2.188,76,3.729,77,3.559,78,3.559,79,2.922,80,2.188,81,2.922,82,2.922,83,2.922,84,4.542,85,3.559,86,4.542,87,3.559,88,4.542,89,3.559,90,4.542,91,3.559]],["title/classes/AppPage.html",[33,0.061,92,2.068]],["body/classes/AppPage.html",[3,0.591,4,0.508,9,0.508,14,2.993,19,0.591,23,0.041,28,1.451,30,0.591,32,0.591,33,0.089,37,2.318,52,0.029,53,0.035,54,0.029,75,2.618,92,3.566,93,1.669,94,3.495,95,1.79,96,5.611,97,5.611,98,4.257,99,1.302,100,5.816,101,4.257,102,3.495,103,2.465,104,4.257,105,4.257,106,4.257,107,4.257]],["title/modules/AppRoutingModule.html",[55,1.809,67,1.602]],["body/modules/AppRoutingModule.html",[0,1.535,3,0.578,4,0.497,9,0.497,23,0.042,30,0.791,31,1.633,32,0.578,33,0.087,43,1.767,45,1.767,46,1.069,48,1.767,49,2.268,52,0.028,53,0.034,54,0.028,57,2.268,62,2.928,67,2.727,72,3.42,76,4.111,79,3.42,80,2.561,81,3.42,82,3.42,83,3.42,108,4.165,109,4.165,110,3.301,111,5.007,112,2.561,113,4.165,114,5.369,115,4.165]],["title/components/AuthorizationComponent.html",[0,0.841,43,1.038]],["body/components/AuthorizationComponent.html",[0,1.391,1,1.316,2,2.382,3,0.466,4,0.4,5,2.064,6,2.064,7,2.064,8,2.064,9,0.4,11,2.064,12,3.37,13,2.664,15,2.689,17,2.689,19,0.466,22,0.609,23,0.042,28,1.391,30,0.607,31,1.316,32,0.466,33,0.07,34,2.689,35,1.631,36,2.689,37,2.382,38,2.064,39,3.17,40,2.064,41,1.546,42,2.064,43,1.819,44,2.064,45,1.185,46,0.862,47,2.064,48,1.185,49,1.828,50,2.064,51,2.064,52,0.023,53,0.03,54,0.023,95,1.544,99,1.123,112,2.064,116,2.756,117,3.075,118,3.42,119,4.374,120,4.865,121,4.374,122,1.249,123,4.5,124,3.624,125,1.005,126,2.756,127,4.5,128,3.357,129,1.316,130,1.463,131,3.357,132,1.907,133,3.357,134,1.067,135,3.357,136,4.5,137,3.591,138,2.126,139,2.756,140,3.624,141,2.36,142,2.064,143,2.36,144,2.364,145,3.42,146,2.36,147,3.357,148,2.36,149,2.36,150,2.756,151,2.126,152,2.756,153,1.631,154,2.756,155,1.828,156,2.756,157,2.36,158,1.828,159,1.631,160,2.756]],["title/classes/Graph.html",[33,0.061,46,0.755]],["body/classes/Graph.html",[3,0.492,4,0.226,9,0.226,19,0.263,20,0.832,22,0.855,23,0.042,24,0.924,28,1.392,30,0.552,32,0.552,33,0.074,41,0.602,46,1.281,52,0.013,53,0.02,54,0.013,68,2.292,93,0.742,95,1.026,99,0.747,103,1.721,122,1.162,125,0.814,129,0.742,130,0.825,134,1.728,138,0.92,161,1.031,162,1.126,163,1.869,164,2.178,165,2.347,166,2.178,167,2.178,168,2.178,169,2.121,170,2.444,171,1.788,172,2.055,173,1.973,174,2.908,175,1.932,176,1.932,177,1.598,178,1.893,179,1.451,180,1.788,181,2.164,182,1.893,183,1.598,184,1.893,185,1.267,186,2.9,187,1.83,188,1.893,189,2.444,190,1.388,191,2.164,192,1.732,193,1.388,194,2.336,195,1.893,196,1.584,197,1.893,198,1.788,199,1.413,200,1.267,201,1.788,202,0.825,203,1.403,204,0.924,205,0.825,206,1.295,207,2.178,208,1.267,209,0.825,210,0.602,211,0.668,212,1.164,213,1.267,214,1.584,215,1.584,216,1.164,217,1.031,218,1.775,219,1.031,220,1.164,221,0.825,222,1.164,223,1.164,224,1.25,225,1.031,226,2.784,227,2.164,228,1.788,229,1.164,230,1.164,231,1.164,232,1.164,233,1.164,234,1.164,235,1.164,236,2.784,237,2.784,238,1.788,239,1.788,240,1.788,241,1.788,242,1.164,243,2.784,244,2.444,245,1.413,246,1.788,247,1.788,248,1.164,249,2.784,250,1.788,251,1.788,252,1.788,253,1.164,254,1.164,255,1.164,256,1.164,257,1.031,258,1.164,259,1.788,260,1.788,261,1.164,262,1.164,263,1.164,264,1.164,265,1.164,266,1.164,267,1.164,268,1.164,269,1.164,270,1.164,271,2.444,272,2.444,273,1.164,274,2.178,275,1.164,276,1.164,277,1.164,278,1.164,279,1.164,280,1.164,281,1.164,282,1.164,283,1.164,284,2.178,285,1.788,286,1.164,287,2.784,288,1.788,289,1.164,290,1.164,291,1.164,292,1.788,293,1.788,294,1.788,295,1.164,296,2.178,297,0.541,298,2.178,299,2.178,300,2.178,301,2.178,302,1.164,303,2.178,304,1.164,305,1.164,306,1.164,307,1.164,308,1.788,309,1.164,310,2.178,311,0.924,312,1.164,313,1.164,314,1.164,315,1.164,316,1.164,317,1.164,318,1.164,319,1.164,320,1.164,321,1.164,322,1.164]],["title/interfaces/GraphInfo.html",[172,1.282,206,0.841]],["body/interfaces/GraphInfo.html",[3,0.434,4,0.248,9,0.248,19,0.289,20,0.894,22,0.567,23,0.042,24,0.994,30,0.579,32,0.579,33,0.065,46,1.206,52,0.014,53,0.021,54,0.014,68,2.368,99,0.534,103,1.824,122,0.803,125,0.478,134,1.422,138,1.012,161,1.134,162,0.994,163,1.949,164,1.28,165,2.124,166,1.28,167,1.28,168,1.28,169,2.185,170,1.28,171,1.28,172,1.949,173,1.636,175,1.519,176,1.519,177,1.579,179,1.457,180,1.28,181,1.702,183,1.473,185,0.907,186,2.566,187,1.81,189,1.922,190,1.225,191,1.702,192,1.362,193,1.225,194,2.044,196,1.134,198,1.28,199,1.012,200,0.907,201,1.28,202,0.907,203,1.473,204,0.994,205,0.907,206,1.394,207,2.566,208,1.819,209,0.907,210,0.662,211,0.735,212,1.28,213,1.819,214,1.702,215,1.702,216,1.922,217,2.273,218,1.841,219,1.134,220,1.28,221,0.907,222,1.28,223,1.28,224,1.325,225,1.134,226,2.889,227,2.273,228,1.922,229,1.28,230,1.28,231,1.28,232,1.28,233,1.28,234,1.28,235,1.28,236,2.889,237,2.889,238,1.922,239,1.922,240,1.922,241,1.922,242,1.28,243,2.889,244,2.566,245,1.519,246,1.922,247,1.922,248,1.28,249,2.889,250,1.922,251,1.922,252,1.922,253,1.28,254,1.28,255,1.28,256,1.28,257,1.134,258,1.28,259,1.922,260,1.922,261,1.28,262,1.28,263,1.28,264,1.28,265,1.28,266,1.28,267,1.28,268,1.28,269,1.28,270,1.28,271,2.566,272,2.566,273,1.28,274,2.308,275,1.28,276,1.28,277,1.28,278,1.28,279,1.28,280,1.28,281,1.28,282,1.28,283,1.28,284,2.308,285,1.922,286,1.28,287,2.889,288,1.922,289,1.28,290,1.28,291,1.28,292,1.922,293,1.922,294,1.922,295,1.28,296,2.308,297,0.595,298,2.308,299,2.308,300,2.308,301,2.308,302,1.28,303,2.308,304,1.28,305,1.28,306,1.28,307,1.28,308,1.922,309,1.28,310,2.308,311,0.994,312,1.28,313,1.28,314,1.28,315,1.28,316,1.28,317,1.28,318,1.28,319,1.28,320,1.28,321,1.28,322,1.28,323,1.134]],["title/components/GraphViewerComponent.html",[0,0.841,45,1.038]],["body/components/GraphViewerComponent.html",[0,0.772,1,0.494,2,1.144,3,0.175,4,0.151,5,0.776,6,0.776,7,0.776,8,0.776,9,0.151,11,0.776,12,2.578,13,1.835,15,1.292,17,1.292,19,0.292,20,0.601,22,0.381,23,0.042,28,1.145,30,0.582,31,0.494,32,0.175,33,0.026,34,1.292,35,0.613,36,1.292,37,1.144,38,0.776,39,1.936,40,0.776,41,0.668,42,0.776,43,0.445,44,0.776,45,1.111,46,1.21,47,0.776,48,0.445,49,0.687,50,0.776,51,0.776,52,0.014,53,0.014,54,0.009,80,2.578,93,1.234,95,0.741,99,0.808,103,0.613,117,1.477,118,1.898,122,1.21,124,2.213,125,0.62,132,1.234,134,0.858,140,1.898,141,0.887,142,2.321,143,0.887,144,1.021,145,0.887,148,0.887,149,0.887,151,0.613,153,1.021,155,1.144,157,1.898,158,1.47,159,1.021,162,0.668,165,1.645,169,0.55,172,0.55,173,0.55,175,1.53,176,1.53,179,0.693,181,1.144,183,0.741,190,0.823,191,1.144,192,0.55,193,0.494,196,1.144,203,0.445,204,0.668,205,1.372,208,0.916,209,1.372,210,0.401,211,0.953,213,0.55,214,1.144,215,1.144,217,0.687,224,1.48,225,1.47,227,0.687,297,0.772,311,1.2,324,3.442,325,1.036,326,2.101,327,2.699,328,2.101,329,3.148,330,3.148,331,3.148,332,2.101,333,1.262,334,2.101,335,2.101,336,1.262,337,1.262,338,1.262,339,1.725,340,2.101,341,2.699,342,2.101,343,1.262,344,1.262,345,2.101,346,1.262,347,2.101,348,1.262,349,1.262,350,0.887,351,1.262,352,0.887,353,1.262,354,1.262,355,1.262,356,1.262,357,1.262,358,1.262,359,2.321,360,2.445,361,3.148,362,2.87,363,4.353,364,2.461,365,3.775,366,2.101,367,1.262,368,2.101,369,2.699,370,1.262,371,2.101,372,2.101,373,2.101,374,2.699,375,2.216,376,1.262,377,3.148,378,3.148,379,1.262,380,2.101,381,2.699,382,1.262,383,1.262,384,1.262,385,1.262,386,2.216,387,1.262,388,3.775,389,1.262,390,1.262,391,1.262,392,1.262,393,1.262,394,1.262,395,1.262,396,2.101,397,1.262,398,1.262,399,2.101,400,1.262,401,2.699,402,1.262,403,2.699,404,1.262,405,1.262,406,3.496,407,2.699,408,1.262,409,1.262,410,3.496,411,3.496,412,3.148,413,2.101,414,4.003,415,2.101,416,3.496,417,2.101,418,3.148,419,2.699,420,2.101,421,2.699,422,3.496,423,1.262,424,2.699,425,2.101,426,3.148,427,3.148,428,2.699,429,2.101,430,2.101,431,2.699,432,3.148,433,2.101,434,3.496,435,4.003,436,2.699,437,3.148,438,1.262,439,3.148,440,2.699,441,3.148,442,2.699,443,3.496,444,2.699,445,3.775,446,3.148,447,3.148,448,3.775,449,2.699,450,2.699,451,2.101,452,2.699,453,3.148,454,2.699,455,3.148,456,3.775,457,3.496,458,2.699,459,3.148,460,2.101,461,2.101,462,1.262,463,4.003,464,2.699,465,2.101,466,2.699,467,3.148,468,2.101,469,3.148,470,2.699,471,2.699,472,3.148,473,2.101,474,3.148,475,1.262,476,2.699,477,2.101,478,1.262,479,2.699,480,3.148,481,2.699,482,2.699,483,2.101,484,2.699,485,3.148,486,3.148,487,2.101,488,2.699,489,1.262,490,3.496,491,3.496,492,1.262,493,2.699,494,2.699,495,2.101,496,2.699,497,2.101,498,3.148,499,3.148,500,1.262,501,2.699,502,2.699,503,2.101,504,2.101,505,2.101,506,3.775,507,2.699,508,2.699,509,2.101,510,3.496,511,2.699,512,2.101,513,2.101,514,1.262,515,3.496,516,3.148,517,2.101,518,3.496,519,2.699,520,2.699,521,2.699,522,2.699,523,2.699,524,2.699,525,3.148,526,2.699,527,2.101,528,2.101,529,2.101,530,2.699,531,3.148,532,2.101,533,2.699,534,2.699,535,2.699,536,2.101,537,1.262,538,1.262,539,1.262,540,2.101,541,2.101,542,2.101,543,2.699,544,2.101,545,2.101,546,2.101,547,2.101,548,2.101,549,2.101,550,1.262,551,3.148,552,2.101,553,2.699,554,2.101,555,2.699,556,1.262,557,2.699,558,2.699,559,1.262,560,1.262,561,2.699,562,2.699,563,1.262,564,1.262,565,2.101,566,1.262,567,1.262,568,2.101,569,2.101,570,1.262,571,2.101,572,1.262,573,1.262,574,1.262,575,1.262,576,2.101,577,2.101,578,1.262,579,1.262,580,1.262,581,1.262,582,1.262,583,1.262,584,1.262,585,1.262,586,1.262,587,1.262,588,1.262,589,1.262,590,1.262,591,1.262,592,1.262,593,1.262,594,1.262,595,1.262,596,2.101,597,2.101,598,2.101,599,2.101,600,2.101,601,1.262,602,2.699,603,2.101,604,1.262,605,3.775,606,1.262,607,1.262,608,1.262,609,1.262,610,1.262,611,1.262,612,1.262,613,3.148,614,1.262,615,2.101,616,3.148,617,1.262,618,1.262,619,1.262,620,3.496,621,3.148,622,3.148,623,3.148,624,2.101,625,1.262,626,3.496,627,2.87,628,2.814,629,4.193,630,1.262,631,1.262,632,0.776,633,1.262,634,1.262,635,1.036,636,1.262,637,1.262,638,1.262,639,0.887,640,1.262,641,1.262,642,1.262,643,1.262,644,1.262,645,1.262,646,1.262,647,2.699,648,2.699,649,2.101,650,1.262,651,1.262,652,1.262]],["title/injectables/HttpHandlerService.html",[653,1.809,654,2.068]],["body/injectables/HttpHandlerService.html",[3,0.621,4,0.534,9,0.534,14,3.144,23,0.041,28,1.279,30,0.621,31,1.753,32,0.621,33,0.093,52,0.03,53,0.036,54,0.03,125,1.271,653,3.211,654,3.671,655,4.472,656,4.287,657,3.671,658,4.472,659,4.472]],["title/classes/Label.html",[33,0.061,210,0.935]],["body/classes/Label.html",[3,0.352,4,0.303,9,0.303,19,0.352,20,1.033,22,0.831,23,0.042,24,1.816,28,1.441,30,0.352,32,0.352,33,0.088,41,1.148,52,0.017,53,0.025,54,0.017,93,0.994,95,1.275,99,1.08,122,1.331,125,1.113,129,1.974,130,1.574,132,1.974,134,1.601,144,2.716,151,1.755,153,1.232,155,1.381,158,1.967,159,1.232,162,1.148,163,1.574,179,1.384,183,0.895,185,1.105,187,1.485,190,0.994,192,1.105,193,0.994,200,1.105,204,1.148,206,1.033,210,1.805,211,1.485,218,1.416,221,1.574,297,1.033,311,1.54,359,3.437,360,1.381,364,1.559,632,3.316,639,1.783,660,1.783,661,3.403,662,4.35,663,4.255,664,2.958,665,3.764,666,3.764,667,2.536,668,2.819,669,3.612,670,4.427,671,3.407,672,2.536,673,3.764,674,2.536,675,2.536,676,2.221,677,2.536,678,3.764,679,3.764,680,2.536,681,2.539,682,2.082,683,2.082,684,2.082,685,2.082,686,2.082,687,2.539,688,2.587,689,2.587,690,3.223,691,3.223,692,1.783,693,2.958,694,1.783,695,1.783,696,1.559,697,2.082,698,2.082,699,1.783,700,1.783,701,1.783,702,2.965,703,2.965,704,1.783,705,1.783,706,1.559,707,1.783,708,1.783,709,1.783,710,2.082,711,1.783,712,2.082,713,2.082]],["title/interfaces/LabelOptions.html",[206,0.841,668,1.809]],["body/interfaces/LabelOptions.html",[3,0.372,4,0.32,9,0.32,19,0.372,20,1.074,22,0.955,23,0.042,24,1.831,30,0.372,32,0.372,33,0.078,52,0.018,53,0.026,54,0.018,122,1.113,125,1.08,129,1.472,132,1.699,134,1.194,144,2.764,151,1.825,153,1.302,155,1.459,158,2.559,159,1.825,162,0.852,163,1.168,179,1.317,183,1.53,185,1.637,187,1.928,190,1.472,192,1.168,193,1.472,200,1.637,204,1.194,206,1.24,210,1.759,211,1.81,218,1.472,221,1.168,297,1.074,311,1.573,323,1.459,359,3.154,360,2.045,364,1.648,632,3.042,639,2.64,660,1.884,661,2.889,662,3.858,663,3.858,664,1.884,665,2.2,666,2.2,668,2.666,670,4.21,671,3.303,673,3.083,676,1.648,678,3.083,679,3.083,681,1.884,682,3.083,683,3.083,684,3.083,685,3.083,686,3.083,687,3.303,688,3.154,689,3.154,690,3.702,691,3.702,692,2.64,693,3.605,694,3.048,695,3.048,696,1.648,697,2.2,698,2.2,699,1.884,700,1.884,701,1.884,702,3.083,703,3.083,704,1.884,705,1.884,706,1.648,707,1.884,708,1.884,709,1.884,710,2.2,711,1.884,712,2.2,713,2.2]],["title/classes/Line.html",[33,0.061,203,1.038]],["body/classes/Line.html",[3,0.277,4,0.679,9,0.238,19,0.277,20,0.867,22,0.919,23,0.042,24,1.837,28,1.541,30,0.421,32,0.277,33,0.076,41,0.963,52,0.014,53,0.021,54,0.014,93,0.783,95,1.07,99,1.128,122,1.448,125,0.939,129,1.602,130,1.321,132,2.026,134,1.746,142,3.117,162,1.164,163,1.321,169,2.209,177,1.854,179,1.383,187,1.632,203,2.105,204,0.963,205,0.871,218,1.883,221,2.157,297,0.867,311,0.963,359,3.468,360,2.9,632,3.313,661,3.486,664,2.574,676,1.863,681,3.48,696,1.228,706,1.228,714,1.64,715,4.95,716,4.805,717,3.662,718,4.95,719,5.695,720,3.355,721,4.087,722,4.087,723,4.087,724,1.998,725,3.03,726,4.95,727,4.95,728,1.998,729,4.95,730,1.998,731,1.998,732,1.998,733,1.998,734,1.998,735,1.998,736,1.998,737,1.998,738,4.625,739,4.625,740,2.13,741,1.998,742,3.03,743,1.998,744,3.03,745,1.998,746,1.998,747,4.394,748,1.998,749,1.64,750,1.998,751,1.998,752,1.998,753,3.03,754,3.03,755,3.03,756,1.998,757,1.998,758,1.998,759,1.998,760,1.998,761,3.03,762,1.998,763,3.03,764,1.998,765,1.998,766,1.998,767,1.998,768,1.998,769,1.998,770,1.998,771,1.998,772,1.998,773,1.998,774,1.998]],["title/interfaces/LinkInfo.html",[206,0.841,213,1.282]],["body/interfaces/LinkInfo.html",[3,0.434,4,0.249,9,0.249,19,0.289,20,0.895,22,0.567,23,0.042,24,0.994,30,0.579,32,0.579,33,0.065,46,1.149,52,0.014,53,0.021,54,0.014,68,2.369,99,0.535,103,1.826,122,0.803,125,0.479,134,1.422,138,1.013,161,1.135,162,0.994,163,1.95,164,1.281,165,2.124,166,1.281,167,1.281,168,1.281,169,1.95,170,1.281,171,1.281,172,1.82,173,1.637,175,1.52,176,1.52,177,1.579,179,1.457,180,1.281,181,1.704,183,1.474,185,0.908,186,2.567,187,1.918,189,1.924,190,1.226,191,1.704,192,1.363,193,1.226,194,2.046,196,1.135,198,1.281,199,1.013,200,0.908,201,1.281,202,0.908,203,1.474,204,0.994,205,0.908,206,1.394,207,2.567,208,1.363,209,0.908,210,0.662,211,0.735,212,1.924,213,1.637,214,2.437,215,2.437,216,1.281,217,1.135,218,1.842,219,1.135,220,1.281,221,0.908,222,1.281,223,1.281,224,1.326,225,1.135,226,2.89,227,2.274,228,1.924,229,1.281,230,1.281,231,1.281,232,1.281,233,1.281,234,1.281,235,1.281,236,2.89,237,2.89,238,1.924,239,1.924,240,1.924,241,1.924,242,1.281,243,2.89,244,2.567,245,1.52,246,1.924,247,1.924,248,1.281,249,2.89,250,1.924,251,1.924,252,1.924,253,1.281,254,1.281,255,1.281,256,1.281,257,1.135,258,1.281,259,1.924,260,1.924,261,1.281,262,1.281,263,1.281,264,1.281,265,1.281,266,1.281,267,1.281,268,1.281,269,1.281,270,1.281,271,2.567,272,2.567,273,1.281,274,2.31,275,1.281,276,1.281,277,1.281,278,1.281,279,1.281,280,1.281,281,1.281,282,1.281,283,1.281,284,2.31,285,1.924,286,1.281,287,2.89,288,1.924,289,1.281,290,1.281,291,1.281,292,1.924,293,1.924,294,1.924,295,1.281,296,2.31,297,0.596,298,2.31,299,2.31,300,2.31,301,2.31,302,1.281,303,2.31,304,1.281,305,1.281,306,1.281,307,1.281,308,1.924,309,1.281,310,2.31,311,0.994,312,1.281,313,1.281,314,1.281,315,1.281,316,1.281,317,1.281,318,1.281,319,1.281,320,1.281,321,1.281,322,1.281,323,1.135]],["title/classes/Node.html",[33,0.061,179,0.755]],["body/classes/Node.html",[3,0.19,4,0.163,9,0.163,19,0.19,20,0.643,22,0.965,23,0.042,24,1.664,28,1.577,30,0.459,32,0.312,33,0.06,41,1.63,52,0.009,53,0.015,54,0.009,93,0.537,95,0.794,99,1.215,122,1.514,125,0.761,129,1.699,130,1.713,132,1.894,144,0.666,146,1.581,151,0.666,153,0.666,159,2.107,162,1.678,165,2.106,169,2.014,173,1.713,175,1.609,176,1.609,177,1.465,179,1.535,183,1.465,185,1.889,187,1.947,190,0.881,193,0.881,194,2.632,199,1.609,200,1.593,202,1.809,203,1.847,204,0.715,205,0.597,209,2.063,210,1.726,211,1.631,218,2.01,219,1.558,224,1.905,245,0.666,257,2.14,297,0.818,311,1.052,339,3.002,360,1.803,627,1.124,628,0.963,635,1.124,661,3.187,671,2.327,676,1.383,687,2.327,688,2.553,689,2.553,690,0.963,691,0.963,692,2.327,693,0.963,694,2.762,695,2.762,696,0.842,699,0.963,700,0.963,701,0.963,704,0.963,705,0.963,706,0.842,707,0.963,708,0.963,709,0.963,711,3.156,720,2.348,740,2.762,749,1.846,775,0.963,776,2.249,777,4.833,778,4.335,779,2.86,780,4.151,781,2.86,782,2.86,783,2.86,784,2.86,785,4.483,786,2.249,787,2.249,788,2.249,789,2.249,790,5.128,791,2.86,792,2.86,793,2.86,794,2.86,795,3.311,796,1.124,797,2.249,798,1.37,799,1.37,800,4.335,801,1.37,802,1.37,803,4.489,804,3.311,805,1.37,806,1.37,807,1.37,808,1.37,809,3.226,810,1.37,811,1.37,812,3.311,813,1.37,814,4.621,815,1.37,816,1.37,817,1.37,818,2.249,819,1.37,820,4.335,821,3.93,822,2.249,823,4.335,824,2.249,825,1.37,826,2.249,827,2.249,828,1.37,829,2.249,830,2.249,831,1.37,832,2.249,833,1.37,834,3.656,835,1.37,836,1.37,837,1.37,838,1.37,839,1.37,840,2.86,841,1.37,842,1.846,843,1.37,844,1.37,845,1.37,846,2.249,847,2.249,848,1.37,849,1.37,850,1.37,851,1.37,852,2.249,853,2.249,854,2.249,855,1.37,856,1.37,857,1.37,858,1.37,859,1.37,860,1.37,861,1.37,862,1.37,863,1.37,864,1.37,865,1.37,866,1.37,867,1.37,868,1.37,869,2.249,870,2.249,871,1.37,872,1.37,873,1.37,874,1.37,875,1.37,876,1.37,877,2.249,878,1.37,879,1.37,880,1.37,881,1.37,882,1.37,883,1.37,884,1.37,885,1.37,886,1.37]],["title/interfaces/NodeInfo.html",[206,0.841,208,1.282]],["body/interfaces/NodeInfo.html",[3,0.425,4,0.242,9,0.242,19,0.281,20,0.877,22,0.844,23,0.042,24,1.479,30,0.572,32,0.572,33,0.064,46,1.136,52,0.014,53,0.021,54,0.014,68,2.347,99,0.521,103,1.796,122,0.787,125,0.466,134,1.406,138,0.986,161,1.104,162,1.406,163,1.928,164,1.247,165,2.105,166,1.247,167,1.247,168,1.247,169,1.928,170,1.247,171,1.247,172,1.795,173,1.611,175,1.49,176,1.49,177,1.561,179,1.458,180,1.247,181,1.669,183,1.642,185,0.884,186,2.533,187,1.944,189,1.885,190,1.733,191,1.669,192,1.336,193,1.733,194,2.012,196,1.104,198,1.247,199,0.986,200,0.884,201,1.247,202,0.884,203,1.454,204,0.974,205,0.884,206,1.381,207,2.533,208,1.611,209,1.795,210,1.309,211,1.454,212,1.247,213,1.336,214,1.669,215,1.669,216,1.247,217,1.104,218,1.823,219,1.104,220,1.247,221,0.884,222,1.247,223,1.247,224,1.304,225,1.104,226,2.86,227,2.243,228,1.885,229,1.247,230,1.247,231,1.247,232,1.247,233,1.247,234,1.247,235,1.247,236,2.86,237,2.86,238,1.885,239,1.885,240,1.885,241,1.885,242,1.247,243,2.86,244,2.533,245,1.49,246,1.885,247,1.885,248,1.247,249,2.86,250,1.885,251,1.885,252,1.885,253,1.247,254,1.247,255,1.247,256,1.247,257,1.104,258,1.247,259,1.885,260,1.885,261,1.247,262,1.247,263,1.247,264,1.247,265,1.247,266,1.247,267,1.247,268,1.247,269,1.247,270,1.247,271,2.533,272,2.533,273,1.247,274,2.272,275,1.247,276,1.247,277,1.247,278,1.247,279,1.247,280,1.247,281,1.247,282,1.247,283,1.247,284,2.272,285,1.885,286,1.247,287,2.86,288,1.885,289,1.247,290,1.247,291,1.247,292,1.885,293,1.885,294,1.885,295,1.247,296,2.272,297,0.58,298,2.272,299,2.272,300,2.272,301,2.272,302,1.247,303,2.272,304,1.247,305,1.247,306,1.247,307,1.247,308,1.885,309,1.247,310,2.272,311,0.974,312,1.247,313,1.247,314,1.247,315,1.247,316,1.247,317,1.247,318,1.247,319,1.247,320,1.247,321,1.247,322,1.247,323,1.104]],["title/classes/NodeWrapper.html",[33,0.061,177,1.038]],["body/classes/NodeWrapper.html",[3,0.488,4,0.42,9,0.42,19,0.488,20,1.289,22,0.902,23,0.041,24,1.764,28,1.423,30,0.691,32,0.488,33,0.073,41,1.794,52,0.024,53,0.031,54,0.024,93,1.379,95,1.591,99,0.903,122,1.425,125,1.036,129,1.767,130,1.965,132,1.379,162,1.724,165,1.533,173,1.965,177,1.591,179,1.449,183,1.756,187,2.037,199,2.191,202,2.287,209,1.965,211,1.756,224,1.591,245,1.709,297,1.006,350,3.169,352,3.169,688,3.336,689,3.336,785,4.454,796,2.888,887,4.308,888,2.888,889,4.508,890,4.508,891,3.518,892,3.518,893,4.975,894,3.518,895,3.518,896,3.518,897,3.518,898,3.518,899,3.518,900,3.518,901,3.518,902,3.518,903,3.518]],["title/components/RegistrationComponent.html",[0,0.841,48,1.038]],["body/components/RegistrationComponent.html",[0,1.387,1,1.307,2,2.372,3,0.463,4,0.398,5,2.051,6,2.051,7,2.051,8,2.051,9,0.398,11,2.051,12,3.365,13,2.659,15,2.678,17,2.678,19,0.463,22,0.605,23,0.041,28,1.387,30,0.605,31,1.307,32,0.463,33,0.069,34,2.678,35,1.621,36,2.678,37,2.372,38,2.051,39,3.162,40,2.051,41,1.542,42,2.051,43,1.177,44,2.051,45,1.177,46,0.856,47,2.051,48,1.815,49,2.641,50,2.051,51,2.051,52,0.023,53,0.03,54,0.023,95,1.537,99,1.118,112,2.051,117,3.062,118,3.41,122,1.245,123,3.576,124,3.615,125,1.001,126,2.738,127,4.222,129,1.307,130,1.454,132,1.901,134,1.06,136,4.222,137,4.222,138,2.499,139,2.738,140,3.615,141,2.345,142,2.051,143,2.345,144,2.357,145,3.41,146,2.345,148,2.345,149,2.345,150,2.738,151,2.117,152,2.738,153,1.621,154,2.738,155,1.816,156,2.738,157,2.345,158,1.816,159,1.621,160,2.738,904,2.738,905,4.851,906,4.356,907,5.143,908,3.336,909,3.336,910,3.336,911,3.336,912,3.336,913,4.356,914,4.356,915,3.336]],["title/coverage.html",[916,3.288]],["body/coverage.html",[0,1.518,1,1.423,9,0.433,10,2.981,22,0.659,23,0.041,33,0.12,43,1.282,45,1.282,46,0.932,48,1.282,52,0.025,53,0.031,54,0.025,80,2.233,92,2.553,94,2.981,116,2.981,161,2.891,172,1.583,177,1.282,179,0.932,203,1.282,206,1.518,208,1.583,210,1.154,213,1.583,224,1.282,324,2.981,325,2.981,350,2.553,352,2.553,362,4.595,628,4.112,653,2.233,654,2.553,656,2.981,657,2.981,660,3.234,668,2.233,714,2.981,775,2.553,887,2.981,888,2.981,904,2.981,916,2.981,917,3.632,918,3.632,919,3.632,920,3.632,921,4.601,922,3.632,923,3.632,924,3.632,925,4.601,926,4.601,927,3.632,928,3.632,929,3.632,930,3.632,931,3.632,932,3.632,933,5.05,934,3.632,935,3.632,936,3.632,937,3.632,938,3.632,939,2.981,940,5.309,941,3.777,942,5.309,943,2.981,944,3.777,945,2.981,946,2.981,947,3.632,948,3.632]],["title/dependencies.html",[58,2.174,949,2.461]],["body/dependencies.html",[23,0.042,31,1.692,52,0.029,53,0.035,54,0.029,58,2.655,74,4.2,75,3.146,112,2.655,204,1.372,950,4.318,951,5.939,952,4.318,953,5.116,954,4.318,955,4.318,956,4.318,957,4.318,958,4.318,959,4.318,960,4.318,961,4.318,962,4.318,963,4.318,964,4.318,965,4.318]],["title/miscellaneous/enumerations.html",[966,1.513,967,2.903]],["body/miscellaneous/enumerations.html",[19,0.646,23,0.036,52,0.032,53,0.036,54,0.032,202,2.33,740,3.275,775,3.275,809,3.824,842,3.824,966,2.864,967,3.824,968,4.658]],["title/index.html",[19,0.342,969,2.461,970,2.461]],["body/index.html",[0,1.5,4,0.471,13,1.919,23,0.033,41,1.255,52,0.027,53,0.033,54,0.027,70,2.776,102,3.242,224,1.394,971,3.949,972,4.848,973,3.949,974,5.245,975,5.245,976,3.949,977,3.949,978,3.949,979,4.848,980,5.614,981,5.789,982,3.949,983,3.949,984,3.949,985,3.949,986,3.949,987,3.949,988,3.949,989,3.949,990,3.949,991,3.949,992,5.245,993,5.245,994,3.949,995,5.614,996,3.949,997,3.949,998,3.949,999,3.949,1000,3.949,1001,3.949,1002,3.242,1003,4.848,1004,4.848,1005,5.47,1006,3.949,1007,4.848,1008,4.848,1009,3.949,1010,5.47,1011,3.949,1012,3.949,1013,5.245,1014,3.949,1015,3.949,1016,3.949,1017,3.949]],["title/modules.html",[57,2.181]],["body/modules.html",[23,0.036,46,1.196,52,0.032,53,0.036,54,0.032,56,2.864,57,2.537,67,2.537,75,2.864,1018,4.658,1019,4.658,1020,5.347,1021,4.658]],["title/overview.html",[1022,3.288]],["body/overview.html",[1,2.292,2,2.259,23,0.04,35,2.016,43,1.892,45,1.892,48,1.892,52,0.028,53,0.034,54,0.028,55,2.551,56,3.712,57,2.259,58,2.551,59,3.406,60,3.406,61,3.406,62,2.917,63,3.406,64,3.406,65,3.406,66,3.406,67,2.919,68,2.428,69,3.406,70,2.917,93,1.626,110,2.551,323,2.259,364,2.551,375,3.406,386,3.406,653,2.551,1022,3.406,1023,4.996,1024,4.149]],["title/routes.html",[110,2.463]],["body/routes.html",[23,0.037,52,0.032,53,0.037,54,0.032,110,2.922]],["title/miscellaneous/variables.html",[966,1.513,1025,2.903]],["body/miscellaneous/variables.html",[19,0.597,22,1.021,23,0.041,25,4.468,26,4.468,52,0.029,53,0.035,54,0.029,297,1.459,311,1.367,939,3.53,941,4.621,943,3.53,944,3.53,945,4.19,946,4.19,966,2.644,1002,4.19,1025,3.53,1026,5.104,1027,4.3,1028,4.3,1029,4.3,1030,4.3,1031,4.3,1032,5.104]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":628,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Node.html":{},"coverage.html":{}}}],["0.10.3",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":623,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.6",{"_index":872,"title":{},"body":{"classes/Node.html":{}}}],["0.65",{"_index":384,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.7",{"_index":380,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.9",{"_index":369,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.975",{"_index":374,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0/1",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":364,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"overview.html":{}}}],["1.2",{"_index":871,"title":{},"body":{"classes/Node.html":{}}}],["1.5",{"_index":292,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["1.7em",{"_index":637,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["1/3",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":370,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["10.0.4",{"_index":977,"title":{},"body":{"index.html":{}}}],["10.0.5",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":362,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["1000",{"_index":291,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["100px",{"_index":612,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["100vh",{"_index":606,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["100vw",{"_index":607,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["10px",{"_index":149,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["12",{"_index":381,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["13/14",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":368,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["15px",{"_index":154,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["18",{"_index":366,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["195px",{"_index":645,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["2",{"_index":386,"title":{},"body":{"components/GraphViewerComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":636,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["20",{"_index":378,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["200px",{"_index":143,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["20px",{"_index":156,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["211",{"_index":382,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["22",{"_index":875,"title":{},"body":{"classes/Node.html":{}}}],["220",{"_index":877,"title":{},"body":{"classes/Node.html":{}}}],["245",{"_index":373,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["25",{"_index":383,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["255",{"_index":363,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["27/27",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":388,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["3",{"_index":375,"title":{},"body":{"components/GraphViewerComponent.html":{},"overview.html":{}}}],["3.6.3",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":396,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["30px",{"_index":646,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["33",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":652,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["37/37",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":394,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["3px",{"_index":638,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["4",{"_index":1023,"title":{},"body":{"overview.html":{}}}],["40/40",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["45px",{"_index":160,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["4px",{"_index":648,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["5/8",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["505050",{"_index":614,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["5px",{"_index":629,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["6.5.5",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["70.5vh",{"_index":641,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["8",{"_index":1024,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":616,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["80vh",{"_index":618,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["88",{"_index":643,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["9/9",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":372,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["92",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["ab",{"_index":446,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["abstract",{"_index":790,"title":{},"body":{"classes/Node.html":{}}}],["accusamus",{"_index":472,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["accusantium",{"_index":484,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["achievy",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["achievyangular",{"_index":971,"title":{},"body":{"index.html":{}}}],["active",{"_index":740,"title":{},"body":{"classes/Line.html":{},"classes/Node.html":{},"miscellaneous/enumerations.html":{}}}],["activenode",{"_index":164,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["activeshadow",{"_index":715,"title":{},"body":{"classes/Line.html":{}}}],["activesize",{"_index":778,"title":{},"body":{"classes/Node.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["ad",{"_index":467,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["addchild",{"_index":786,"title":{},"body":{"classes/Node.html":{}}}],["addchild(childnode",{"_index":818,"title":{},"body":{"classes/Node.html":{}}}],["addchildline",{"_index":787,"title":{},"body":{"classes/Node.html":{}}}],["addchildline(childline",{"_index":824,"title":{},"body":{"classes/Node.html":{}}}],["added",{"_index":823,"title":{},"body":{"classes/Node.html":{}}}],["addparent",{"_index":788,"title":{},"body":{"classes/Node.html":{}}}],["addparent(parentnode",{"_index":827,"title":{},"body":{"classes/Node.html":{}}}],["addparentline",{"_index":789,"title":{},"body":{"classes/Node.html":{}}}],["addparentline(parentline",{"_index":830,"title":{},"body":{"classes/Node.html":{}}}],["adds",{"_index":820,"title":{},"body":{"classes/Node.html":{}}}],["adipisci",{"_index":483,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["adipisicing",{"_index":408,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["alert",{"_index":595,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["align",{"_index":145,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["aliquam",{"_index":562,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["aliquid",{"_index":422,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["amet",{"_index":406,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["angular",{"_index":974,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["aperiam",{"_index":521,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["app.component",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":92,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":67,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecto",{"_index":524,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["array",{"_index":194,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["artifacts",{"_index":996,"title":{},"body":{"index.html":{}}}],["asperiores",{"_index":539,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["assumenda",{"_index":445,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["atque",{"_index":514,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["aut",{"_index":534,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["autem",{"_index":506,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["authorization",{"_index":119,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorization'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["authorization.component.html",{"_index":121,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorization.component.scss",{"_index":120,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorizationcomponent",{"_index":43,"title":{"components/AuthorizationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":141,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["automatically",{"_index":986,"title":{},"body":{"index.html":{}}}],["available",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["background",{"_index":613,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["backgroundcolor",{"_index":391,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["base",{"_index":776,"title":{},"body":{"classes/Node.html":{}}}],["based",{"_index":750,"title":{},"body":{"classes/Line.html":{}}}],["bbb",{"_index":617,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["beatae",{"_index":423,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["behavior",{"_index":284,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["being",{"_index":347,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["blanditiis",{"_index":440,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["block",{"_index":609,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["blur",{"_index":365,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["body",{"_index":601,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["boolean",{"_index":183,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":626,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["both",{"_index":729,"title":{},"body":{"classes/Line.html":{}}}],["bottom",{"_index":155,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"components/RegistrationComponent.html":{}}}],["browse",{"_index":1020,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":104,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":995,"title":{},"body":{"index.html":{}}}],["button",{"_index":335,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["buttonclassselector",{"_index":329,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["buttonlogin",{"_index":147,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["buttonregister",{"_index":915,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["buttonwrapper",{"_index":150,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["canbetoggled",{"_index":791,"title":{},"body":{"classes/Node.html":{}}}],["cancel",{"_index":914,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["canvas",{"_index":165,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["canvas's",{"_index":272,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.add(this.node",{"_index":901,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["canvas.add(this.node.label",{"_index":902,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["canvas.calcoffset",{"_index":281,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.remove(this.node",{"_index":898,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["canvas.remove(this.node.label",{"_index":899,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["canvas.setheight(viewportheight",{"_index":280,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.setwidth(viewportwidth",{"_index":279,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas:fabric.canvas",{"_index":357,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["center",{"_index":146,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Node.html":{},"components/RegistrationComponent.html":{}}}],["change",{"_index":988,"title":{},"body":{"index.html":{}}}],["check",{"_index":1016,"title":{},"body":{"index.html":{}}}],["child",{"_index":821,"title":{},"body":{"classes/Node.html":{}}}],["childline",{"_index":826,"title":{},"body":{"classes/Node.html":{}}}],["childnode",{"_index":822,"title":{},"body":{"classes/Node.html":{}}}],["children",{"_index":804,"title":{},"body":{"classes/Node.html":{}}}],["childs",{"_index":779,"title":{},"body":{"classes/Node.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/Graph.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["classes",{"_index":93,"title":{},"body":{"classes/AppPage.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"overview.html":{}}}],["classes/completednode",{"_index":353,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/graph",{"_index":348,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/label",{"_index":354,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/line",{"_index":355,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/node",{"_index":349,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/uncompletednode",{"_index":351,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cli",{"_index":975,"title":{},"body":{"index.html":{}}}],["closebutton",{"_index":630,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["closesidepanel",{"_index":330,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["closing",{"_index":342,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":990,"title":{},"body":{"index.html":{}}}],["color",{"_index":360,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{}}}],["come",{"_index":812,"title":{},"body":{"classes/Node.html":{}}}],["comes",{"_index":727,"title":{},"body":{"classes/Line.html":{}}}],["comic",{"_index":873,"title":{},"body":{"classes/Node.html":{}}}],["comicsans",{"_index":640,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["commodi",{"_index":424,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["complete",{"_index":671,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["completed",{"_index":221,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completednode",{"_index":352,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/NodeWrapper.html":{},"coverage.html":{}}}],["completednode(id",{"_index":894,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["completednode.init",{"_index":376,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["completednodeids",{"_index":220,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completedshadow",{"_index":662,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["components/authorization/authorization.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/graph",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/registration/registration.component",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["consectetur",{"_index":407,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["consequatur",{"_index":494,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["consequuntur",{"_index":468,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["const",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["constructor(graphinfo",{"_index":171,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["constructor(id",{"_index":796,"title":{},"body":{"classes/Node.html":{},"classes/NodeWrapper.html":{}}}],["constructor(router",{"_index":126,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["constructor(source",{"_index":724,"title":{},"body":{"classes/Line.html":{}}}],["constructor(undefined",{"_index":667,"title":{},"body":{"classes/Label.html":{}}}],["contains",{"_index":196,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["content",{"_index":106,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":687,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["corporis",{"_index":546,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["corrupti",{"_index":568,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["coverage",{"_index":916,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":867,"title":{},"body":{"classes/Node.html":{}}}],["creating",{"_index":228,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["culpa",{"_index":475,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cum",{"_index":466,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cumque",{"_index":565,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cupiditate",{"_index":549,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["currently",{"_index":180,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["cursor",{"_index":192,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["debitis",{"_index":482,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":835,"title":{},"body":{"classes/Node.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["defines",{"_index":748,"title":{},"body":{"classes/Line.html":{}}}],["delectus",{"_index":531,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["deleniti",{"_index":497,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["delta",{"_index":288,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":162,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["description:\"asdasdasd",{"_index":577,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["description:\"lorem",{"_index":402,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["deserunt",{"_index":433,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dev",{"_index":983,"title":{},"body":{"index.html":{}}}],["development",{"_index":978,"title":{},"body":{"index.html":{}}}],["dicta",{"_index":480,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dignissimos",{"_index":554,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":994,"title":{},"body":{"index.html":{}}}],["directory",{"_index":999,"title":{},"body":{"index.html":{}}}],["display",{"_index":608,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dist",{"_index":998,"title":{},"body":{"index.html":{}}}],["distinctio",{"_index":462,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["document",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["documentation",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":404,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolorem",{"_index":528,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["doloremque",{"_index":541,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolores",{"_index":417,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["doloribus",{"_index":420,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolorum",{"_index":425,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["done",{"_index":600,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["done/undone",{"_index":334,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["donebutton",{"_index":336,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["donebutton:this.graph.activenode.node.iscompleted",{"_index":591,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["down",{"_index":683,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["drawn",{"_index":176,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["ducimus",{"_index":520,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["duration",{"_index":622,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dynamic",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1011,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":94,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":98,"title":{},"body":{"classes/AppPage.html":{}}}],["ea",{"_index":500,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eaque",{"_index":559,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["earum",{"_index":509,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eius",{"_index":538,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["element(by.css('app",{"_index":105,"title":{},"body":{"classes/AppPage.html":{}}}],["eligendi",{"_index":495,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["elit",{"_index":409,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["end",{"_index":1010,"title":{},"body":{"index.html":{}}}],["enim",{"_index":535,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["enum",{"_index":848,"title":{},"body":{"classes/Node.html":{}}}],["enumerations",{"_index":967,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":429,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["error",{"_index":525,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["esse",{"_index":519,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["est",{"_index":416,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["et",{"_index":426,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eum",{"_index":505,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eveniet",{"_index":560,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["event",{"_index":237,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evented",{"_index":764,"title":{},"body":{"classes/Line.html":{}}}],["evt",{"_index":293,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evt.clientx",{"_index":299,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evt.clienty",{"_index":301,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["ex",{"_index":518,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["excepturi",{"_index":527,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["execute",{"_index":1007,"title":{},"body":{"index.html":{}}}],["exercitationem",{"_index":478,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["expedita",{"_index":413,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":696,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{}}}],["fabric",{"_index":204,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"dependencies.html":{}}}],["fabric.canvas",{"_index":173,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["fabric.canvas(\"canvas",{"_index":389,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fabric.canvas):void",{"_index":896,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["fabric.circle",{"_index":849,"title":{},"body":{"classes/Node.html":{}}}],["fabric.gradient",{"_index":695,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["fabric.line",{"_index":746,"title":{},"body":{"classes/Line.html":{}}}],["fabric.pattern",{"_index":694,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["fabric.shadow",{"_index":359,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["fabric.text",{"_index":697,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["facere",{"_index":561,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["facilis",{"_index":571,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["false",{"_index":311,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":639,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["files",{"_index":989,"title":{},"body":{"index.html":{}}}],["fill",{"_index":711,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["fires",{"_index":340,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fixed",{"_index":611,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["flag",{"_index":1001,"title":{},"body":{"index.html":{}}}],["float",{"_index":631,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["font",{"_index":158,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"components/RegistrationComponent.html":{}}}],["fontfamily",{"_index":690,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["fontfill",{"_index":693,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["fontsize",{"_index":691,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["formwrapper",{"_index":139,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["fuga",{"_index":490,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fugiat",{"_index":555,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fugit",{"_index":532,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["further",{"_index":1012,"title":{},"body":{"index.html":{}}}],["generate",{"_index":992,"title":{},"body":{"index.html":{}}}],["generated",{"_index":973,"title":{},"body":{"index.html":{}}}],["getting",{"_index":969,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":1015,"title":{},"body":{"index.html":{}}}],["graph",{"_index":46,"title":{"classes/Graph.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"modules.html":{}}}],["graph(graphinfo",{"_index":588,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.node.description",{"_index":597,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.node.iscompleted",{"_index":598,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.node.nodename",{"_index":596,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph:graph",{"_index":356,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graphinfo",{"_index":172,"title":{"interfaces/GraphInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["graphinfo.links.foreach(linkinfo",{"_index":258,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["graphinfo.nodes.foreach(nodeinfo",{"_index":229,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["graphinfo:graphinfo",{"_index":582,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graphviewercomponent",{"_index":45,"title":{"components/GraphViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["handle",{"_index":650,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["handler.service.ts",{"_index":657,"title":{},"body":{"injectables/HttpHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:6",{"_index":658,"title":{},"body":{"injectables/HttpHandlerService.html":{}}}],["harum",{"_index":428,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hasborders",{"_index":708,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["hascontrols",{"_index":707,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["hasrotatingpoint",{"_index":709,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["header",{"_index":157,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["headerwrapper",{"_index":152,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["height",{"_index":605,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["help",{"_index":1013,"title":{},"body":{"index.html":{}}}],["hic",{"_index":503,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hidden",{"_index":603,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hover",{"_index":842,"title":{},"body":{"classes/Node.html":{},"miscellaneous/enumerations.html":{}}}],["hovercursor",{"_index":701,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["http://localhost:4200",{"_index":985,"title":{},"body":{"index.html":{}}}],["httphandlerservice",{"_index":654,"title":{"injectables/HttpHandlerService.html":{}},"body":{"injectables/HttpHandlerService.html":{},"coverage.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["id:1",{"_index":398,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["id:2",{"_index":574,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["id:3",{"_index":579,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["identifier",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":809,"title":{},"body":{"classes/Node.html":{},"miscellaneous/enumerations.html":{}}}],["idlesize",{"_index":780,"title":{},"body":{"classes/Node.html":{}}}],["ids",{"_index":222,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(iscompleted",{"_index":892,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["if(node.node.state",{"_index":244,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(result",{"_index":594,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["if(source.node.iscompleted",{"_index":751,"title":{},"body":{"classes/Line.html":{}}}],["if(target.node.iscompleted",{"_index":752,"title":{},"body":{"classes/Line.html":{}}}],["if(this.activenode",{"_index":238,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(this.activenode.node.canbetoggled",{"_index":318,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(this.node.canbetoggled",{"_index":897,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["if(this.source.node.iscompleted",{"_index":767,"title":{},"body":{"classes/Line.html":{}}}],["if(this.target.node.iscompleted",{"_index":768,"title":{},"body":{"classes/Line.html":{}}}],["illo",{"_index":457,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["illum",{"_index":459,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["impedit",{"_index":544,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["implements",{"_index":117,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inactive",{"_index":742,"title":{},"body":{"classes/Line.html":{}}}],["inactiveshadow",{"_index":716,"title":{},"body":{"classes/Line.html":{}}}],["incidunt",{"_index":547,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["information",{"_index":207,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["init",{"_index":664,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["init(inactiveshadow",{"_index":735,"title":{},"body":{"classes/Line.html":{}}}],["init(uncompletedshadow",{"_index":674,"title":{},"body":{"classes/Label.html":{}}}],["initializes",{"_index":676,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{}}}],["initnode",{"_index":792,"title":{},"body":{"classes/Node.html":{}}}],["initnode(idlesize",{"_index":837,"title":{},"body":{"classes/Node.html":{}}}],["injectable",{"_index":653,"title":{"injectables/HttpHandlerService.html":{}},"body":{"injectables/HttpHandlerService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":655,"title":{},"body":{"injectables/HttpHandlerService.html":{}}}],["inside",{"_index":692,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["instance",{"_index":726,"title":{},"body":{"classes/Line.html":{}}}],["interface",{"_index":206,"title":{"interfaces/GraphInfo.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["interfaces",{"_index":323,"title":{},"body":{"interfaces/GraphInfo.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"overview.html":{}}}],["inventore",{"_index":511,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsa",{"_index":419,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsam",{"_index":526,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsum",{"_index":403,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iscompleted",{"_index":211,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["ispanning",{"_index":166,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["iste",{"_index":572,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["it's",{"_index":800,"title":{},"body":{"classes/Node.html":{}}}],["itaque",{"_index":504,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iure",{"_index":530,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iusto",{"_index":465,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["karma",{"_index":1009,"title":{},"body":{"index.html":{}}}],["label",{"_index":210,"title":{"classes/Label.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["label's",{"_index":670,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label.completedshadow",{"_index":703,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label.init",{"_index":387,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["label.uncompletedshadow",{"_index":702,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label:\"asd",{"_index":401,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["labeloptions",{"_index":668,"title":{"interfaces/LabelOptions.html":{}},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"coverage.html":{}}}],["labore",{"_index":449,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["laboriosam",{"_index":545,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["laborum",{"_index":470,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["last",{"_index":189,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lastposx",{"_index":167,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lastposy",{"_index":168,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["laudantium",{"_index":550,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["left",{"_index":151,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["libero",{"_index":460,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["line",{"_index":203,"title":{"classes/Line.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["line(this.nodes[sourceid",{"_index":263,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["line.activeshadow",{"_index":753,"title":{},"body":{"classes/Line.html":{}}}],["line.color",{"_index":761,"title":{},"body":{"classes/Line.html":{}}}],["line.inactiveshadow",{"_index":755,"title":{},"body":{"classes/Line.html":{}}}],["line.init",{"_index":379,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["line.linewidth",{"_index":763,"title":{},"body":{"classes/Line.html":{}}}],["line.semiactiveshadow",{"_index":754,"title":{},"body":{"classes/Line.html":{}}}],["line.sendtoback",{"_index":270,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lines",{"_index":257,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["lineschild",{"_index":781,"title":{},"body":{"classes/Node.html":{}}}],["lineshadow",{"_index":747,"title":{},"body":{"classes/Line.html":{}}}],["linesparent",{"_index":782,"title":{},"body":{"classes/Node.html":{}}}],["linewidth",{"_index":717,"title":{},"body":{"classes/Line.html":{}}}],["link",{"_index":212,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["link1",{"_index":585,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link1:linkinfo",{"_index":580,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link2",{"_index":586,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link2:linkinfo",{"_index":581,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["linked",{"_index":847,"title":{},"body":{"classes/Node.html":{}}}],["linkinfo",{"_index":213,"title":{"interfaces/LinkInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["linkinfo.sourceid",{"_index":261,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["linkinfo.targetid",{"_index":262,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["links",{"_index":217,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["literal",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lockmovementx",{"_index":704,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["lockmovementy",{"_index":705,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["lockrotation",{"_index":855,"title":{},"body":{"classes/Node.html":{}}}],["login",{"_index":123,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["look",{"_index":679,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["looks",{"_index":739,"title":{},"body":{"classes/Line.html":{}}}],["magnam",{"_index":469,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["magni",{"_index":473,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["maiores",{"_index":533,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["make",{"_index":738,"title":{},"body":{"classes/Line.html":{}}}],["makes",{"_index":678,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["margin",{"_index":140,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["matbuttonmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":642,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["maxime",{"_index":487,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["method",{"_index":339,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Node.html":{}}}],["methods",{"_index":95,"title":{},"body":{"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["minima",{"_index":566,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["minscalelimit",{"_index":710,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["minus",{"_index":479,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["miscellaneous",{"_index":966,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modi",{"_index":474,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["molestiae",{"_index":486,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["molestias",{"_index":463,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["mollitia",{"_index":556,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["more",{"_index":1014,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":285,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseclick",{"_index":236,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseclick.bind(this",{"_index":241,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mousehover",{"_index":243,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mousehover.bind(this",{"_index":247,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseleave",{"_index":249,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseleave.bind(this",{"_index":252,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["moz",{"_index":624,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["natus",{"_index":537,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["navigate",{"_index":984,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["necessitatibus",{"_index":564,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nemo",{"_index":458,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["neque",{"_index":438,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nesciunt",{"_index":461,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["new",{"_index":224,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":981,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":124,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["nihil",{"_index":508,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nisi",{"_index":485,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nobis",{"_index":444,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["node",{"_index":179,"title":{"classes/Node.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"coverage.html":{}}}],["node's",{"_index":840,"title":{},"body":{"classes/Node.html":{}}}],["node.activesize",{"_index":852,"title":{},"body":{"classes/Node.html":{}}}],["node.canvas",{"_index":878,"title":{},"body":{"classes/Node.html":{}}}],["node.fill",{"_index":854,"title":{},"body":{"classes/Node.html":{}}}],["node.idlesize",{"_index":853,"title":{},"body":{"classes/Node.html":{}}}],["node.initnode(30",{"_index":393,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["node.node.id",{"_index":260,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.on(\"mouseout",{"_index":253,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.on(\"mouseover",{"_index":248,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.on(\"mouseup",{"_index":242,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.setactive",{"_index":240,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.sethover",{"_index":246,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.node.setidle",{"_index":251,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo",{"_index":208,"title":{"interfaces/NodeInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["nodeinfo.description",{"_index":232,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.iscompleted",{"_index":235,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.label",{"_index":231,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.x",{"_index":233,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.y",{"_index":234,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo2",{"_index":583,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo2:nodeinfo",{"_index":573,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo3",{"_index":584,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo3:nodeinfo",{"_index":578,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo:nodeinfo",{"_index":397,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodename",{"_index":783,"title":{},"body":{"classes/Node.html":{}}}],["nodes",{"_index":169,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["nodestates",{"_index":202,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"miscellaneous/enumerations.html":{}}}],["nodestates.active",{"_index":851,"title":{},"body":{"classes/Node.html":{}}}],["nodestates.hover",{"_index":250,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodestates.idle",{"_index":245,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["nodewrapper",{"_index":177,"title":{"classes/NodeWrapper.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"coverage.html":{}}}],["nodewrapper(nodeinfo.id",{"_index":230,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["non",{"_index":421,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["none",{"_index":633,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nostrum",{"_index":499,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["null",{"_index":227,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nulla",{"_index":415,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["number",{"_index":187,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["numquam",{"_index":441,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["o",{"_index":625,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["obcaecati",{"_index":435,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["obj.setcoords",{"_index":307,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["object",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":175,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["odio",{"_index":455,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["odit",{"_index":548,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["officia",{"_index":454,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["officiis",{"_index":492,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["omnis",{"_index":552,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["one",{"_index":868,"title":{},"body":{"classes/Node.html":{}}}],["oninit",{"_index":118,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["opt",{"_index":287,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.e",{"_index":294,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.e.deltay",{"_index":289,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.target",{"_index":295,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["optio",{"_index":431,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["optional",{"_index":130,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"classes/Label.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["options",{"_index":684,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["originx",{"_index":699,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["originy",{"_index":700,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{}}}],["otherwise",{"_index":866,"title":{},"body":{"classes/Node.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":634,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["overflow",{"_index":602,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["overview",{"_index":1022,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":949,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":619,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["pan",{"_index":303,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["pan.bind(this",{"_index":309,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["panning",{"_index":186,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["param",{"_index":218,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["parameters",{"_index":129,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["parent",{"_index":814,"title":{},"body":{"classes/Node.html":{}}}],["parentline",{"_index":832,"title":{},"body":{"classes/Node.html":{}}}],["parentnode",{"_index":829,"title":{},"body":{"classes/Node.html":{}}}],["parents",{"_index":784,"title":{},"body":{"classes/Node.html":{}}}],["passed",{"_index":865,"title":{},"body":{"classes/Node.html":{}}}],["passes",{"_index":682,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["password",{"_index":137,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perferendis",{"_index":442,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["perspiciatis",{"_index":481,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["placeat",{"_index":410,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["pointer",{"_index":635,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Node.html":{}}}],["porro",{"_index":443,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["position",{"_index":191,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["possimus",{"_index":412,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["posx",{"_index":688,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{}}}],["posy",{"_index":689,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{}}}],["praesentium",{"_index":536,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["private",{"_index":134,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["prod",{"_index":1000,"title":{},"body":{"index.html":{}}}],["production",{"_index":1002,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":972,"title":{},"body":{"index.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["protected",{"_index":777,"title":{},"body":{"classes/Node.html":{}}}],["protractor",{"_index":102,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":659,"title":{},"body":{"injectables/HttpHandlerService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":122,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["quae",{"_index":471,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quaerat",{"_index":529,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quam",{"_index":451,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quas",{"_index":498,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quasi",{"_index":515,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["qui",{"_index":517,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quia",{"_index":569,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quibusdam",{"_index":513,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quidem",{"_index":434,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quis",{"_index":542,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quisquam",{"_index":510,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quo",{"_index":522,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quod",{"_index":456,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quos",{"_index":558,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["radius",{"_index":627,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Node.html":{}}}],["ratione",{"_index":501,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["readme",{"_index":1017,"title":{},"body":{"index.html":{}}}],["recusandae",{"_index":427,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["register",{"_index":907,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":906,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":905,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":48,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reiciendis",{"_index":567,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["relative",{"_index":604,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reload",{"_index":987,"title":{},"body":{"index.html":{}}}],["rem",{"_index":453,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["repeat",{"_index":913,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["repellat",{"_index":411,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["repellendus",{"_index":476,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reprehenderit",{"_index":540,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["represents",{"_index":163,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["repudiandae",{"_index":464,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["require",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rerum",{"_index":523,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":274,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["resize.bind(this",{"_index":282,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["resizing",{"_index":273,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["result",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":103,"title":{},"body":{"classes/AppPage.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["returns",{"_index":99,"title":{},"body":{"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["rgb(220",{"_index":876,"title":{},"body":{"classes/Node.html":{}}}],["rgb(255",{"_index":385,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(30",{"_index":395,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(40,40,40",{"_index":392,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(80",{"_index":615,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(15",{"_index":367,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(245",{"_index":371,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(255",{"_index":361,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(57",{"_index":377,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["right",{"_index":148,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/HttpHandlerService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["router",{"_index":127,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["router:router",{"_index":911,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["routermodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":110,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":980,"title":{},"body":{"index.html":{}}}],["running",{"_index":1003,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["saepe",{"_index":439,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sans",{"_index":874,"title":{},"body":{"classes/Node.html":{}}}],["sapiente",{"_index":450,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["scaffolding",{"_index":991,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":286,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["scrollbar",{"_index":647,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sed",{"_index":493,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["selectable",{"_index":706,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{}}}],["selected",{"_index":181,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["selection",{"_index":390,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["semiactive",{"_index":744,"title":{},"body":{"classes/Line.html":{}}}],["semiactiveshadow",{"_index":718,"title":{},"body":{"classes/Line.html":{}}}],["sequi",{"_index":507,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["serve",{"_index":982,"title":{},"body":{"index.html":{}}}],["server",{"_index":979,"title":{},"body":{"index.html":{}}}],["set",{"_index":219,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["setactive",{"_index":720,"title":{},"body":{"classes/Line.html":{},"classes/Node.html":{}}}],["setcompleted",{"_index":665,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["sethover",{"_index":793,"title":{},"body":{"classes/Node.html":{}}}],["setidle",{"_index":794,"title":{},"body":{"classes/Node.html":{}}}],["setinactive",{"_index":721,"title":{},"body":{"classes/Line.html":{}}}],["sets",{"_index":271,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["setsemiactive",{"_index":722,"title":{},"body":{"classes/Line.html":{}}}],["setuncompleted",{"_index":666,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["shadow",{"_index":632,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["shown",{"_index":686,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["shows",{"_index":185,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["sidepanel",{"_index":341,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sign",{"_index":136,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["similique",{"_index":488,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sint",{"_index":418,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sit",{"_index":405,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["size",{"_index":159,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"components/RegistrationComponent.html":{}}}],["soluta",{"_index":551,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"injectables/HttpHandlerService.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["source.node.top",{"_index":757,"title":{},"body":{"classes/Line.html":{}}}],["sourceid",{"_index":214,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["span')).gettext",{"_index":107,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../node.ts",{"_index":968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/completednode.ts",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/graph.ts",{"_index":161,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["src/app/classes/graph.ts:212",{"_index":197,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:41",{"_index":195,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:45",{"_index":178,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:49",{"_index":182,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:53",{"_index":184,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:57",{"_index":188,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:61",{"_index":174,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/label.ts",{"_index":660,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"coverage.html":{}}}],["src/app/classes/label.ts:101",{"_index":677,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:108",{"_index":680,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:44",{"_index":672,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:49",{"_index":669,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:90",{"_index":675,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/line.ts",{"_index":714,"title":{},"body":{"classes/Line.html":{},"coverage.html":{}}}],["src/app/classes/line.ts:109",{"_index":737,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:11",{"_index":731,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:116",{"_index":743,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:123",{"_index":741,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:15",{"_index":733,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:19",{"_index":728,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:23",{"_index":730,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:27",{"_index":732,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:31",{"_index":734,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:35",{"_index":725,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:78",{"_index":736,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:92",{"_index":745,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/node",{"_index":887,"title":{},"body":{"classes/NodeWrapper.html":{},"coverage.html":{}}}],["src/app/classes/node.ts",{"_index":775,"title":{},"body":{"classes/Node.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/classes/node.ts:146",{"_index":838,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:162",{"_index":828,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:172",{"_index":819,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:182",{"_index":831,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:19",{"_index":808,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:192",{"_index":825,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:201",{"_index":845,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:215",{"_index":833,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:219",{"_index":844,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:223",{"_index":843,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:227",{"_index":841,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:23",{"_index":799,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:231",{"_index":839,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:27",{"_index":806,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:31",{"_index":801,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:36",{"_index":811,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:40",{"_index":807,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:44",{"_index":815,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:48",{"_index":805,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:52",{"_index":810,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:56",{"_index":817,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:61",{"_index":816,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:65",{"_index":802,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:69",{"_index":813,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/node.ts:73",{"_index":797,"title":{},"body":{"classes/Node.html":{}}}],["src/app/classes/uncompletednode.ts",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["src/app/components/authorization/authorization.component.ts",{"_index":116,"title":{},"body":{"components/AuthorizationComponent.html":{},"coverage.html":{}}}],["src/app/components/authorization/authorization.component.ts:15",{"_index":133,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["src/app/components/authorization/authorization.component.ts:19",{"_index":131,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["src/app/components/authorization/authorization.component.ts:9",{"_index":128,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["src/app/components/graph",{"_index":324,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts",{"_index":904,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts:13",{"_index":909,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:16",{"_index":910,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:9",{"_index":908,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/shared/http",{"_index":656,"title":{},"body":{"injectables/HttpHandlerService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":970,"title":{"index.html":{}},"body":{}}],["startpanning",{"_index":314,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["startpanning.bind(this",{"_index":302,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["state",{"_index":785,"title":{},"body":{"classes/Node.html":{},"classes/NodeWrapper.html":{}}}],["statements",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":661,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{}}}],["stoppanning",{"_index":310,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stoppanning.bind(this",{"_index":312,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stored",{"_index":997,"title":{},"body":{"index.html":{}}}],["stores",{"_index":803,"title":{},"body":{"classes/Node.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["stroke",{"_index":760,"title":{},"body":{"classes/Line.html":{}}}],["strokewidth",{"_index":762,"title":{},"body":{"classes/Line.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["successfull",{"_index":201,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["sunt",{"_index":563,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["super",{"_index":850,"title":{},"body":{"classes/Node.html":{}}}],["super([source.node.left",{"_index":756,"title":{},"body":{"classes/Line.html":{}}}],["super(text",{"_index":698,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["support",{"_index":1018,"title":{},"body":{"modules.html":{}}}],["suscipit",{"_index":436,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["svg",{"_index":1019,"title":{},"body":{"modules.html":{}}}],["table",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":719,"title":{},"body":{"classes/Line.html":{}}}],["target.node.left",{"_index":758,"title":{},"body":{"classes/Line.html":{}}}],["target.node.top",{"_index":759,"title":{},"body":{"classes/Line.html":{}}}],["targetid",{"_index":215,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["tempore",{"_index":447,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["temporibus",{"_index":512,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["tenetur",{"_index":491,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["test",{"_index":1006,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1005,"title":{},"body":{"index.html":{}}}],["text",{"_index":144,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"components/RegistrationComponent.html":{}}}],["this.activenode",{"_index":226,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.node.on(\"mouseout",{"_index":322,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.node.on(\"mouseover",{"_index":321,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.node.on(\"mouseup",{"_index":320,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.node.setidle",{"_index":239,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.toggle(this.canvas",{"_index":319,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas",{"_index":225,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(line",{"_index":269,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(node.node",{"_index":255,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(node.node.label",{"_index":256,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.foreachobject((obj",{"_index":306,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.getzoom",{"_index":290,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"before:render",{"_index":283,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:down",{"_index":313,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:move",{"_index":316,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:up",{"_index":315,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.renderall",{"_index":317,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.requestrenderall",{"_index":308,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.viewporttransform[4",{"_index":304,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.viewporttransform[5",{"_index":305,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.childs",{"_index":857,"title":{},"body":{"classes/Node.html":{}}}],["this.childs.includes(childnode",{"_index":881,"title":{},"body":{"classes/Node.html":{}}}],["this.childs.push(childnode",{"_index":882,"title":{},"body":{"classes/Node.html":{}}}],["this.description",{"_index":862,"title":{},"body":{"classes/Node.html":{}}}],["this.graph",{"_index":587,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.activenode",{"_index":590,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.activenode.node.setidle",{"_index":589,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.toggleactivenode",{"_index":593,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.id",{"_index":860,"title":{},"body":{"classes/Node.html":{}}}],["this.iscompleted",{"_index":863,"title":{},"body":{"classes/Node.html":{}}}],["this.ispanning",{"_index":296,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.label",{"_index":869,"title":{},"body":{"classes/Node.html":{}}}],["this.lastposx",{"_index":298,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.lastposy",{"_index":300,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.lineschild",{"_index":858,"title":{},"body":{"classes/Node.html":{}}}],["this.lineschild.includes(childline",{"_index":885,"title":{},"body":{"classes/Node.html":{}}}],["this.lineschild.push(childline",{"_index":886,"title":{},"body":{"classes/Node.html":{}}}],["this.linesparent",{"_index":859,"title":{},"body":{"classes/Node.html":{}}}],["this.linesparent.includes(parentline",{"_index":883,"title":{},"body":{"classes/Node.html":{}}}],["this.linesparent.push(parentline",{"_index":884,"title":{},"body":{"classes/Node.html":{}}}],["this.node",{"_index":893,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["this.node.toggle",{"_index":900,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["this.node.updatelines",{"_index":903,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["this.nodename",{"_index":861,"title":{},"body":{"classes/Node.html":{}}}],["this.nodes",{"_index":223,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.findindex",{"_index":259,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.push(node",{"_index":254,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[sourceid].node.addchild(this.nodes[targetid",{"_index":265,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[sourceid].node.addchildline(line",{"_index":266,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid",{"_index":264,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid].node.addparent(this.nodes[sourceid",{"_index":267,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid].node.addparentline(line",{"_index":268,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.parents",{"_index":856,"title":{},"body":{"classes/Node.html":{}}}],["this.parents.includes(parentnode",{"_index":879,"title":{},"body":{"classes/Node.html":{}}}],["this.parents.push(parentnode",{"_index":880,"title":{},"body":{"classes/Node.html":{}}}],["this.radius",{"_index":870,"title":{},"body":{"classes/Node.html":{}}}],["this.router.navigate",{"_index":912,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.router.navigate([\"/graph",{"_index":135,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["this.setactive",{"_index":769,"title":{},"body":{"classes/Line.html":{}}}],["this.setinactive",{"_index":771,"title":{},"body":{"classes/Line.html":{}}}],["this.setsemiactive",{"_index":770,"title":{},"body":{"classes/Line.html":{}}}],["this.setshadow(label.completedshadow",{"_index":712,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["this.setshadow(label.uncompletedshadow",{"_index":713,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["this.setshadow(line.activeshadow",{"_index":772,"title":{},"body":{"classes/Line.html":{}}}],["this.setshadow(line.inactiveshadow",{"_index":774,"title":{},"body":{"classes/Line.html":{}}}],["this.setshadow(line.semiactiveshadow",{"_index":773,"title":{},"body":{"classes/Line.html":{}}}],["this.source",{"_index":765,"title":{},"body":{"classes/Line.html":{}}}],["this.state",{"_index":864,"title":{},"body":{"classes/Node.html":{}}}],["this.target",{"_index":766,"title":{},"body":{"classes/Line.html":{}}}],["thst",{"_index":685,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["thumb",{"_index":651,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":199,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{}}}],["toggle(canvas",{"_index":890,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["toggleactivenode",{"_index":170,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["togglebutton",{"_index":644,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["toggled",{"_index":836,"title":{},"body":{"classes/Node.html":{}}}],["toggles",{"_index":345,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["toggleselectednode",{"_index":331,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["top",{"_index":153,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Node.html":{},"components/RegistrationComponent.html":{}}}],["totam",{"_index":543,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["track",{"_index":649,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["transition",{"_index":621,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["tries",{"_index":198,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["true",{"_index":297,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ullam",{"_index":557,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["uncomplete",{"_index":673,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["uncompleted",{"_index":681,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["uncompletednode",{"_index":350,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/NodeWrapper.html":{},"coverage.html":{}}}],["uncompletednode(id",{"_index":895,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["uncompletednode.init",{"_index":358,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["uncompletedshadow",{"_index":663,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["unde",{"_index":452,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undone",{"_index":599,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undonebutton",{"_index":337,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undonebutton:this.graph.activenode.node.iscompleted",{"_index":592,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["unit",{"_index":1004,"title":{},"body":{"index.html":{}}}],["up",{"_index":138,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["updatelines",{"_index":795,"title":{},"body":{"classes/Node.html":{}}}],["updates",{"_index":846,"title":{},"body":{"classes/Node.html":{}}}],["updatevisuals",{"_index":723,"title":{},"body":{"classes/Line.html":{}}}],["use",{"_index":993,"title":{},"body":{"index.html":{}}}],["used",{"_index":834,"title":{},"body":{"classes/Node.html":{}}}],["ut",{"_index":448,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1025,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":502,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["velit",{"_index":489,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["veniam",{"_index":437,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["veritatis",{"_index":414,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["vero",{"_index":553,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["version",{"_index":976,"title":{},"body":{"index.html":{}}}],["via",{"_index":1008,"title":{},"body":{"index.html":{}}}],["viewer",{"_index":326,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["viewer.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["viewer.component.html",{"_index":328,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.scss",{"_index":327,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts",{"_index":325,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:101",{"_index":333,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:112",{"_index":344,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:20",{"_index":346,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:24",{"_index":332,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:72",{"_index":343,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:93",{"_index":338,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer/graph",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["viewportheight",{"_index":277,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["viewportwidth",{"_index":275,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["visuals",{"_index":749,"title":{},"body":{"classes/Line.html":{},"classes/Node.html":{}}}],["void",{"_index":132,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"classes/Node.html":{},"classes/NodeWrapper.html":{},"components/RegistrationComponent.html":{}}}],["voluptas",{"_index":430,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptate",{"_index":432,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatem",{"_index":496,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptates",{"_index":570,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatibus",{"_index":477,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatum",{"_index":516,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["webkit",{"_index":620,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["whether",{"_index":200,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["whole",{"_index":216,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["width",{"_index":142,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"components/RegistrationComponent.html":{}}}],["window.innerheight",{"_index":278,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["window.innerwidth",{"_index":276,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["wrapper",{"_index":205,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["wrapper.ts",{"_index":888,"title":{},"body":{"classes/NodeWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:24",{"_index":891,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["wrapper.ts:6",{"_index":889,"title":{},"body":{"classes/NodeWrapper.html":{}}}],["x",{"_index":190,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["x:100",{"_index":399,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["x:200",{"_index":575,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["y",{"_index":193,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"classes/Node.html":{},"interfaces/NodeInfo.html":{}}}],["y:100",{"_index":400,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["y:200",{"_index":576,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["yes",{"_index":798,"title":{},"body":{"classes/Node.html":{}}}],["z",{"_index":610,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["zone.js",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Achievy'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Achievy';\n}\n\n    \n\n    \n        \n\n\n  \n  \n  Document\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthorizationComponent\n\nAuthorizationComponent\n\nAppModule -->\n\nAuthorizationComponent->AppModule\n\n\n\n\n\nGraphViewerComponent\n\nGraphViewerComponent\n\nAppModule -->\n\nGraphViewerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthorizationComponent\n                        \n                        \n                            GraphViewerComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GraphViewerComponent } from './components/graph-viewer/graph-viewer.component';\nimport { AuthorizationComponent } from './components/authorization/authorization.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphViewerComponent,\n    AuthorizationComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationComponent } from './components/authorization/authorization.component';\nimport { GraphViewerComponent } from './components/graph-viewer/graph-viewer.component';\nimport { RegistrationComponent } from './components/registration/registration.component'\n\nconst routes: Routes = [\n  {path: '', component: AuthorizationComponent},\n  {path: 'graph', component: GraphViewerComponent},\n  {path: 'registration', component: RegistrationComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthorizationComponent.html":{"url":"components/AuthorizationComponent.html","title":"component - AuthorizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthorizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/authorization/authorization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authorization\n            \n\n            \n                styleUrls\n                ./authorization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./authorization.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/authorization/authorization.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/authorization/authorization.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/authorization/authorization.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.scss']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public Login(){\n    this.router.navigate([\"/graph\"]);\n  }\n\n  \n\n}\n\n    \n\n    \n        \n\n    \n    \n    Document\n\n\n    \n        \n            Sign in\n        \n        \n            Login\n            \n        \n        \n        \n            Password\n            \n        \n        \n        \n            Sign in\n            Sign up\n        \n      \n\n\n    \n\n    \n                \n                    ./authorization.component.scss\n                \n                .formWrapper{\n    margin: auto;\n    width: 200px;\n    text-align: center;\n}\n\n.buttonLogin{\n    margin-right: 10px;\n}\n\n.buttonWrapper{\n    text-align: left;\n}\n\n.headerWrapper{\n    text-align: left;\n    margin-top: 15px;\n    margin-bottom: 20px;\n}\n\n.header{\n    font-size: 45px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document                        Sign in                            Login                                                Password                                                Sign in            Sign up              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthorizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeNode\n                            \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Private\n                                isPanning\n                            \n                            \n                                    Private\n                                lastPosX\n                            \n                            \n                                    Private\n                                lastPosY\n                            \n                            \n                                    Private\n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleActiveNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graphInfo: GraphInfo, canvas: fabric.Canvas)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/graph.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor of the graph\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        graphInfo\n                                                  \n                                                        \n                                                                        GraphInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                All info about graph.\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    fabric.Canvas\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Canvas on which objects are drawn.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:45\n                            \n                        \n\n                \n                    \n                        Node that is currently selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Canvas\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:49\n                            \n                        \n\n                \n                    \n                        Canvas on which objects are drawn.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isPanning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:53\n                            \n                        \n\n                \n                    \n                        Shows if canvas is panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastPosX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:57\n                            \n                        \n\n                \n                    \n                        Last X position of the cursor when panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastPosY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:61\n                            \n                        \n\n                \n                    \n                        Last Y position of the cursor when panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:41\n                            \n                        \n\n                \n                    \n                        Array that contains all nodes.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleActiveNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleActiveNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/graph.ts:212\n                \n            \n\n\n            \n                \n                    Tries to toggle selected node.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether it was successfull.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\nimport { NodeWrapper } from './node-wrapper';\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string,\n    \"isCompleted\": boolean\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: NodeWrapper;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: NodeWrapper = new NodeWrapper(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y, nodeInfo.isCompleted);\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            node.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            node.node.on(\"mouseout\", mouseLeave);\n\n            this.nodes.push(node);\n            this.canvas.add(node.node);\n            this.canvas.add(node.node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChildLine(line);\n            this.nodes[targetId].node.AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].node.AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.node.CanBeToggled()){\n            this.activeNode.Toggle(this.canvas);\n            let node = this.activeNode;\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            this.activeNode.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            this.activeNode.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            this.activeNode.node.on(\"mouseout\", mouseLeave);\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphInfo.html":{"url":"interfaces/GraphInfo.html","title":"interface - GraphInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about whole graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         LinkInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LinkInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         NodeInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\nimport { NodeWrapper } from './node-wrapper';\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string,\n    \"isCompleted\": boolean\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: NodeWrapper;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: NodeWrapper = new NodeWrapper(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y, nodeInfo.isCompleted);\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            node.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            node.node.on(\"mouseout\", mouseLeave);\n\n            this.nodes.push(node);\n            this.canvas.add(node.node);\n            this.canvas.add(node.node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChildLine(line);\n            this.nodes[targetId].node.AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].node.AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.node.CanBeToggled()){\n            this.activeNode.Toggle(this.canvas);\n            let node = this.activeNode;\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            this.activeNode.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            this.activeNode.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            this.activeNode.node.on(\"mouseout\", mouseLeave);\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphViewerComponent.html":{"url":"components/GraphViewerComponent.html","title":"component - GraphViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/graph-viewer/graph-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graph-viewer\n            \n\n            \n                styleUrls\n                ./graph-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonClassSelector\n                            \n                            \n                                    Public\n                                closeSidePanel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleSelectedNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/graph-viewer/graph-viewer.component.ts:24\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buttonClassSelector\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClassSelector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:101\n                \n            \n\n\n            \n                \n                    Selector of classes for done/undone button.\n\n\n                    \n                        Returns :     { doneButton: boolean; undoneButton: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidePanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:93\n                \n            \n\n\n            \n                \n                    Method that fires when sidepanel is closing.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSelectedNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSelectedNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:112\n                \n            \n\n\n            \n                \n                    Toggles selected node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Canvas\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:24\n                            \n                        \n\n                \n                    \n                        Canvas on which objects are drawn.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:20\n                            \n                        \n\n                \n                    \n                        Contains all objects that are being drawn.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Graph, GraphInfo, LinkInfo, NodeInfo } from \"../../classes/graph\";\nimport { Node } from \"../../classes/node\";\nimport { UncompletedNode } from \"../../classes/uncompletedNode\";\nimport { CompletedNode } from \"../../classes/completedNode\";\nimport { Label } from \"../../classes/label\";\nimport { fabric } from \"fabric\";\nimport { Line } from \"../../classes/line\";\n@Component({\n  selector: 'app-graph-viewer',\n  templateUrl: './graph-viewer.component.html',\n  styleUrls: ['./graph-viewer.component.scss']\n})\n\n\nexport class GraphViewerComponent implements OnInit {\n  /**\n   * Contains all objects that are being drawn.\n   */\n  public graph:Graph;\n  /**\n   * Canvas on which objects are drawn.\n   */\n  private canvas:fabric.Canvas;\n  constructor() {\n    UncompletedNode.Init(\n      new fabric.Shadow({\n        color: \"rgba(255, 100, 255, 1)\",\n        blur: 18,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(15, 15, 15, 0.9)\",\n        blur: 10,\n      }),\n      \"rgba(245, 90, 245, 1)\",\n      \"rgba(245, 90, 245, 1)\",\n      0.975,\n      0.975,\n      3\n    );\n    CompletedNode.Init(\n      new fabric.Shadow({\n        color: \"rgba(57, 255, 20, 1)\",\n        blur: 18,\n      }),\n      \"rgba(57, 255, 20, 1)\",\n      3,\n      0.975\n    )\n    Line.Init(\n      new fabric.Shadow({\n        color: \"rgba(255, 100, 255, 0.7)\",\n        blur: 12,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(255, 211, 25, 0.7)\",\n        blur: 12,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(57, 255, 20, 0.65)\",\n        blur: 12,\n      }),\n      \"rgb(255, 255, 255)\",\n      2\n    );\n    Label.Init(\n      \"rgba(255, 100, 255, 0.9) 2px 2px 2px\",\n      \"rgba(57, 255, 20, 0.9) 2px 2px 2px\"\n    )\n  }\n\n  ngOnInit(): void {\n    this.canvas = new fabric.Canvas(\"canvas\", {\n      selection: false,\n      backgroundColor: \"rgb(40,40,40)\",\n    });\n    Node.InitNode(30, 39, \"rgb(30, 30, 30)\", this.canvas);\n    \n    \n\n    let nodeInfo:NodeInfo = {id:1, x:100, y:100, label:\"Asd\", description:\"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Placeat, repellat possimus expedita veritatis, nulla est amet dolores sint ipsa id doloribus non in aliquid beatae commodi at dolorum. Et recusandae harum eos voluptas optio voluptate veritatis deserunt quidem, obcaecati suscipit veniam neque saepe blanditiis numquam perferendis! Porro nobis assumenda ab! Placeat tempore ut labore quidem sapiente consectetur quam, unde blanditiis rem officia odio quod illo nemo illum libero nesciunt distinctio molestias repudiandae veritatis iusto cum ad consequuntur, magnam laborum. Suscipit quae optio accusamus magni ipsum ad modi! Culpa repellendus voluptatibus blanditiis exercitationem ab! Minus dicta perspiciatis optio debitis adipisci, porro accusantium voluptas quod rem non, nisi molestiae maxime at numquam similique velit. Assumenda fuga cum tenetur est officiis dicta quam sed, consequatur eligendi voluptatem molestiae deleniti libero. Id commodi, quas minus nostrum ea obcaecati tempore assumenda ratione veniam recusandae tenetur, possimus molestias nobis vel hic unde consectetur itaque eum quidem dicta autem. Repellat, itaque aliquid. Quidem et sequi nihil earum autem, quisquam numquam repellendus ratione id ab adipisci, inventore, sed illo temporibus quibusdam atque illum nisi voluptatem quasi fuga voluptatum! Quae qui ex veritatis consequuntur esse ab, ducimus in aperiam est ut similique perferendis quo rerum saepe, architecto illo quasi error ipsam excepturi magnam dolorem eos. Ducimus quaerat iure accusantium delectus fugit maiores. Non, inventore rem ex iusto repellat sapiente, quasi nostrum tenetur harum aut ut amet enim praesentium nulla, porro obcaecati error perferendis natus eius veritatis asperiores. Modi, numquam reprehenderit. Doloremque earum ad quis debitis placeat assumenda sint totam impedit rem officia laboriosam iure quod corporis esse molestias amet incidunt recusandae accusamus quibusdam, odit ipsam unde tenetur saepe cupiditate. Et quas dolores veritatis, laudantium voluptatem molestiae totam quasi in magnam sequi labore quis assumenda quod soluta omnis obcaecati est aut. Aut accusantium aperiam dolorem vero, autem maiores dignissimos illum delectus. Debitis placeat, ut voluptate doloremque fugiat totam eligendi autem molestias vel ex expedita sapiente dolorum magnam fuga aliquid nesciunt sequi accusamus et! Porro, officia nihil. Nemo nisi modi consequatur vero obcaecati! Illum quod quaerat mollitia placeat? Fugiat eum, sint similique quae, ipsa ullam corporis, nostrum quos omnis molestias quas. Delectus eaque hic quidem amet. Sed nisi saepe ullam eveniet ducimus, soluta molestias deserunt veniam quo. Est facere voluptatum dicta molestias, quisquam odio quo aliquam. Quisquam possimus inventore reprehenderit quos a iure voluptatum, repellat labore commodi aliquid tempore sunt aperiam vero ipsam dignissimos maxime fugiat cupiditate repudiandae! Qui error veniam nemo porro repellendus, molestiae aliquid tenetur laborum illo? Ut perspiciatis tempore necessitatibus excepturi fuga praesentium assumenda veritatis rerum cumque. Aliquam odio architecto rerum, harum, vel magni cum voluptate, temporibus ut minima reiciendis ipsa repellat doloribus autem ipsum laborum accusamus ex! Voluptatum ullam fugit autem nostrum soluta repudiandae error, corrupti quia voluptates, enim delectus. Quisquam fuga corrupti id impedit maiores, perspiciatis quos ratione facilis enim facere obcaecati a quasi soluta architecto quia deleniti quas nobis? Quod suscipit ad illo. Consequatur incidunt cumque odit possimus, recusandae aliquam laboriosam voluptate nihil sint quisquam esse, ex facere, odio voluptatibus facilis obcaecati modi. Iste, minus.\", isCompleted: false};\n    let nodeInfo2:NodeInfo = {id:2, x:200, y:200, label:\"Asd\", description:\"asdasdasd\", isCompleted: false};\n    let nodeInfo3:NodeInfo = {id:3, x:100, y:200, label:\"Asd\", description:\"asdasdasd\", isCompleted: false};\n    let link1:LinkInfo = {sourceId: 1, targetId: 2};\n    let link2:LinkInfo = {sourceId: 2, targetId: 3};\n    let graphInfo:GraphInfo = {nodes: [nodeInfo, nodeInfo2, nodeInfo3], links: [link1, link2]};\n    this.graph = new Graph(graphInfo, this.canvas);\n  }\n\n  /**\n   * Method that fires when sidepanel is closing.\n   */\n  public closeSidePanel(){\n    this.graph.activeNode.node.SetIdle();\n    this.graph.activeNode = null;\n  }\n  \n  /**\n   * Selector of classes for done/undone button.\n   */\n  public buttonClassSelector(){\n    let classes = {\n      doneButton:this.graph.activeNode.node.isCompleted === false,\n      undoneButton:this.graph.activeNode.node.isCompleted === true,\n    };\n    return classes;\n  }\n\n  /**\n   * Toggles selected node.\n   */\n  public toggleSelectedNode(){\n    let result = this.graph.toggleActiveNode();\n    if(result === false){\n      alert(\"Вы не можете совершить данное действие.\");\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n    Document\n\n\n    \n        \n            \n                \n                    {{graph.activeNode.node.nodeName}}\n                    X\n                \n                Описание:\n                {{graph.activeNode.node.description}}\n                {{graph.activeNode.node.isCompleted === true ? \"Undone\" : \"Done\"}}\n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./graph-viewer.component.scss\n                \n                body {\n    overflow: hidden;\n}\n  \n.wrapper {\n    position: relative;\n    overflow: hidden;\n}\n\n.canvas-wrapper {\n    height: 100vh;\n    width: 100vw;\n}\n\ncanvas {\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n\n.sidepanel {\n    z-index: 1;\n    position: fixed; /* положение */\n    top: 100px; /* отступ сверху */\n    background: #505050;\n    background-color: rgb(80, 80, 80); /* цвет фона */\n    color: #bbb; /* цвет текста */\n    width: 200px; /* ширина блока */\n    height: 80vh; /* высота блока */\n    padding: 10px; /* отступы от границ внутри блока */\n    text-align: left; /* выравнивание текста */\n  \n    -webkit-transition-duration: 0.3s; /* анимационное выдвижение для всех браузеров*/\n    -moz-transition-duration: 0.3s;\n    -o-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n  \n    -webkit-border-radius: 0 5px 5px 0; /* закругление границ для всех браузеров*/\n    -moz-border-radius: 0 5px 5px 0;\n    border-radius: 0 5px 5px 0;\n}\n\n.closeButton {\n    float: right;\n    text-shadow: none;\n    outline: 0;\n    cursor: pointer;\n}\n\n.header-wrapper{\n    margin-bottom: 5px;\n}\n.header{\n    font-size: 2.5em;\n}\n\n.description-header{\n    font-size: 1.7em;\n    margin-bottom: 3px;\n}\n\n.description-wrapper{\n    font-family: 'ComicSans';\n    overflow-y: auto;\n    //height: 70.5vh;\n    max-height: 88%;\n}\n\n.toggleButton{\n    margin-top: 5px;\n    width: 195px;\n    height: 30px;\n}\n\n/* width */\n::-webkit-scrollbar {\n    background-color: rgb(80, 80, 80);\n    width: 4px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 4px;\n  }\n  \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: #333;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document                                                            {{graph.activeNode.node.nodeName}}                    X                                Описание:                {{graph.activeNode.node.description}}                {{graph.activeNode.node.isCompleted === true ? \"Undone\" : \"Done\"}}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpHandlerService.html":{"url":"injectables/HttpHandlerService.html","title":"injectable - HttpHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/http-handler.service.ts\n        \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/http-handler.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpHandlerService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Label.html":{"url":"classes/Label.html","title":"class - Label","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/label.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents label.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                completedShadow\n                            \n                            \n                                    Private\n                                    Static\n                                uncompletedShadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Init\n                            \n                            \n                                    Public\n                                SetCompleted\n                            \n                            \n                                    Public\n                                SetUncompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: LabelOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/label.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor of the label\nParameters for the label.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        LabelOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            completedShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Shadow | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/label.ts:49\n                            \n                        \n\n                \n                    \n                        Shadow of the text when label's node is complete.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uncompletedShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Shadow | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/label.ts:44\n                            \n                        \n\n                \n                    \n                        Shadow of the text when label's node is uncomplete.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Init(uncompletedShadow: fabric.Shadow | string, completedShadow: fabric.Shadow | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:90\n                \n            \n\n\n            \n                \n                    Initializes all static parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uncompletedShadow\n                                    \n                                            fabric.Shadow | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the text when label's node is uncomplete.\n\n                                    \n                                \n                                \n                                    completedShadow\n                                    \n                                            fabric.Shadow | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the text when label's node is complete. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:101\n                \n            \n\n\n            \n                \n                    Makes label look completed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetUncompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetUncompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:108\n                \n            \n\n\n            \n                \n                    Makes label look uncompleted.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fabric } from 'fabric';\n\n/**\n * Interface that passes down options into constructor.\n */\ninterface LabelOptions {\n  /**\n   * Text thst will be shown.\n   */\n  text: string;\n  /**\n   * X coordinate of the label.\n   */\n  posX: number;\n  /**\n   * Y coordinate of the label.\n   */\n  posY: number;\n  /**\n   * Font family.\n   */\n  fontFamily: string;\n  /**\n   * Size of the text.\n   */\n  fontSize: number;\n  /**\n   * Inside color of the font.\n   */\n  fontFill: string | fabric.Pattern | fabric.Gradient;\n  /**\n   * Shows whether label's node is complete or not.\n   */\n  isCompleted: boolean;\n}\n\n/**\n * Class that represents label.\n */\nexport class Label extends fabric.Text {\n  /**\n   * Shadow of the text when label's node is uncomplete.\n   */\n  private static uncompletedShadow: fabric.Shadow | string;\n  \n  /**\n   * Shadow of the text when label's node is complete.\n   */\n  private static completedShadow: fabric.Shadow | string;\n\n  /**\n   * Constructor of the label\n   * Parameters for the label.\n   */\n  constructor({\n    text,\n    posX,\n    posY,\n    fontFamily,\n    fontSize,\n    fontFill,\n    isCompleted,\n  }: LabelOptions) {\n    super(text, {\n      originX: 'left',\n      originY: 'bottom',\n      fontFamily: fontFamily,\n      hoverCursor: 'cursor',\n      shadow:\n        isCompleted === false ? Label.uncompletedShadow : Label.completedShadow,\n      left: posX,\n      top: posY,\n      fontSize: fontSize,\n      lockMovementX: true,\n      lockMovementY: true,\n      selectable: false,\n      hasControls: false,\n      hasBorders: false,\n      hasRotatingPoint: false,\n      minScaleLimit: 1,\n      fill: fontFill,\n    });\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {fabric.Shadow | string} uncompletedShadow Shadow of the text when label's node is uncomplete.\n   * @param {fabric.Shadow | string} completedShadow Shadow of the text when label's node is complete. \n   */\n  public static Init(\n    uncompletedShadow: fabric.Shadow | string,\n    completedShadow: fabric.Shadow | string\n  ): void {\n    Label.uncompletedShadow = uncompletedShadow;\n    Label.completedShadow = completedShadow;\n  }\n\n  /**\n   * Makes label look completed.\n   */\n  public SetCompleted(): void {\n    this.setShadow(Label.completedShadow);\n  }\n\n  /**\n   * Makes label look uncompleted.\n   */\n  public SetUncompleted(): void {\n    this.setShadow(Label.uncompletedShadow);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LabelOptions.html":{"url":"interfaces/LabelOptions.html","title":"interface - LabelOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LabelOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/label.ts\n        \n\n            \n                Description\n            \n            \n                Interface that passes down options into constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fontFamily\n                                \n                                \n                                        fontFill\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        isCompleted\n                                \n                                \n                                        posX\n                                \n                                \n                                        posY\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fontFamily\n                                    \n                                \n                                \n                                    \n                                        fontFamily:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Font family.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontFill\n                                    \n                                \n                                \n                                    \n                                        fontFill:     string | fabric.Pattern | fabric.Gradient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | fabric.Pattern | fabric.Gradient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Inside color of the font.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Size of the text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCompleted\n                                    \n                                \n                                \n                                    \n                                        isCompleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Shows whether label's node is complete or not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posX\n                                    \n                                \n                                \n                                    \n                                        posX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X coordinate of the label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posY\n                                    \n                                \n                                \n                                    \n                                        posY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y coordinate of the label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text thst will be shown.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { fabric } from 'fabric';\n\n/**\n * Interface that passes down options into constructor.\n */\ninterface LabelOptions {\n  /**\n   * Text thst will be shown.\n   */\n  text: string;\n  /**\n   * X coordinate of the label.\n   */\n  posX: number;\n  /**\n   * Y coordinate of the label.\n   */\n  posY: number;\n  /**\n   * Font family.\n   */\n  fontFamily: string;\n  /**\n   * Size of the text.\n   */\n  fontSize: number;\n  /**\n   * Inside color of the font.\n   */\n  fontFill: string | fabric.Pattern | fabric.Gradient;\n  /**\n   * Shows whether label's node is complete or not.\n   */\n  isCompleted: boolean;\n}\n\n/**\n * Class that represents label.\n */\nexport class Label extends fabric.Text {\n  /**\n   * Shadow of the text when label's node is uncomplete.\n   */\n  private static uncompletedShadow: fabric.Shadow | string;\n  \n  /**\n   * Shadow of the text when label's node is complete.\n   */\n  private static completedShadow: fabric.Shadow | string;\n\n  /**\n   * Constructor of the label\n   * Parameters for the label.\n   */\n  constructor({\n    text,\n    posX,\n    posY,\n    fontFamily,\n    fontSize,\n    fontFill,\n    isCompleted,\n  }: LabelOptions) {\n    super(text, {\n      originX: 'left',\n      originY: 'bottom',\n      fontFamily: fontFamily,\n      hoverCursor: 'cursor',\n      shadow:\n        isCompleted === false ? Label.uncompletedShadow : Label.completedShadow,\n      left: posX,\n      top: posY,\n      fontSize: fontSize,\n      lockMovementX: true,\n      lockMovementY: true,\n      selectable: false,\n      hasControls: false,\n      hasBorders: false,\n      hasRotatingPoint: false,\n      minScaleLimit: 1,\n      fill: fontFill,\n    });\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {fabric.Shadow | string} uncompletedShadow Shadow of the text when label's node is uncomplete.\n   * @param {fabric.Shadow | string} completedShadow Shadow of the text when label's node is complete. \n   */\n  public static Init(\n    uncompletedShadow: fabric.Shadow | string,\n    completedShadow: fabric.Shadow | string\n  ): void {\n    Label.uncompletedShadow = uncompletedShadow;\n    Label.completedShadow = completedShadow;\n  }\n\n  /**\n   * Makes label look completed.\n   */\n  public SetCompleted(): void {\n    this.setShadow(Label.completedShadow);\n  }\n\n  /**\n   * Makes label look uncompleted.\n   */\n  public SetUncompleted(): void {\n    this.setShadow(Label.uncompletedShadow);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/line.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents line.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                activeShadow\n                            \n                            \n                                    Private\n                                    Static\n                                color\n                            \n                            \n                                    Private\n                                    Static\n                                inactiveShadow\n                            \n                            \n                                    Private\n                                    Static\n                                lineWidth\n                            \n                            \n                                    Private\n                                    Static\n                                semiActiveShadow\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Init\n                            \n                            \n                                    Public\n                                SetActive\n                            \n                            \n                                    Public\n                                SetInactive\n                            \n                            \n                                    Public\n                                SetSemiActive\n                            \n                            \n                                    Public\n                                UpdateVisuals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: NodeWrapper, target: NodeWrapper)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/line.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for the line\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        NodeWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the node where line comes from.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        NodeWrapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the node where line comes in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            activeShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:19\n                            \n                        \n\n                \n                    \n                        Shadow of the line when both target and source nodes are completed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:23\n                            \n                        \n\n                \n                    \n                        Color of the line.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            inactiveShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:11\n                            \n                        \n\n                \n                    \n                        Shadow of the line when both target and source nodes are uncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            lineWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:27\n                            \n                        \n\n                \n                    \n                        Width of the line.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            semiActiveShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:15\n                            \n                        \n\n                \n                    \n                        Shadow of the line when only source is completed but target node is uncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:31\n                            \n                        \n\n                \n                    \n                        Instance of the node where line comes from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:35\n                            \n                        \n\n                \n                    \n                        Instance of the node where line comes in.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Init(inactiveShadow: string | fabric.Shadow, semiActiveShadow: string | fabric.Shadow, activeShadow: string | fabric.Shadow, color: string, width: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:78\n                \n            \n\n\n            \n                \n                    Initializes all static parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inactiveShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when both target and source nodes are uncompleted.\n\n                                    \n                                \n                                \n                                    semiActiveShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when only source is completed but target node is uncompleted.\n\n                                    \n                                \n                                \n                                    activeShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when both target and source nodes are completed.\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color of the line. \n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:109\n                \n            \n\n\n            \n                \n                    Make line looks active.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetInactive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetInactive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:123\n                \n            \n\n\n            \n                \n                    Make line looks inactive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetSemiActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetSemiActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:116\n                \n            \n\n\n            \n                \n                    Make line looks semiactive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            UpdateVisuals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateVisuals()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fabric } from 'fabric';\nimport { NodeWrapper } from './node-wrapper';\n\n/**\n * Class that represents line.\n */\nexport class Line extends fabric.Line {\n  /**\n   * Shadow of the line when both target and source nodes are uncompleted.\n   */\n  private static inactiveShadow: string | fabric.Shadow;\n  /**\n   * Shadow of the line when only source is completed but target node is uncompleted.\n   */\n  private static semiActiveShadow: string | fabric.Shadow;\n  /**\n   * Shadow of the line when both target and source nodes are completed.\n   */\n  private static activeShadow: string | fabric.Shadow;\n  /**\n   * Color of the line.\n   */\n  private static color: string;\n  /**\n   * Width of the line.\n   */\n  private static lineWidth: number;\n  /**\n   * Instance of the node where line comes from.\n   */\n  public source: NodeWrapper;\n  /**\n   * Instance of the node where line comes in.\n   */\n  public target: NodeWrapper;\n\n  /**\n   * Constructor for the line\n   * @param source Instance of the node where line comes from.\n   * @param target Instance of the node where line comes in.\n   */\n  constructor(\n    source: NodeWrapper,\n    target: NodeWrapper\n  ) {\n    let lineShadow: string | fabric.Shadow; \n    /**\n     * Defines visuals of the line based on source and target nodes.\n     */\n    if(source.node.isCompleted){\n      if(target.node.isCompleted){\n        lineShadow = Line.activeShadow;\n      }else{\n        lineShadow = Line.semiActiveShadow;\n      }\n    }else{\n      lineShadow = Line.inactiveShadow;\n    }\n    super([source.node.left, source.node.top, target.node.left, target.node.top], {\n      stroke: Line.color,\n      strokeWidth: Line.lineWidth,\n      selectable: false,\n      evented: false,\n      shadow: lineShadow,\n    });\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {string | fabric.Shadow} inactiveShadow Shadow of the line when both target and source nodes are uncompleted.\n   * @param {string | fabric.Shadow} semiActiveShadow Shadow of the line when only source is completed but target node is uncompleted.\n   * @param {string | fabric.Shadow} activeShadow Shadow of the line when both target and source nodes are completed.\n   * @param {string} color Color of the line. \n   * @param {number} width Width of the line.\n   */\n  public static Init(\n    inactiveShadow: string | fabric.Shadow,\n    semiActiveShadow: string | fabric.Shadow,\n    activeShadow: string | fabric.Shadow,\n    color: string,\n    width: number\n  ): void {\n    Line.inactiveShadow = inactiveShadow;\n    Line.semiActiveShadow = semiActiveShadow;\n    Line.activeShadow = activeShadow;\n    Line.color = color;\n    Line.lineWidth = width;\n  }\n\n  public UpdateVisuals(): void{\n    if(this.source.node.isCompleted === true){\n      if(this.target.node.isCompleted === true){\n        this.SetActive();\n      }\n      else{\n        this.SetSemiActive();\n      }\n    }\n    else{\n      this.SetInactive();\n    }\n  }\n\n  /**\n   * Make line looks active.\n   */\n  public SetActive(): void {\n    this.setShadow(Line.activeShadow);\n  }\n\n  /**\n   * Make line looks semiactive.\n   */\n  public SetSemiActive(): void {\n    this.setShadow(Line.semiActiveShadow);\n  }\n\n  /**\n   * Make line looks inactive.\n   */\n  public SetInactive(): void {\n    this.setShadow(Line.inactiveShadow);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkInfo.html":{"url":"interfaces/LinkInfo.html","title":"interface - LinkInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about link.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sourceId\n                                \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceId\n                                    \n                                \n                                \n                                    \n                                        sourceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\nimport { NodeWrapper } from './node-wrapper';\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string,\n    \"isCompleted\": boolean\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: NodeWrapper;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: NodeWrapper = new NodeWrapper(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y, nodeInfo.isCompleted);\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            node.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            node.node.on(\"mouseout\", mouseLeave);\n\n            this.nodes.push(node);\n            this.canvas.add(node.node);\n            this.canvas.add(node.node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChildLine(line);\n            this.nodes[targetId].node.AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].node.AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.node.CanBeToggled()){\n            this.activeNode.Toggle(this.canvas);\n            let node = this.activeNode;\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            this.activeNode.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            this.activeNode.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            this.activeNode.node.on(\"mouseout\", mouseLeave);\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/node.ts\n        \n\n            \n                Description\n            \n            \n                Base class for nodes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                activeSize\n                            \n                            \n                                    Protected\n                                    Static\n                                canvas\n                            \n                            \n                                    Public\n                                childs\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Protected\n                                    Static\n                                fill\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Protected\n                                    Static\n                                idleSize\n                            \n                            \n                                    Public\n                                isCompleted\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                linesChild\n                            \n                            \n                                    Public\n                                linesParent\n                            \n                            \n                                    Public\n                                nodeName\n                            \n                            \n                                    Public\n                                parents\n                            \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AddChild\n                            \n                            \n                                    Public\n                                AddChildLine\n                            \n                            \n                                    Public\n                                AddParent\n                            \n                            \n                                    Public\n                                AddParentLine\n                            \n                            \n                                    Public\n                                    Abstract\n                                CanBeToggled\n                            \n                            \n                                    Static\n                                InitNode\n                            \n                            \n                                    Public\n                                    Abstract\n                                SetActive\n                            \n                            \n                                    Public\n                                    Abstract\n                                SetHover\n                            \n                            \n                                    Public\n                                    Abstract\n                                SetIdle\n                            \n                            \n                                    Public\n                                    Abstract\n                                Toggle\n                            \n                            \n                                    Public\n                                UpdateLines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, description: string, posX: number, posY: number, isCompleted: boolean, state: NodeStates, label?: Label)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/node.ts:73\n                            \n                        \n\n                \n                    \n                            Constructor of the node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Id of the node.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the node.\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Description of the node. \n\n                                                        \n                                                \n                                                \n                                                        posX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X coordinate of the node.\n\n                                                        \n                                                \n                                                \n                                                        posY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y coordinate of the node.\n\n                                                        \n                                                \n                                                \n                                                        isCompleted\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Shows whether node is complete or not.\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        NodeStates\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Shows the state of the node.\n\n                                                        \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        Label\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Label of the node.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            activeSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:23\n                            \n                        \n\n                \n                    \n                        Size of a node in it's active state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Canvas\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:31\n                            \n                        \n\n                \n                    \n                        Canvas on which objects are drawn.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            childs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:65\n                            \n                        \n\n                \n                    \n                        Stores all children nodes of this node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:48\n                            \n                        \n\n                \n                    \n                        Description of the node. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            fill\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Pattern | fabric.Gradient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:27\n                            \n                        \n\n                \n                    \n                        Inside color of the node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:40\n                            \n                        \n\n                \n                    \n                        Id of the node. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            idleSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:19\n                            \n                        \n\n                \n                    \n                        Size of a node in it's idle state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isCompleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:52\n                            \n                        \n\n                \n                    \n                        Shows whether node is complete or not. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Label\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:36\n                            \n                        \n\n                \n                    \n                        Label of the node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linesChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:73\n                            \n                        \n\n                \n                    \n                        Stores all lines that come from children nodes to this node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            linesParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:69\n                            \n                        \n\n                \n                    \n                        Stores all lines that come from parent nodes to this node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nodeName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:44\n                            \n                        \n\n                \n                    \n                        Name of the node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:61\n                            \n                        \n\n                \n                    \n                        Stores all parent nodes of this node.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NodeStates\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node.ts:56\n                            \n                        \n\n                \n                    \n                        Shows the state of the node.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            AddChild\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddChild(childNode: NodeWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:172\n                \n            \n\n\n            \n                \n                    Adds new child node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    childNode\n                                    \n                                                NodeWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New child node, that will be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            AddChildLine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddChildLine(childLine: Line)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:192\n                \n            \n\n\n            \n                \n                    Adds new line from child node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    childLine\n                                    \n                                                Line\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New line, that will be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            AddParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddParent(parentNode: NodeWrapper)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:162\n                \n            \n\n\n            \n                \n                    Adds new parent node\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentNode\n                                    \n                                                NodeWrapper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New parent node, that will be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            AddParentLine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    AddParentLine(parentLine: Line)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:182\n                \n            \n\n\n            \n                \n                    Adds new line from parent node.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentLine\n                                    \n                                                Line\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New line, that will be added.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            CanBeToggled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    CanBeToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:215\n                \n            \n\n\n            \n                \n                    Abstract method. It is used to define whether node can be toggled or not.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            InitNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    InitNode(idleSize: number, activeSize: number, fill: string | fabric.Pattern | fabric.Gradient, canvas: fabric.Canvas)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:146\n                \n            \n\n\n            \n                \n                    Initializes all static parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    idleSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Size of a node in it's idle state.\n\n                                    \n                                \n                                \n                                    activeSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Size of a node in it's active state.\n\n                                    \n                                \n                                \n                                    fill\n                                    \n                                            string | fabric.Pattern | fabric.Gradient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Inside color of the node.\n\n                                    \n                                \n                                \n                                    canvas\n                                    \n                                            fabric.Canvas\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Canvas on which objects are drawn.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            SetActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:231\n                \n            \n\n\n            \n                \n                    Abstract method. It is used to set node's state to Active.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            SetHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetHover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:227\n                \n            \n\n\n            \n                \n                    Abstract method. It is used to set node's state to Hover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            SetIdle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetIdle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:223\n                \n            \n\n\n            \n                \n                    Abstract method. It is used to set node's state to Idle.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            Toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:219\n                \n            \n\n\n            \n                \n                    Abstract method. It is used to toggle the node.\n\n\n                    \n                        Returns :         Node\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            UpdateLines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateLines()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node.ts:201\n                \n            \n\n\n            \n                \n                    Updates visuals of all the lines that are linked with this node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fabric } from 'fabric';\nimport { Label } from './label';\nimport { Line } from './line';\nimport { NodeWrapper } from \"./node-wrapper\";\n\nexport enum NodeStates {\n  Idle,\n  Hover,\n  Active,\n}\n\n/**\n * Base class for nodes\n */\nexport abstract class Node extends fabric.Circle {\n  /**\n   * Size of a node in it's idle state.\n   */\n  protected static idleSize: number;\n  /**\n   * Size of a node in it's active state.\n   */\n  protected static activeSize: number;\n  /**\n   * Inside color of the node.\n   */\n  protected static fill: string | fabric.Pattern | fabric.Gradient;\n  /**\n   * Canvas on which objects are drawn.\n   */\n  protected static canvas: fabric.Canvas;\n\n  /**\n   * Label of the node.\n   */\n  public label: Label;\n  /**\n   * Id of the node. \n   */\n  public id: number;\n  /**\n   * Name of the node.\n   */\n  public nodeName: string;\n  /**\n   * Description of the node. \n   */\n  public description: string;\n  /**\n   * Shows whether node is complete or not. \n   */\n  public isCompleted: boolean;\n  /**\n   * Shows the state of the node.\n   */\n  public state: NodeStates;\n\n  /**\n   * Stores all parent nodes of this node.\n   */\n  public parents: Array;\n  /**\n   * Stores all children nodes of this node.\n   */\n  public childs: Array;\n  /**\n   * Stores all lines that come from parent nodes to this node.\n   */\n  public linesParent: Array;\n  /**\n   * Stores all lines that come from children nodes to this node.\n   */\n  public linesChild: Array;\n\n  /**\n   * Constructor of the node.\n   * @param {number} id Id of the node.\n   * @param {string} name Name of the node.\n   * @param {string} description Description of the node. \n   * @param {number} posX X coordinate of the node.\n   * @param {number} posY Y coordinate of the node.\n   * @param {boolean} isCompleted Shows whether node is complete or not.\n   * @param {NodeStates} state Shows the state of the node.\n   * @param {Label} label Label of the node.\n   */\n  constructor(\n    id: number,\n    name: string,\n    description: string,\n    posX: number,\n    posY: number,\n    isCompleted: boolean,\n    state: NodeStates = NodeStates.Idle,\n    label?: Label\n  ) {\n    super({\n      radius: state === NodeStates.Active ? Node.activeSize : Node.idleSize,\n      left: posX,\n      top: posY,\n      fill: Node.fill,\n      hoverCursor: 'pointer',\n      originX: 'center',\n      originY: 'center',\n      lockMovementX: true,\n      lockMovementY: true,\n      lockRotation: true,\n      selectable: false,\n      hasControls: false,\n      hasBorders: false,\n      hasRotatingPoint: false,\n    });\n    this.parents = new Array();\n    this.childs = new Array();\n    this.linesChild = new Array();\n    this.linesParent = new Array();\n    this.id = id;\n    this.nodeName = name;\n    this.description = description;\n    this.isCompleted = isCompleted;\n    this.state = state;\n    /**\n     * Stores label if it is passed, otherwise creates new one.\n     */\n    if (label) {\n      this.label = label;\n    } else {\n      this.label = new Label({\n        text: name,\n        posX: posX + this.radius * 1.2,\n        posY: posY - this.radius * 0.6,\n        fontFamily: 'Comic Sans',\n        fontSize: 22,\n        fontFill: 'rgb(220, 220, 220)',\n        isCompleted: isCompleted,\n      });\n    }\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {number} idleSize Size of a node in it's idle state.\n   * @param {number} activeSize Size of a node in it's active state.\n   * @param {string | fabric.Pattern | fabric.Gradient} fill Inside color of the node.\n   * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n   */\n  public static InitNode(\n    idleSize: number,\n    activeSize: number,\n    fill: string | fabric.Pattern | fabric.Gradient,\n    canvas: fabric.Canvas\n  ) {\n    Node.idleSize = idleSize;\n    Node.activeSize = activeSize;\n    Node.fill = fill;\n    Node.canvas = canvas;\n  }\n\n  /**\n   * Adds new parent node\n   * @param {Node} parentNode New parent node, that will be added.\n   */\n  public AddParent(parentNode: NodeWrapper): void {\n    if (!this.parents.includes(parentNode)) {\n      this.parents.push(parentNode);\n    }\n  }\n  \n  /**\n   * Adds new child node\n   * @param {Node} childNode New child node, that will be added.\n   */\n  public AddChild(childNode: NodeWrapper): void {\n    if (!this.childs.includes(childNode)) {\n      this.childs.push(childNode);\n    }\n  }\n  \n  /**\n   * Adds new line from parent node.\n   * @param {Line} parentLine New line, that will be added.\n   */\n  public AddParentLine(parentLine: Line) {\n    if (!this.linesParent.includes(parentLine)) {\n      this.linesParent.push(parentLine);\n    }\n  }\n\n  /**\n   * Adds new line from child node.\n   * @param {Line} childLine New line, that will be added.\n   */\n  public AddChildLine(childLine: Line) {\n    if (!this.linesChild.includes(childLine)) {\n      this.linesChild.push(childLine);\n    }\n  }\n\n  /**\n   * Updates visuals of all the lines that are linked with this node.\n   */\n  public UpdateLines(): void\n  {\n    for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeInfo.html":{"url":"interfaces/NodeInfo.html","title":"interface - NodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        isCompleted\n                                \n                                \n                                        label\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCompleted\n                                    \n                                \n                                \n                                    \n                                        isCompleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\nimport { NodeWrapper } from './node-wrapper';\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string,\n    \"isCompleted\": boolean\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: NodeWrapper;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: NodeWrapper = new NodeWrapper(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y, nodeInfo.isCompleted);\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            node.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            node.node.on(\"mouseout\", mouseLeave);\n\n            this.nodes.push(node);\n            this.canvas.add(node.node);\n            this.canvas.add(node.node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: NodeWrapper) =>{\n                return node.node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].node.AddChildLine(line);\n            this.nodes[targetId].node.AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].node.AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.node.CanBeToggled()){\n            this.activeNode.Toggle(this.canvas);\n            let node = this.activeNode;\n\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.node.SetIdle();\n                }\n                node.node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            this.activeNode.node.on(\"mouseup\", mouseClick);\n\n            let mouseHover = (event) =>{\n                if(node.node.state == NodeStates.Idle){\n                    node.node.SetHover();\n                }\n            }\n            mouseHover = mouseHover.bind(this, node);\n            this.activeNode.node.on(\"mouseover\", mouseHover);\n\n            let mouseLeave = (event) =>{\n                if(node.node.state == NodeStates.Hover){\n                    node.node.SetIdle();\n                }\n            }\n            mouseLeave = mouseLeave.bind(this, node);\n            this.activeNode.node.on(\"mouseout\", mouseLeave);\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeWrapper.html":{"url":"classes/NodeWrapper.html","title":"class - NodeWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/node-wrapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                node\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, description: string, posX: number, posY: number, isCompleted: boolean, state: NodeStates)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/node-wrapper.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        posX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        posY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isCompleted\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        NodeStates\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/node-wrapper.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Toggle(canvas: fabric.Canvas)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/node-wrapper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            fabric.Canvas\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Node, NodeStates } from \"./node\";\nimport { UncompletedNode } from \"./uncompletedNode\";\nimport { CompletedNode } from \"./completedNode\";\n\nexport class NodeWrapper {\n    public node: Node;\n\n    constructor(\n        id: number,\n        name: string,\n        description: string,\n        posX: number,\n        posY: number,\n        isCompleted: boolean,\n        state: NodeStates = NodeStates.Idle\n        ){\n        if(isCompleted === true){\n            this.node = new CompletedNode(id, name, description, posX, posY, state);\n        }else{\n            this.node = new UncompletedNode(id, name, description, posX, posY, state);\n        }\n    }\n\n    public Toggle(canvas: fabric.Canvas):void {\n        if(this.node.CanBeToggled()){\n            canvas.remove(this.node);\n            canvas.remove(this.node.label);\n            this.node = this.node.Toggle();\n            canvas.add(this.node);\n            canvas.add(this.node.label);\n            this.node.UpdateLines();\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registration/registration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                Register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registration/registration.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor( private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public Register(){\n    this.router.navigate(['/'])\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n    Document\n\n\n    \n        \n            Sign up\n        \n        \n            Login\n            \n        \n        \n        \n            Password\n            \n        \n        \n        \n            Repeat password\n            \n        \n        \n        \n            Sign up\n            Cancel\n        \n    \n\n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                .formWrapper{\n    margin: auto;\n    width: 200px;\n    text-align: center;\n}\n\n.buttonRegister{\n    margin-right: 10px;\n}\n\n.buttonWrapper{\n    text-align: left;\n}\n\n.headerWrapper{\n    text-align: left;\n    margin-top: 15px;\n    margin-bottom: 20px;\n}\n\n.header{\n    font-size: 45px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document                        Sign up                            Login                                                Password                                                Repeat password                                                Sign up            Cancel            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/classes/completedNode.ts\n            \n            class\n            CompletedNode\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            class\n            Graph\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            GraphInfo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            LinkInfo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            NodeInfo\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/classes/label.ts\n            \n            class\n            Label\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/classes/label.ts\n            \n            interface\n            LabelOptions\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/line.ts\n            \n            class\n            Line\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/classes/node-wrapper.ts\n            \n            class\n            NodeWrapper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/classes/node.ts\n            \n            class\n            Node\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/classes/uncompletedNode.ts\n            \n            class\n            UncompletedNode\n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                src/app/components/authorization/authorization.component.ts\n            \n            component\n            AuthorizationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/graph-viewer/graph-viewer.component.ts\n            \n            component\n            GraphViewerComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/components/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/http-handler.service.ts\n            \n            injectable\n            HttpHandlerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.5\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.0.5\n        \n            @angular/compiler : ~10.0.5\n        \n            @angular/core : ~10.0.5\n        \n            @angular/forms : ~10.0.5\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.0.5\n        \n            @angular/platform-browser-dynamic : ~10.0.5\n        \n            @angular/router : ~10.0.5\n        \n            fabric : ^3.6.3\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeStates   (src/.../node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/node.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeStates\n                    \n                \n                        \n                            \n                                 Idle\n                            \n                        \n                        \n                            \n                                 Hover\n                            \n                        \n                        \n                            \n                                 Active\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAchievyAngular\nThis project was generated with Angular CLI version 10.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthorizationComponent\n\nAuthorizationComponent\n\nAppModule -->\n\nAuthorizationComponent->AppModule\n\n\n\n\n\nGraphViewerComponent\n\nGraphViewerComponent\n\nAppModule -->\n\nGraphViewerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
