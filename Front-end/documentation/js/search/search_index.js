var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.718,1,1.031]],["body/components/AppComponent.html",[0,1.266,1,1.898,2,2.408,3,0.629,4,0.538,5,2.223,6,2.223,7,2.223,8,2.223,9,0.538,10,3.024,11,2.223,12,3.256,13,2.522,14,3.735,15,2.746,16,4.985,17,2.746,18,4.595,19,0.538,20,1.488,21,4.985,22,0.945,23,0.047,24,1.357,25,3.024,26,3.024,27,4.595,28,1.357,29,3.72,30,0.629,31,1.527,32,0.629,33,0.225,34,3.735,35,1.722,36,2.746,37,2.408,38,2.223,39,3.111,40,2.223,41,1.675,42,2.223,43,1.357,44,2.223,45,1.205,46,0.945,47,2.223,48,1.357,49,2.223,50,2.223,51,2.223,52,0.03,53,0.037,54,0.03]],["title/modules/AppModule.html",[55,1.689,56,1.689]],["body/modules/AppModule.html",[1,2.067,3,0.593,4,0.507,9,0.507,13,1.625,23,0.047,30,0.921,31,1.441,32,0.593,33,0.212,35,1.625,43,1.958,45,1.739,48,1.958,52,0.028,53,0.036,54,0.028,55,2.098,56,3.427,57,1.84,58,2.098,59,3.947,60,3.947,61,3.602,62,2.421,63,2.853,64,2.853,65,2.853,66,2.853,67,2.814,68,2.051,69,2.853,70,2.421,71,3.51,72,3.602,73,4.431,74,2.853,75,2.098,76,3.602,77,3.51,78,3.51,79,2.853,80,2.098,81,2.853,82,3.51,83,3.51]],["title/classes/AppPage.html",[33,0.171,84,1.949]],["body/classes/AppPage.html",[3,0.687,4,0.587,9,0.587,14,3.303,19,0.587,23,0.047,28,1.767,30,0.687,32,0.687,33,0.246,37,2.129,52,0.033,53,0.039,54,0.033,75,2.428,84,3.343,85,1.881,86,3.303,87,1.989,88,5.365,89,5.365,90,4.063,91,1.392,92,5.563,93,4.063,94,3.303,95,2.244,96,4.063,97,4.063,98,4.063,99,4.063]],["title/modules/AppRoutingModule.html",[55,1.689,67,1.481]],["body/modules/AppRoutingModule.html",[0,1.046,3,0.697,4,0.596,9,0.596,23,0.047,30,0.881,31,1.692,32,0.697,33,0.249,45,1.583,52,0.033,53,0.039,54,0.033,57,2.16,62,2.843,67,2.562,72,3.351,76,3.974,79,3.351,80,2.463,81,3.351,100,4.122,101,4.122,102,3.594,103,4.889,104,3.351,105,4.122,106,4.122,107,4.122]],["title/components/AuthorizationComponent.html",[0,0.718,43,1.031]],["body/components/AuthorizationComponent.html",[0,1.254,1,1.329,2,2.378,3,0.616,4,0.527,5,2.178,6,2.178,7,2.178,8,2.178,9,0.527,11,2.178,12,3.239,13,2.509,15,2.711,17,2.711,19,0.527,23,0.047,28,1.654,30,0.616,31,1.496,32,0.616,33,0.22,35,1.687,36,2.711,37,2.378,38,2.178,39,3.089,40,2.178,41,1.654,42,2.178,43,1.885,44,2.178,45,1.181,46,0.926,47,2.178,48,1.329,49,2.178,50,2.178,51,2.178,52,0.029,53,0.037,54,0.029,87,1.862,91,1.047,108,2.963,109,3.129,110,3.407,111,5.169,112,4.94,113,4.537,114,3.565,115,1.419,116,3.645,117,3.645,118,2.1,119,3.688]],["title/classes/Graph.html",[33,0.171,46,0.718]],["body/classes/Graph.html",[3,0.533,4,0.234,9,0.234,19,0.456,20,0.826,22,1.099,23,0.048,24,0.93,28,1.636,30,0.658,32,0.605,33,0.191,41,0.59,46,1.172,52,0.013,53,0.021,54,0.013,68,2.004,85,0.75,87,1.047,91,0.733,95,1.461,115,0.907,120,0.849,121,1.151,122,1.599,123,1.509,124,1.886,125,1.855,126,2.637,127,1.886,128,1.886,129,1.886,130,2.137,131,2.14,132,1.524,133,1.777,134,2.14,135,1.877,136,2.169,137,2.551,138,0.968,139,1.117,140,1.047,141,1.524,142,1.877,143,1.877,144,1.793,145,1.619,146,1.524,147,1.877,148,1.619,149,1.599,150,1.619,151,1.181,152,2.588,153,2.04,154,1.619,155,2.14,156,1.296,157,1.877,158,1.47,159,1.296,160,2.328,161,1.619,162,1.337,163,1.619,164,1.524,165,1.524,166,1.181,167,1.524,168,1.181,169,1.181,170,0.849,171,1.306,172,0.826,173,1.051,174,1.886,175,1.047,176,0.849,177,0.524,178,0.968,179,1.047,180,1.337,181,1.337,182,0.968,183,0.849,184,2.011,185,0.968,186,1.599,187,0.849,188,2.588,189,1.877,190,1.524,191,0.968,192,0.968,193,0.968,194,1.524,195,1.524,196,1.524,197,1.524,198,0.968,199,2.824,200,2.759,201,2.681,202,1.524,203,2.928,204,2.473,205,1.524,206,1.524,207,0.968,208,1.524,209,0.968,210,1.337,211,2.14,212,1.524,213,1.524,214,0.968,215,1.524,216,1.524,217,2.14,218,1.524,219,0.968,220,1.524,221,0.968,222,0.968,223,0.968,224,0.968,225,0.968,226,0.968,227,0.968,228,1.524,229,1.524,230,1.524,231,0.968,232,0.968,233,0.968,234,0.968,235,0.968,236,0.968,237,0.968,238,0.968,239,0.968,240,0.968,241,2.14,242,0.968,243,1.886,244,0.968,245,0.968,246,0.968,247,0.968,248,0.968,249,0.968,250,0.968,251,0.968,252,0.968,253,0.968,254,2.473,255,1.524,256,0.968,257,0.968,258,0.968,259,1.524,260,1.524,261,1.524,262,0.968,263,1.886,264,0.59,265,1.886,266,1.886,267,1.886,268,1.886,269,0.968,270,1.886,271,0.968,272,0.968,273,0.968,274,0.968,275,1.524,276,0.968,277,0.968,278,1.886,279,0.826,280,0.968,281,0.968,282,0.968,283,0.968,284,0.968,285,0.968,286,0.968,287,0.968,288,0.968,289,2.473,290,0.968,291,0.968,292,1.524,293,0.968,294,0.968,295,0.968,296,0.968,297,0.968,298,1.524,299,0.968,300,0.968,301,0.968,302,0.968,303,0.968,304,0.968,305,0.968,306,0.59,307,0.968,308,0.968]],["title/interfaces/GraphInfo.html",[133,1.16,173,0.718]],["body/interfaces/GraphInfo.html",[3,0.464,4,0.257,9,0.257,19,0.484,20,0.888,22,0.696,23,0.048,24,1,30,0.688,32,0.636,33,0.166,46,1.092,52,0.014,53,0.022,54,0.014,68,2.075,91,0.51,95,1.55,115,0.51,120,0.931,121,1,122,1.67,123,1,124,1.062,125,1.484,126,2.349,127,1.062,128,1.062,129,1.062,130,2.143,131,1.062,132,1.062,133,1.67,134,1.639,135,1.437,136,1.755,140,0.73,141,1.062,142,1.437,143,1.437,144,1.798,146,1.062,147,1.437,149,1.375,151,0.823,152,2.25,153,2.027,155,1.639,156,1.126,157,1.437,158,1.126,159,1.126,160,2.002,162,0.931,164,1.062,165,1.062,166,0.823,167,1.062,168,1.27,169,1.27,170,0.931,171,1.373,172,0.888,173,1.138,174,2.25,175,1.546,176,0.931,177,0.576,178,1.062,179,1.546,180,1.437,181,1.437,182,1.639,183,1.974,184,2.057,185,1.062,186,1.67,187,0.931,188,2.679,189,1.974,190,1.639,191,1.062,192,1.062,193,1.062,194,1.639,195,1.639,196,1.639,197,1.639,198,1.062,199,2.899,200,2.839,201,2.766,202,1.639,203,2.995,204,2.57,205,1.639,206,1.639,207,1.062,208,1.639,209,1.062,210,1.437,211,2.25,212,1.639,213,1.639,214,1.062,215,1.639,216,1.639,217,2.25,218,1.639,219,1.062,220,1.639,221,1.062,222,1.062,223,1.062,224,1.062,225,1.062,226,1.062,227,1.062,228,1.639,229,1.639,230,1.639,231,1.062,232,1.062,233,1.062,234,1.062,235,1.062,236,1.062,237,1.062,238,1.062,239,1.062,240,1.062,241,2.25,242,1.062,243,2.002,244,1.062,245,1.062,246,1.062,247,1.062,248,1.062,249,1.062,250,1.062,251,1.062,252,1.062,253,1.062,254,2.57,255,1.639,256,1.062,257,1.062,258,1.062,259,1.639,260,1.639,261,1.639,262,1.062,263,2.002,264,0.648,265,2.002,266,2.002,267,2.002,268,2.002,269,1.062,270,2.002,271,1.062,272,1.062,273,1.062,274,1.062,275,1.639,276,1.062,277,1.062,278,2.002,279,0.888,280,1.062,281,1.062,282,1.062,283,1.062,284,1.062,285,1.062,286,1.062,287,1.062,288,1.062,289,2.57,290,1.062,291,1.062,292,1.639,293,1.062,294,1.062,295,1.062,296,1.062,297,1.062,298,1.639,299,1.062,300,1.062,301,1.062,302,1.062,303,1.062,304,1.062,305,1.062,306,0.648,307,1.062,308,1.062,309,0.931]],["title/components/GraphViewerComponent.html",[0,0.718,45,0.915]],["body/components/GraphViewerComponent.html",[0,0.632,1,0.418,2,1.008,3,0.194,4,0.166,5,0.684,6,0.684,7,0.684,8,0.684,9,0.166,11,0.684,12,2.345,13,1.628,15,1.15,17,1.15,19,0.278,20,0.623,22,0.488,23,0.047,28,1.363,30,0.663,31,0.47,32,0.194,33,0.069,34,1.564,35,0.53,36,1.15,37,1.008,38,0.684,39,1.741,40,0.684,41,0.701,42,0.684,43,0.418,44,0.684,45,0.944,46,1.126,47,0.684,48,0.418,49,0.684,50,0.684,51,0.684,52,0.015,53,0.015,54,0.009,80,2.345,85,1.349,87,0.79,91,0.837,95,0.53,109,1.327,110,1.715,114,2.01,115,0.714,118,1.349,121,0.701,123,1.618,125,0.907,126,1.844,130,0.53,133,0.47,135,0.6,136,0.6,142,1.527,143,1.527,144,0.806,147,1.008,149,0.79,156,0.79,157,1.008,158,1.021,159,0.47,162,1.008,168,0.53,169,0.53,171,0.418,172,0.623,175,0.79,176,1.527,177,0.371,179,0.47,180,1.008,181,1.008,183,0.6,186,1.675,187,1.304,189,0.6,264,0.907,279,0.806,306,1.363,310,3.19,311,0.931,312,1.924,313,2.487,314,1.924,315,2.914,316,2.914,317,2.914,318,1.924,319,1.145,320,1.924,321,1.924,322,1.924,323,1.924,324,1.145,325,1.924,326,1.924,327,2.487,328,1.924,329,1.145,330,1.145,331,1.924,332,1.145,333,1.924,334,1.145,335,1.145,336,1.145,337,1.145,338,1.145,339,1.145,340,1.145,341,1.145,342,1.145,343,2.102,344,2.754,345,2.914,346,2.641,347,4.081,348,3.518,349,1.924,350,1.145,351,1.924,352,2.487,353,1.145,354,1.924,355,1.924,356,1.924,357,2.487,358,2.487,359,1.145,360,2.914,361,2.914,362,1.145,363,1.924,364,2.487,365,1.145,366,1.145,367,1.145,368,1.145,369,2.022,370,1.145,371,3.924,372,1.145,373,1.145,374,1.145,375,1.145,376,1.145,377,1.145,378,1.145,379,1.924,380,1.145,381,1.145,382,1.924,383,1.145,384,2.487,385,1.145,386,2.487,387,1.145,388,1.145,389,3.249,390,2.487,391,1.145,392,1.145,393,3.249,394,3.249,395,2.914,396,1.924,397,3.739,398,1.924,399,3.249,400,1.924,401,2.914,402,2.487,403,1.924,404,2.487,405,3.249,406,1.145,407,2.487,408,1.924,409,2.914,410,2.914,411,2.487,412,1.924,413,1.924,414,2.487,415,2.914,416,1.924,417,3.249,418,3.739,419,2.487,420,2.914,421,1.145,422,2.914,423,2.487,424,2.914,425,2.487,426,3.249,427,2.487,428,3.518,429,2.914,430,2.914,431,3.518,432,2.487,433,2.487,434,1.924,435,2.487,436,2.914,437,2.487,438,2.914,439,3.518,440,3.249,441,2.487,442,2.914,443,1.924,444,1.924,445,1.145,446,3.739,447,2.487,448,1.924,449,2.487,450,2.914,451,1.924,452,2.914,453,2.487,454,2.487,455,2.914,456,1.924,457,2.914,458,1.145,459,2.487,460,1.924,461,1.145,462,2.487,463,2.914,464,2.487,465,2.487,466,1.924,467,2.487,468,2.914,469,2.914,470,1.924,471,2.487,472,1.145,473,3.249,474,3.249,475,1.145,476,2.487,477,2.487,478,1.924,479,2.487,480,1.924,481,2.914,482,2.914,483,1.145,484,2.487,485,2.487,486,1.924,487,1.924,488,1.924,489,3.518,490,2.487,491,2.487,492,1.924,493,3.249,494,2.487,495,1.924,496,1.924,497,1.145,498,3.249,499,2.914,500,1.924,501,3.249,502,2.487,503,2.487,504,2.487,505,2.487,506,2.487,507,2.487,508,2.914,509,2.487,510,1.924,511,1.924,512,1.924,513,2.487,514,2.914,515,1.924,516,2.487,517,2.487,518,2.487,519,1.924,520,1.145,521,1.145,522,1.145,523,1.924,524,1.924,525,1.924,526,2.487,527,1.924,528,1.924,529,1.924,530,1.924,531,1.924,532,1.924,533,1.145,534,2.914,535,1.924,536,2.487,537,1.924,538,2.487,539,1.145,540,2.487,541,2.487,542,1.145,543,1.145,544,2.487,545,2.487,546,1.145,547,1.145,548,1.924,549,1.145,550,1.145,551,1.924,552,1.924,553,1.145,554,1.924,555,1.145,556,1.145,557,1.145,558,1.145,559,1.924,560,1.924,561,1.145,562,1.145,563,1.145,564,1.145,565,1.145,566,1.145,567,1.145,568,1.145,569,1.145,570,1.145,571,1.145,572,1.145,573,1.145,574,0.79,575,1.145,576,1.145,577,1.145,578,1.145,579,1.145,580,1.145,581,1.145,582,1.924,583,1.924,584,1.924,585,1.924,586,1.924,587,1.145,588,2.487,589,1.924,590,2.914,591,1.145,592,3.518,593,1.145,594,3.318,595,1.145,596,1.145,597,1.145,598,1.145,599,1.145,600,1.715,601,1.145,602,3.518,603,1.145,604,1.924,605,2.914,606,1.145,607,1.145,608,1.145,609,1.145,610,1.145,611,1.327,612,1.145,613,0.79,614,3.249,615,2.914,616,2.914,617,2.914,618,1.924,619,1.145,620,4.528,621,3.739,622,3.039,623,4.334,624,1.145,625,1.145,626,1.145,627,1.486,628,3.249,629,2.487,630,2.487,631,2.487,632,2.914,633,1.327,634,1.715,635,1.327,636,1.145,637,1.145,638,1.145,639,0.79,640,1.145,641,1.145,642,1.145,643,1.145,644,1.145,645,1.924,646,1.924,647,1.924,648,1.924,649,1.145,650,2.914,651,1.924,652,1.145,653,1.145,654,1.145,655,2.487,656,2.487,657,1.924,658,1.145,659,1.145,660,1.145]],["title/classes/Label.html",[33,0.171,177,0.915]],["body/classes/Label.html",[3,0.406,4,0.347,9,0.347,19,0.347,20,1.111,22,1.108,23,0.048,24,1.991,28,1.751,30,0.406,32,0.406,33,0.242,41,1.25,52,0.019,53,0.028,54,0.019,85,1.111,87,1.408,91,1.149,115,1.326,118,2.223,121,1.25,122,1.408,123,1.803,125,1.751,138,2.87,139,2.365,140,1.408,144,1.667,149,0.985,151,1.111,153,1.642,156,0.985,158,0.985,159,0.985,166,1.111,172,1.111,173,0.871,177,1.757,184,1.408,264,1.25,279,1.496,306,0.875,343,3.19,344,1.434,600,1.655,611,3.681,613,2.365,627,3.076,633,1.655,634,2.365,635,1.655,639,1.655,661,1.655,662,3.644,663,4.11,664,4.019,665,2.76,666,3.549,667,3.549,668,2.4,669,2.609,670,3.429,671,4.184,672,3.754,673,2.4,674,3.549,675,2.4,676,2.4,677,2.365,678,2.4,679,3.549,680,3.549,681,2.4,682,2.365,683,1.951,684,1.951,685,1.951,686,1.951,687,1.951,688,2.788,689,3.253,690,3.253,691,3.549,692,3.549,693,1.951,694,3.253,695,1.951,696,1.951,697,3.253,698,1.655,699,1.951,700,1.951,701,1.951,702,1.951,703,1.951,704,2.788,705,2.788,706,1.951,707,1.951,708,1.655,709,1.951,710,1.951,711,1.951,712,1.951,713,1.951,714,1.951,715,1.951]],["title/interfaces/LabelOptions.html",[173,0.718,669,1.689]],["body/interfaces/LabelOptions.html",[3,0.429,4,0.367,9,0.367,19,0.367,20,1.156,22,1.276,23,0.048,24,2.007,30,0.429,32,0.429,33,0.216,52,0.02,53,0.029,54,0.02,115,1.286,118,1.91,121,0.925,122,1.042,123,1.504,125,1.301,138,2.132,140,1.042,144,1.584,149,1.694,151,1.651,153,2.14,156,1.464,158,1.042,159,1.464,166,1.651,172,1.156,173,1.048,177,1.711,184,1.464,264,1.301,279,1.528,306,0.925,309,1.33,343,2.923,344,2.132,600,1.75,611,3.748,613,2.46,627,2.819,633,1.75,634,3.087,635,2.46,639,2.46,661,1.75,662,3.087,663,3.639,664,3.639,665,1.75,666,2.063,667,2.063,669,2.466,671,3.976,672,3.639,674,2.9,677,1.75,679,2.9,680,2.9,682,1.75,683,2.9,684,2.9,685,2.9,686,2.9,687,2.9,688,3.639,689,3.976,690,3.976,691,4.085,692,4.085,693,2.9,694,3.976,695,3.354,696,3.354,697,3.976,698,1.75,699,2.063,700,2.063,701,2.063,702,2.063,703,2.063,704,2.9,705,2.9,706,2.063,707,2.063,708,1.75,709,2.063,710,2.063,711,2.063,712,2.063,713,2.063,714,2.063,715,2.063]],["title/classes/Line.html",[33,0.171,171,1.031]],["body/classes/Line.html",[3,0.327,4,0.789,9,0.28,19,0.28,20,0.949,22,1.236,23,0.047,24,2.02,28,1.864,30,0.495,32,0.327,33,0.214,41,1.068,52,0.016,53,0.024,54,0.016,85,0.896,87,1.202,91,1.131,115,1.131,118,2.202,121,1.288,122,1.202,123,1.936,125,1.921,130,2.254,138,2.353,139,2.02,140,1.952,144,1.789,153,1.826,171,2.083,172,0.949,184,1.896,279,0.949,343,3.232,344,3.054,574,2.02,594,3.958,627,3.09,662,3.748,665,2.436,677,2.02,682,3.28,698,1.336,708,1.336,716,1.574,717,4.757,718,4.619,719,3.532,720,4.757,721,5.46,722,3.938,723,3.938,724,3.938,725,1.937,726,2.929,727,4.757,728,4.757,729,1.937,730,4.757,731,1.937,732,1.937,733,1.937,734,1.937,735,1.937,736,1.937,737,1.937,738,1.937,739,4.448,740,4.448,741,1.937,742,2.929,743,1.937,744,2.929,745,1.937,746,4.229,747,1.937,748,1.937,749,1.937,750,1.937,751,1.937,752,2.929,753,2.929,754,2.929,755,1.937,756,1.937,757,1.937,758,1.937,759,1.937,760,2.929,761,1.937,762,2.929,763,1.937,764,1.937,765,1.937,766,1.937,767,1.937,768,1.937]],["title/interfaces/LinkInfo.html",[173,0.718,179,1.16]],["body/interfaces/LinkInfo.html",[3,0.464,4,0.257,9,0.257,19,0.484,20,0.889,22,0.697,23,0.048,24,1.001,30,0.688,32,0.637,33,0.166,46,1.034,52,0.014,53,0.022,54,0.014,68,2.076,91,0.511,95,1.551,115,0.511,120,0.932,121,1.001,122,1.671,123,1.001,124,1.063,125,1.484,126,2.35,127,1.063,128,1.063,129,1.063,130,1.884,131,1.063,132,1.063,133,1.547,134,1.64,135,1.438,136,1.756,140,0.73,141,1.063,142,1.438,143,1.438,144,1.798,146,1.063,147,1.438,149,1.376,151,0.823,152,2.251,153,2.128,155,1.64,156,1.127,157,1.438,158,1.127,159,1.127,160,2.003,162,0.932,164,1.063,165,1.063,166,0.823,167,1.063,168,1.271,169,1.271,170,0.932,171,1.374,172,0.889,173,1.138,174,2.251,175,1.127,176,0.932,177,0.576,178,1.64,179,1.376,180,2.134,181,2.134,182,1.063,183,0.932,184,2.058,185,1.063,186,1.671,187,0.932,188,2.679,189,1.975,190,1.64,191,1.063,192,1.063,193,1.063,194,1.64,195,1.64,196,1.64,197,1.64,198,1.063,199,2.9,200,2.839,201,2.767,202,1.64,203,2.996,204,2.571,205,1.64,206,1.64,207,1.063,208,1.64,209,1.063,210,1.438,211,2.251,212,1.64,213,1.64,214,1.063,215,1.64,216,1.64,217,2.251,218,1.64,219,1.063,220,1.64,221,1.063,222,1.063,223,1.063,224,1.063,225,1.063,226,1.063,227,1.063,228,1.64,229,1.64,230,1.64,231,1.063,232,1.063,233,1.063,234,1.063,235,1.063,236,1.063,237,1.063,238,1.063,239,1.063,240,1.063,241,2.251,242,1.063,243,2.003,244,1.063,245,1.063,246,1.063,247,1.063,248,1.063,249,1.063,250,1.063,251,1.063,252,1.063,253,1.063,254,2.571,255,1.64,256,1.063,257,1.063,258,1.063,259,1.64,260,1.64,261,1.64,262,1.063,263,2.003,264,0.649,265,2.003,266,2.003,267,2.003,268,2.003,269,1.063,270,2.003,271,1.063,272,1.063,273,1.063,274,1.063,275,1.64,276,1.063,277,1.063,278,2.003,279,0.889,280,1.063,281,1.063,282,1.063,283,1.063,284,1.063,285,1.063,286,1.063,287,1.063,288,1.063,289,2.571,290,1.063,291,1.063,292,1.64,293,1.063,294,1.063,295,1.063,296,1.063,297,1.063,298,1.64,299,1.063,300,1.063,301,1.063,302,1.063,303,1.063,304,1.063,305,1.063,306,0.649,307,1.063,308,1.063,309,0.932]],["title/interfaces/NodeInfo.html",[173,0.718,175,1.16]],["body/interfaces/NodeInfo.html",[3,0.457,4,0.252,9,0.252,19,0.479,20,0.876,22,1.025,23,0.048,24,1.557,30,0.682,32,0.63,33,0.164,46,1.025,52,0.014,53,0.022,54,0.014,68,2.062,91,0.501,95,1.533,115,0.501,120,0.915,121,1.472,122,1.657,123,0.986,124,1.043,125,1.472,126,2.334,127,1.043,128,1.043,129,1.043,130,1.868,131,1.043,132,1.043,133,1.531,134,1.617,135,1.418,136,1.736,140,0.717,141,1.043,142,1.418,143,1.418,144,1.799,146,1.043,147,1.418,149,1.36,151,0.808,152,2.229,153,2.156,155,1.617,156,1.657,157,1.418,158,1.111,159,1.657,160,1.979,162,0.915,164,1.043,165,1.043,166,0.808,167,1.043,168,1.252,169,1.252,170,0.915,171,1.36,172,0.876,173,1.131,174,2.229,175,1.36,176,1.955,177,1.208,178,1.043,179,1.111,180,1.418,181,1.418,182,1.043,183,0.915,184,2.049,185,1.043,186,1.657,187,0.915,188,2.661,189,1.955,190,1.617,191,1.043,192,1.043,193,1.043,194,1.617,195,1.617,196,1.617,197,1.617,198,1.043,199,2.885,200,2.824,201,2.75,202,1.617,203,2.983,204,2.552,205,1.617,206,1.617,207,1.043,208,1.617,209,1.043,210,1.418,211,2.229,212,1.617,213,1.617,214,1.043,215,1.617,216,1.617,217,2.229,218,1.617,219,1.043,220,1.617,221,1.043,222,1.043,223,1.043,224,1.043,225,1.043,226,1.043,227,1.043,228,1.617,229,1.617,230,1.617,231,1.043,232,1.043,233,1.043,234,1.043,235,1.043,236,1.043,237,1.043,238,1.043,239,1.043,240,1.043,241,2.229,242,1.043,243,1.979,244,1.043,245,1.043,246,1.043,247,1.043,248,1.043,249,1.043,250,1.043,251,1.043,252,1.043,253,1.043,254,2.552,255,1.617,256,1.043,257,1.043,258,1.043,259,1.617,260,1.617,261,1.617,262,1.043,263,1.979,264,0.637,265,1.979,266,1.979,267,1.979,268,1.979,269,1.043,270,1.979,271,1.043,272,1.043,273,1.043,274,1.043,275,1.617,276,1.043,277,1.043,278,1.979,279,0.876,280,1.043,281,1.043,282,1.043,283,1.043,284,1.043,285,1.043,286,1.043,287,1.043,288,1.043,289,2.552,290,1.043,291,1.043,292,1.617,293,1.043,294,1.043,295,1.043,296,1.043,297,1.043,298,1.617,299,1.043,300,1.043,301,1.043,302,1.043,303,1.043,304,1.043,305,1.043,306,0.637,307,1.043,308,1.043,309,0.915]],["title/components/RegistrationComponent.html",[0,0.718,48,1.031]],["body/components/RegistrationComponent.html",[0,1.254,1,1.329,2,2.378,3,0.616,4,0.527,5,2.178,6,2.178,7,2.178,8,2.178,9,0.527,11,2.178,12,3.239,13,2.509,15,2.711,17,2.711,19,0.527,23,0.047,28,1.654,30,0.616,31,1.496,32,0.616,33,0.22,35,1.687,36,2.711,37,2.378,38,2.178,39,3.089,40,2.178,41,1.654,42,2.178,43,1.329,44,2.178,45,1.181,46,0.926,47,2.178,48,1.885,49,3.178,50,2.178,51,2.178,52,0.029,53,0.037,54,0.029,87,1.862,91,1.047,109,3.129,110,3.407,114,3.565,115,1.419,118,2.1,119,3.688,769,2.963,770,4.94,771,4.537,772,3.645,773,3.645]],["title/coverage.html",[774,3.125]],["body/coverage.html",[0,1.299,1,1.291,9,0.512,10,2.879,22,0.899,23,0.047,33,0.33,43,1.291,45,1.147,46,0.899,48,1.291,52,0.029,53,0.036,54,0.029,80,2.116,84,2.442,86,2.879,108,2.879,120,2.681,133,1.454,144,1.147,168,1.639,169,1.639,171,1.291,173,1.299,175,1.454,177,1.147,179,1.454,186,1.454,310,2.879,311,2.879,346,4.441,622,4.492,661,3.073,669,2.116,716,2.879,769,2.879,774,2.879,775,3.541,776,3.541,777,3.541,778,4.875,779,3.541,780,3.541,781,3.541,782,3.541,783,4.456,784,4.456,785,3.541,786,3.541,787,3.541,788,3.541,789,3.541,790,2.879,791,3.541,792,3.541,793,3.541,794,3.541,795,3.541,796,2.879,797,5.116,798,3.622,799,5.116,800,2.879,801,3.622,802,2.879,803,2.879,804,3.541,805,3.541]],["title/dependencies.html",[58,2.029,806,2.367]],["body/dependencies.html",[23,0.047,31,1.713,52,0.034,53,0.04,54,0.034,58,2.494,74,4.003,75,2.943,104,3.393,172,1.352,807,4.174,808,5.694,809,4.174,810,4.174,811,4.174,812,4.174,813,4.174,814,4.174,815,4.174,816,4.174,817,4.174,818,4.174,819,4.174]],["title/miscellaneous/enumerations.html",[820,1.414,821,2.76]],["body/miscellaneous/enumerations.html",[19,0.644,23,0.041,52,0.036,53,0.041,54,0.036,170,2.681,210,2.334,574,3.072,790,3.621,820,2.662,821,3.621,822,4.454,823,4.454]],["title/index.html",[19,0.342,824,2.367,825,2.367]],["body/index.html",[0,1.272,4,0.544,13,1.742,23,0.037,41,1.372,52,0.03,53,0.037,54,0.03,70,2.595,94,3.059,186,1.544,826,3.763,827,4.627,828,3.763,829,5.01,830,5.01,831,3.763,832,3.763,833,3.763,834,4.627,835,5.366,836,5.535,837,3.763,838,3.763,839,3.763,840,3.763,841,3.763,842,3.763,843,3.763,844,3.763,845,3.763,846,3.763,847,5.01,848,5.01,849,3.763,850,5.366,851,3.763,852,3.763,853,3.763,854,3.763,855,3.763,856,3.763,857,3.059,858,4.627,859,4.627,860,5.227,861,3.763,862,4.627,863,4.627,864,3.763,865,5.227,866,3.763,867,3.763,868,5.01,869,3.763,870,3.763,871,3.763,872,3.763]],["title/modules.html",[57,2.014]],["body/modules.html",[23,0.041,46,1.131,52,0.036,53,0.041,54,0.036,56,2.662,57,2.334,67,2.334,75,2.662,873,4.454,874,4.454,875,5.115,876,4.454]],["title/overview.html",[877,3.125]],["body/overview.html",[1,2.041,2,2.082,23,0.045,35,1.839,43,1.871,45,1.662,48,1.871,52,0.032,53,0.039,54,0.032,55,2.374,56,3.453,57,2.082,58,2.374,59,3.23,60,3.23,61,3.23,62,2.74,63,3.23,64,3.23,65,3.23,66,3.23,67,2.689,68,2.214,69,3.23,70,2.74,85,1.839,306,1.449,309,2.082,369,3.23,877,3.23,878,4.783,879,3.973,880,3.973]],["title/routes.html",[102,2.651]],["body/routes.html",[23,0.042,52,0.037,53,0.042,54,0.037,102,3.135]],["title/miscellaneous/variables.html",[820,1.414,881,2.76]],["body/miscellaneous/variables.html",[19,0.593,22,1.367,23,0.047,25,4.229,26,4.229,52,0.033,53,0.039,54,0.033,264,1.778,279,1.329,796,3.337,798,4.376,800,3.337,801,3.337,802,3.964,803,3.964,820,2.453,857,3.964,881,3.337,882,4.877,883,4.105,884,4.105,885,4.105,886,4.105,887,4.105,888,4.877]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":622,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":617,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.65",{"_index":367,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.7",{"_index":363,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.9",{"_index":352,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0.975",{"_index":357,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["0/1",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":306,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"overview.html":{}}}],["1.5",{"_index":259,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["1.7em",{"_index":637,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["1/3",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":353,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["10.0.4",{"_index":832,"title":{},"body":{"index.html":{}}}],["10.0.5",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":346,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["1000",{"_index":258,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["100px",{"_index":601,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["100vh",{"_index":593,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["100vw",{"_index":595,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["10px",{"_index":610,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["12",{"_index":364,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["13/13",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":351,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["16",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":349,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["195px",{"_index":645,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["2",{"_index":369,"title":{},"body":{"components/GraphViewerComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":636,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["20",{"_index":361,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["200px",{"_index":607,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["211",{"_index":365,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["245",{"_index":356,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["25",{"_index":366,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["255",{"_index":347,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["29/29",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":371,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["3",{"_index":358,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["3.6.3",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":379,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["30px",{"_index":646,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["33",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":660,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["39",{"_index":377,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["3px",{"_index":638,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["4",{"_index":878,"title":{},"body":{"overview.html":{}}}],["40/40",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["43/43",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":656,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["5/8",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["505050",{"_index":603,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["545b62",{"_index":653,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["5px",{"_index":623,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["6.5.5",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["68vh",{"_index":642,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["6c757d",{"_index":652,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["7",{"_index":879,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["730000",{"_index":644,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["8/8",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":605,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["80vh",{"_index":608,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["8b0000",{"_index":643,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["9/9",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":355,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ab",{"_index":429,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["accusamus",{"_index":455,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["accusantium",{"_index":467,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["achievy",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["achievyangular",{"_index":826,"title":{},"body":{"index.html":{}}}],["active",{"_index":574,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{}}}],["active.add(3",{"_index":571,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["active:set",{"_index":570,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["activenode",{"_index":124,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["activeshadow",{"_index":717,"title":{},"body":{"classes/Line.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["ad",{"_index":450,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["adipisci",{"_index":466,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["adipisicing",{"_index":391,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["alert",{"_index":581,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["align",{"_index":612,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["aliquam",{"_index":545,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["aliquid",{"_index":405,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["amet",{"_index":389,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["angular",{"_index":829,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["aperiam",{"_index":504,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["app.component",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":84,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":67,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecto",{"_index":507,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["arr",{"_index":229,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["array",{"_index":160,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["artifacts",{"_index":851,"title":{},"body":{"index.html":{}}}],["asperiores",{"_index":522,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["assumenda",{"_index":428,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["atque",{"_index":497,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["aut",{"_index":517,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["autem",{"_index":489,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["authorization",{"_index":111,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorization'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["authorization.component.html",{"_index":113,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorization.component.scss",{"_index":112,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["authorizationcomponent",{"_index":43,"title":{"components/AuthorizationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":641,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["automatically",{"_index":841,"title":{},"body":{"index.html":{}}}],["available",{"_index":876,"title":{},"body":{"modules.html":{}}}],["background",{"_index":602,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["backgroundcolor",{"_index":374,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["based",{"_index":749,"title":{},"body":{"classes/Line.html":{}}}],["bbb",{"_index":606,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["beatae",{"_index":406,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["behavior",{"_index":200,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["being",{"_index":333,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["blanditiis",{"_index":423,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["block",{"_index":597,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["blur",{"_index":348,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["body",{"_index":587,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["boolean",{"_index":149,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":620,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["both",{"_index":730,"title":{},"body":{"classes/Line.html":{}}}],["bottom",{"_index":633,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["box",{"_index":651,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["browse",{"_index":875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":850,"title":{},"body":{"index.html":{}}}],["button",{"_index":321,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["buttonclassselector",{"_index":315,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["canvas",{"_index":126,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas's",{"_index":241,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.calcoffset",{"_index":250,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.setheight(viewportheight",{"_index":249,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas.setwidth(viewportwidth",{"_index":248,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["canvas:fabric.canvas",{"_index":341,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["change",{"_index":843,"title":{},"body":{"index.html":{}}}],["check",{"_index":871,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{"classes/AppPage.html":{},"classes/Graph.html":{},"classes/Label.html":{},"classes/Line.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/AppPage.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"overview.html":{}}}],["classes/completednode",{"_index":337,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/graph",{"_index":334,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/label",{"_index":338,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/line",{"_index":339,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/node",{"_index":335,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["classes/uncompletednode",{"_index":336,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cli",{"_index":830,"title":{},"body":{"index.html":{}}}],["click",{"_index":202,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["closebutton",{"_index":624,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["closesidepanel",{"_index":316,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["closing",{"_index":328,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":845,"title":{},"body":{"index.html":{}}}],["color",{"_index":344,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["comes",{"_index":728,"title":{},"body":{"classes/Line.html":{}}}],["comicsans",{"_index":640,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["commodi",{"_index":407,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["complete",{"_index":672,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["completed",{"_index":140,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completednode",{"_index":169,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["completednode(nodeinfo.id",{"_index":193,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completednode.init",{"_index":359,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["completednodeids",{"_index":134,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completednodeids.has(nodeinfo.id",{"_index":192,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["completedshadow",{"_index":663,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["components/authorization/authorization.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["components/graph",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/registration/registration.component",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["consectetur",{"_index":390,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["consequatur",{"_index":477,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["consequuntur",{"_index":451,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["const",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["constructor(graphinfo",{"_index":132,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["constructor(source",{"_index":725,"title":{},"body":{"classes/Line.html":{}}}],["constructor(undefined",{"_index":668,"title":{},"body":{"classes/Label.html":{}}}],["contains",{"_index":162,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["content",{"_index":98,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":688,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["corporis",{"_index":529,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["corrupti",{"_index":551,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["coverage",{"_index":774,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creating",{"_index":190,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["culpa",{"_index":458,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cum",{"_index":449,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cumque",{"_index":548,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["cupiditate",{"_index":532,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["cursor",{"_index":158,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["debitis",{"_index":465,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"components/RegistrationComponent.html":{}}}],["defines",{"_index":747,"title":{},"body":{"classes/Line.html":{}}}],["delectus",{"_index":514,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["deleniti",{"_index":480,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["delete",{"_index":307,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["delta",{"_index":255,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":121,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["description:\"asdasdasd",{"_index":560,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["description:\"lorem",{"_index":385,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["deserunt",{"_index":416,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dev",{"_index":838,"title":{},"body":{"index.html":{}}}],["development",{"_index":833,"title":{},"body":{"index.html":{}}}],["dicta",{"_index":463,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dignissimos",{"_index":537,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":849,"title":{},"body":{"index.html":{}}}],["directory",{"_index":854,"title":{},"body":{"index.html":{}}}],["display",{"_index":596,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dist",{"_index":853,"title":{},"body":{"index.html":{}}}],["distinctio",{"_index":445,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["document",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/GraphViewerComponent.html":{}}}],["documentation",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":387,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolorem",{"_index":511,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["doloremque",{"_index":524,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolores",{"_index":400,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["doloribus",{"_index":403,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dolorum",{"_index":408,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["done",{"_index":586,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["done/undone",{"_index":320,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["donebutton",{"_index":322,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["donebutton:focus",{"_index":649,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["donebutton:this.graph.activenode.iscompleted",{"_index":577,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["down",{"_index":684,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["drawn",{"_index":143,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["ducimus",{"_index":503,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["duration",{"_index":616,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["dynamic",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":866,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":86,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":93,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":90,"title":{},"body":{"classes/AppPage.html":{}}}],["ea",{"_index":483,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eaque",{"_index":542,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["earum",{"_index":492,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eius",{"_index":521,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["element(by.css('app",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["eligendi",{"_index":478,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["elit",{"_index":392,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["end",{"_index":865,"title":{},"body":{"index.html":{}}}],["enim",{"_index":518,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["enumerations",{"_index":821,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eos",{"_index":412,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["error",{"_index":508,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["esse",{"_index":502,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["est",{"_index":399,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["et",{"_index":409,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eum",{"_index":488,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["eveniet",{"_index":543,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["event",{"_index":203,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evented",{"_index":763,"title":{},"body":{"classes/Line.html":{}}}],["evt",{"_index":260,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evt.clientx",{"_index":266,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["evt.clienty",{"_index":268,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["ex",{"_index":501,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["excepturi",{"_index":510,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["execute",{"_index":862,"title":{},"body":{"index.html":{}}}],["exercitationem",{"_index":461,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["expedita",{"_index":396,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":698,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["fabric",{"_index":172,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"dependencies.html":{}}}],["fabric.canvas",{"_index":136,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["fabric.canvas(\"canvas",{"_index":372,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fabric.gradient",{"_index":696,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fabric.line",{"_index":745,"title":{},"body":{"classes/Line.html":{}}}],["fabric.pattern",{"_index":695,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fabric.shadow",{"_index":343,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["fabric.text",{"_index":699,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["facere",{"_index":544,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["facilis",{"_index":554,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["false",{"_index":279,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":639,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["files",{"_index":844,"title":{},"body":{"index.html":{}}}],["fill",{"_index":713,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fires",{"_index":326,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fixed",{"_index":599,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["flag",{"_index":856,"title":{},"body":{"index.html":{}}}],["float",{"_index":625,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["font",{"_index":634,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fontfamily",{"_index":691,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fontfill",{"_index":694,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fontsize",{"_index":692,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["fuga",{"_index":473,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fugiat",{"_index":538,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["fugit",{"_index":515,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["further",{"_index":867,"title":{},"body":{"index.html":{}}}],["generate",{"_index":847,"title":{},"body":{"index.html":{}}}],["generated",{"_index":828,"title":{},"body":{"index.html":{}}}],["getting",{"_index":824,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":88,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":870,"title":{},"body":{"index.html":{}}}],["graph",{"_index":46,"title":{"classes/Graph.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"modules.html":{}}}],["graph(graphinfo",{"_index":573,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.description",{"_index":583,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.iscompleted",{"_index":584,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph.activenode.nodename",{"_index":582,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graph:graph",{"_index":340,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graphinfo",{"_index":133,"title":{"interfaces/GraphInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["graphinfo.links.foreach(linkinfo",{"_index":227,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["graphinfo.nodes.foreach(nodeinfo",{"_index":191,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["graphinfo:graphinfo",{"_index":565,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["graphviewercomponent",{"_index":45,"title":{"components/GraphViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["handle",{"_index":658,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["harum",{"_index":411,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hasborders",{"_index":710,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["hascontrols",{"_index":709,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["hasrotatingpoint",{"_index":711,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["header",{"_index":631,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["height",{"_index":592,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["help",{"_index":868,"title":{},"body":{"index.html":{}}}],["hic",{"_index":486,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hidden",{"_index":589,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["hover",{"_index":210,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["hovercursor",{"_index":703,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["http://localhost:4200",{"_index":840,"title":{},"body":{"index.html":{}}}],["id",{"_index":176,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["id:1",{"_index":381,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["id:2",{"_index":557,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["id:3",{"_index":562,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["identifier",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ids",{"_index":141,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(newnode.state",{"_index":292,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(node.state",{"_index":212,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(result",{"_index":580,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["if(source.iscompleted",{"_index":750,"title":{},"body":{"classes/Line.html":{}}}],["if(target.iscompleted",{"_index":751,"title":{},"body":{"classes/Line.html":{}}}],["if(this.activenode",{"_index":205,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["if(this.activenode.canbetoggled",{"_index":286,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["illo",{"_index":440,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["illum",{"_index":442,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["impedit",{"_index":527,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["implements",{"_index":109,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["important",{"_index":650,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["inactive",{"_index":742,"title":{},"body":{"classes/Line.html":{}}}],["inactiveshadow",{"_index":718,"title":{},"body":{"classes/Line.html":{}}}],["incidunt",{"_index":530,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["information",{"_index":174,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["init",{"_index":665,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["init(inactiveshadow",{"_index":736,"title":{},"body":{"classes/Line.html":{}}}],["init(uncompletedshadow",{"_index":675,"title":{},"body":{"classes/Label.html":{}}}],["initializes",{"_index":677,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["inside",{"_index":693,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["instance",{"_index":727,"title":{},"body":{"classes/Line.html":{}}}],["interface",{"_index":173,"title":{"interfaces/GraphInfo.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["interfaces",{"_index":309,"title":{},"body":{"interfaces/GraphInfo.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"overview.html":{}}}],["inventore",{"_index":494,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsa",{"_index":402,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsam",{"_index":509,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ipsum",{"_index":386,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iscompleted",{"_index":697,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["ispanning",{"_index":127,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["iste",{"_index":555,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["itaque",{"_index":487,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iure",{"_index":513,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["iusto",{"_index":448,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["karma",{"_index":864,"title":{},"body":{"index.html":{}}}],["label",{"_index":177,"title":{"classes/Label.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["label's",{"_index":671,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label.completedshadow",{"_index":705,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label.init",{"_index":370,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["label.uncompletedshadow",{"_index":704,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["label:\"asd",{"_index":384,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["labeloptions",{"_index":669,"title":{"interfaces/LabelOptions.html":{}},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"coverage.html":{}}}],["labore",{"_index":432,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["laboriosam",{"_index":528,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["laborum",{"_index":453,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["last",{"_index":155,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lastposx",{"_index":128,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lastposy",{"_index":129,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["laudantium",{"_index":533,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["leaving",{"_index":216,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["left",{"_index":613,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"overview.html":{}}}],["libero",{"_index":443,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["line",{"_index":171,"title":{"classes/Line.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["line(this.nodes[sourceid",{"_index":233,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["line.activeshadow",{"_index":752,"title":{},"body":{"classes/Line.html":{}}}],["line.color",{"_index":760,"title":{},"body":{"classes/Line.html":{}}}],["line.inactiveshadow",{"_index":754,"title":{},"body":{"classes/Line.html":{}}}],["line.init",{"_index":362,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["line.linewidth",{"_index":762,"title":{},"body":{"classes/Line.html":{}}}],["line.semiactiveshadow",{"_index":753,"title":{},"body":{"classes/Line.html":{}}}],["line.sendtoback",{"_index":240,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lines",{"_index":226,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["lineshadow",{"_index":746,"title":{},"body":{"classes/Line.html":{}}}],["linewidth",{"_index":719,"title":{},"body":{"classes/Line.html":{}}}],["link",{"_index":178,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["link1",{"_index":568,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link1:linkinfo",{"_index":563,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link2",{"_index":569,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["link2:linkinfo",{"_index":564,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["linkinfo",{"_index":179,"title":{"interfaces/LinkInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["linkinfo.sourceid",{"_index":231,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["linkinfo.targetid",{"_index":232,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["links",{"_index":183,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["literal",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lockmovementx",{"_index":706,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["lockmovementy",{"_index":707,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["look",{"_index":680,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["looks",{"_index":740,"title":{},"body":{"classes/Line.html":{}}}],["magnam",{"_index":452,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["magni",{"_index":456,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["maiores",{"_index":516,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["make",{"_index":739,"title":{},"body":{"classes/Line.html":{}}}],["makes",{"_index":679,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["margin",{"_index":632,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":470,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["method",{"_index":325,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["methods",{"_index":87,"title":{},"body":{"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"components/RegistrationComponent.html":{}}}],["minima",{"_index":549,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["minscalelimit",{"_index":712,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["minus",{"_index":462,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["miscellaneous",{"_index":820,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modi",{"_index":457,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["molestiae",{"_index":469,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["molestias",{"_index":446,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["mollitia",{"_index":539,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["more",{"_index":869,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":201,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseclick",{"_index":204,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseclick.bind(this",{"_index":208,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mousehover",{"_index":211,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mousehover.bind(this",{"_index":215,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseunhover",{"_index":217,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["mouseunhover.bind(this",{"_index":220,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["moz",{"_index":618,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["natus",{"_index":520,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["navigate",{"_index":839,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["necessitatibus",{"_index":547,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nemo",{"_index":441,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["neque",{"_index":421,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nesciunt",{"_index":444,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["new",{"_index":186,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{},"index.html":{}}}],["newnode",{"_index":289,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.on(\"mouseout",{"_index":296,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.on(\"mouseover",{"_index":295,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.on(\"mouseup",{"_index":291,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.setactive",{"_index":290,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.sethover",{"_index":293,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode.setidle",{"_index":294,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["newnode:node",{"_index":287,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["ng",{"_index":836,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":114,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["nihil",{"_index":491,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nisi",{"_index":468,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nobis",{"_index":427,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["node",{"_index":144,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["node.id",{"_index":230,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.initnode(30",{"_index":376,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["node.on(\"mouseout",{"_index":222,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.on(\"mouseover",{"_index":221,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.on(\"mouseup",{"_index":209,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.setactive",{"_index":207,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.sethover",{"_index":214,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["node.setidle",{"_index":219,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo",{"_index":175,"title":{"interfaces/NodeInfo.html":{}},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["nodeinfo.description",{"_index":195,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.label",{"_index":194,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.x",{"_index":196,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo.y",{"_index":197,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodeinfo2",{"_index":566,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo2:nodeinfo",{"_index":556,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo3",{"_index":567,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo3:nodeinfo",{"_index":561,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodeinfo:nodeinfo",{"_index":380,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nodes",{"_index":130,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodestates",{"_index":170,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"miscellaneous/enumerations.html":{}}}],["nodestates.hover",{"_index":218,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nodestates.idle",{"_index":213,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["non",{"_index":404,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["none",{"_index":628,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["nostrum",{"_index":482,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["null",{"_index":189,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["nulla",{"_index":398,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["number",{"_index":153,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["numquam",{"_index":424,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["o",{"_index":619,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["obcaecati",{"_index":418,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["obj.setcoords",{"_index":274,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["object",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":142,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["odio",{"_index":438,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["odit",{"_index":531,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["officia",{"_index":437,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["officiis",{"_index":475,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["old",{"_index":299,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["omnis",{"_index":535,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["oninit",{"_index":110,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["opt",{"_index":254,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.e",{"_index":261,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.e.deltay",{"_index":256,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["opt.target",{"_index":262,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["optio",{"_index":414,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["optional",{"_index":139,"title":{},"body":{"classes/Graph.html":{},"classes/Label.html":{},"classes/Line.html":{}}}],["options",{"_index":685,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["originx",{"_index":701,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["originy",{"_index":702,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":629,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["overflow",{"_index":588,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["overview",{"_index":877,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":806,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":609,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["pan",{"_index":270,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["pan.bind(this",{"_index":276,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["panning",{"_index":152,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["param",{"_index":184,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"classes/Graph.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["passes",{"_index":683,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["path",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perferendis",{"_index":425,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["perspiciatis",{"_index":464,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["placeat",{"_index":393,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["pointer",{"_index":630,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["porro",{"_index":426,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["position",{"_index":157,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["possimus",{"_index":395,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["posx",{"_index":689,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["posy",{"_index":690,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["praesentium",{"_index":519,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["private",{"_index":125,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["prod",{"_index":855,"title":{},"body":{"index.html":{}}}],["production",{"_index":857,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":827,"title":{},"body":{"index.html":{}}}],["promise",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["protractor",{"_index":94,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":123,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["quae",{"_index":454,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quaerat",{"_index":512,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quam",{"_index":434,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quas",{"_index":481,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quasi",{"_index":498,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["qui",{"_index":500,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quia",{"_index":552,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quibusdam",{"_index":496,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quidem",{"_index":417,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quis",{"_index":525,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quisquam",{"_index":493,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quo",{"_index":505,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quod",{"_index":439,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["quos",{"_index":541,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["radius",{"_index":621,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["ratione",{"_index":484,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["readme",{"_index":872,"title":{},"body":{"index.html":{}}}],["recusandae",{"_index":410,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["registration",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":771,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.scss",{"_index":770,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registrationcomponent",{"_index":48,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reiciendis",{"_index":550,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["relative",{"_index":591,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reload",{"_index":842,"title":{},"body":{"index.html":{}}}],["rem",{"_index":436,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rendering",{"_index":298,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["repellat",{"_index":394,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["repellendus",{"_index":459,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reprehenderit",{"_index":523,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["represents",{"_index":122,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["repudiandae",{"_index":447,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["require",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rerum",{"_index":506,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":243,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["resize.bind(this",{"_index":251,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["resizing",{"_index":242,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["result",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":95,"title":{},"body":{"classes/AppPage.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["returns",{"_index":91,"title":{},"body":{"classes/AppPage.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{}}}],["rgb(255",{"_index":368,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(30",{"_index":378,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(40,40,40",{"_index":375,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgb(80",{"_index":604,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(15",{"_index":350,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(245",{"_index":354,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(255",{"_index":345,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["rgba(57",{"_index":360,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["right",{"_index":626,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["route",{"_index":880,"title":{},"body":{"overview.html":{}}}],["routermodule",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":102,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":101,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":835,"title":{},"body":{"index.html":{}}}],["running",{"_index":858,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["saepe",{"_index":422,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sapiente",{"_index":433,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["scaffolding",{"_index":846,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":253,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["scrollbar",{"_index":655,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sed",{"_index":476,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["selectable",{"_index":708,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["selected",{"_index":147,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["selection",{"_index":373,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["semiactive",{"_index":744,"title":{},"body":{"classes/Line.html":{}}}],["semiactiveshadow",{"_index":720,"title":{},"body":{"classes/Line.html":{}}}],["sequi",{"_index":490,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["serve",{"_index":837,"title":{},"body":{"index.html":{}}}],["server",{"_index":834,"title":{},"body":{"index.html":{}}}],["set",{"_index":135,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["setactive",{"_index":722,"title":{},"body":{"classes/Line.html":{}}}],["setcompleted",{"_index":666,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["setinactive",{"_index":723,"title":{},"body":{"classes/Line.html":{}}}],["sets",{"_index":199,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["setsemiactive",{"_index":724,"title":{},"body":{"classes/Line.html":{}}}],["setuncompleted",{"_index":667,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["shadow",{"_index":627,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["shown",{"_index":687,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["shows",{"_index":151,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["sidepanel",{"_index":327,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["similique",{"_index":471,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sint",{"_index":401,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["sit",{"_index":388,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["size",{"_index":635,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["solid",{"_index":648,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["soluta",{"_index":534,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthorizationComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"components/RegistrationComponent.html":{},"index.html":{}}}],["source.top",{"_index":756,"title":{},"body":{"classes/Line.html":{}}}],["sourceid",{"_index":180,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["span')).gettext",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../node.ts",{"_index":822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/completednode.ts",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/graph.ts",{"_index":120,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["src/app/classes/graph.ts:230",{"_index":163,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:41",{"_index":161,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:45",{"_index":145,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:49",{"_index":148,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:53",{"_index":150,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:57",{"_index":154,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/graph.ts:61",{"_index":137,"title":{},"body":{"classes/Graph.html":{}}}],["src/app/classes/label.ts",{"_index":661,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"coverage.html":{}}}],["src/app/classes/label.ts:101",{"_index":678,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:108",{"_index":681,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:44",{"_index":673,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:49",{"_index":670,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/label.ts:90",{"_index":676,"title":{},"body":{"classes/Label.html":{}}}],["src/app/classes/line.ts",{"_index":716,"title":{},"body":{"classes/Line.html":{},"coverage.html":{}}}],["src/app/classes/line.ts:102",{"_index":743,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:109",{"_index":741,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:11",{"_index":732,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:15",{"_index":734,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:19",{"_index":729,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:23",{"_index":731,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:27",{"_index":733,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:31",{"_index":735,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:35",{"_index":726,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:78",{"_index":737,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/line.ts:95",{"_index":738,"title":{},"body":{"classes/Line.html":{}}}],["src/app/classes/node.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/classes/uncompletednode.ts",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["src/app/components/authorization/authorization.component.ts",{"_index":108,"title":{},"body":{"components/AuthorizationComponent.html":{},"coverage.html":{}}}],["src/app/components/authorization/authorization.component.ts:12",{"_index":117,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["src/app/components/authorization/authorization.component.ts:8",{"_index":116,"title":{},"body":{"components/AuthorizationComponent.html":{}}}],["src/app/components/graph",{"_index":310,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts",{"_index":769,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts:12",{"_index":773,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:8",{"_index":772,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":825,"title":{"index.html":{}},"body":{}}],["startpanning",{"_index":282,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["startpanning.bind(this",{"_index":269,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["starts",{"_index":302,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["statements",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":662,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["stoppanning",{"_index":278,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stoppanning.bind(this",{"_index":280,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stops",{"_index":297,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stored",{"_index":852,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["stroke",{"_index":759,"title":{},"body":{"classes/Line.html":{}}}],["strokewidth",{"_index":761,"title":{},"body":{"classes/Line.html":{}}}],["style",{"_index":647,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["successfull",{"_index":167,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["sunt",{"_index":546,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["super([source.left",{"_index":755,"title":{},"body":{"classes/Line.html":{}}}],["super(text",{"_index":700,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["support",{"_index":873,"title":{},"body":{"modules.html":{}}}],["suscipit",{"_index":419,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["svg",{"_index":874,"title":{},"body":{"modules.html":{}}}],["table",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":721,"title":{},"body":{"classes/Line.html":{}}}],["target.left",{"_index":757,"title":{},"body":{"classes/Line.html":{}}}],["target.top",{"_index":758,"title":{},"body":{"classes/Line.html":{}}}],["targetid",{"_index":181,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["tempore",{"_index":430,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["temporibus",{"_index":495,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["tenetur",{"_index":474,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["test",{"_index":861,"title":{},"body":{"index.html":{}}}],["tests",{"_index":860,"title":{},"body":{"index.html":{}}}],["text",{"_index":611,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["this.activenode",{"_index":188,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.setidle",{"_index":206,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.activenode.toggle",{"_index":288,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas",{"_index":187,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(line",{"_index":239,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(newnode",{"_index":303,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(newnode.label",{"_index":304,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(node",{"_index":224,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.add(node.label",{"_index":225,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.foreachobject((obj",{"_index":273,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.getzoom",{"_index":257,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"before:render",{"_index":252,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:down",{"_index":281,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:move",{"_index":284,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.on(\"mouse:up",{"_index":283,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.remove(this.activenode",{"_index":300,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.remove(this.activenode.label",{"_index":301,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.renderall",{"_index":285,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.requestrenderall",{"_index":275,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.viewporttransform[4",{"_index":271,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.canvas.viewporttransform[5",{"_index":272,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.graph",{"_index":572,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.activenode",{"_index":576,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.activenode.setidle",{"_index":575,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.graph.toggleactivenode",{"_index":579,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["this.ispanning",{"_index":263,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.lastposx",{"_index":265,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.lastposy",{"_index":267,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes",{"_index":185,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.findindex",{"_index":228,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.push(newnode",{"_index":308,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.push(node",{"_index":223,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes.splice(this.nodes.indexof(this.activenode",{"_index":305,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[sourceid].addchild(this.nodes[targetid",{"_index":235,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[sourceid].addchildline(line",{"_index":236,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid",{"_index":234,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid].addparent(this.nodes[sourceid",{"_index":237,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.nodes[targetid].addparentline(line",{"_index":238,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["this.setshadow(label.completedshadow",{"_index":714,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["this.setshadow(label.uncompletedshadow",{"_index":715,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["this.setshadow(line.activeshadow",{"_index":766,"title":{},"body":{"classes/Line.html":{}}}],["this.setshadow(line.inactiveshadow",{"_index":768,"title":{},"body":{"classes/Line.html":{}}}],["this.setshadow(line.semiactiveshadow",{"_index":767,"title":{},"body":{"classes/Line.html":{}}}],["this.source",{"_index":764,"title":{},"body":{"classes/Line.html":{}}}],["this.target",{"_index":765,"title":{},"body":{"classes/Line.html":{}}}],["thst",{"_index":686,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["thumb",{"_index":659,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":165,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["toggleactivenode",{"_index":131,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["toggles",{"_index":331,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["toggleselectednode",{"_index":317,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["top",{"_index":600,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["totam",{"_index":526,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["track",{"_index":657,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["transition",{"_index":615,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["tries",{"_index":164,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["true",{"_index":264,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ullam",{"_index":540,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["uncomplete",{"_index":674,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["uncompleted",{"_index":682,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{}}}],["uncompletednode",{"_index":168,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"coverage.html":{}}}],["uncompletednode(nodeinfo.id",{"_index":198,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["uncompletednode.init",{"_index":342,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["uncompletedshadow",{"_index":664,"title":{},"body":{"classes/Label.html":{},"interfaces/LabelOptions.html":{}}}],["unde",{"_index":435,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undone",{"_index":585,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undonebutton",{"_index":323,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undonebutton:focus",{"_index":654,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["undonebutton:this.graph.activenode.iscompleted",{"_index":578,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["unit",{"_index":859,"title":{},"body":{"index.html":{}}}],["up",{"_index":277,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["use",{"_index":848,"title":{},"body":{"index.html":{}}}],["ut",{"_index":431,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["variable",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":881,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":485,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["velit",{"_index":472,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["veniam",{"_index":420,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["veritatis",{"_index":397,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["vero",{"_index":536,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["version",{"_index":831,"title":{},"body":{"index.html":{}}}],["via",{"_index":863,"title":{},"body":{"index.html":{}}}],["viewer",{"_index":312,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"components/RegistrationComponent.html":{}}}],["viewer.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["viewer.component.html",{"_index":314,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.scss",{"_index":313,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts",{"_index":311,"title":{},"body":{"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:103",{"_index":319,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:114",{"_index":330,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:20",{"_index":332,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:24",{"_index":318,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:72",{"_index":329,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer.component.ts:95",{"_index":324,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["viewer/graph",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GraphViewerComponent.html":{},"coverage.html":{}}}],["viewportheight",{"_index":246,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["viewportwidth",{"_index":244,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["visuals",{"_index":748,"title":{},"body":{"classes/Line.html":{}}}],["void",{"_index":118,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"classes/Line.html":{},"components/RegistrationComponent.html":{}}}],["voluptas",{"_index":413,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptate",{"_index":415,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatem",{"_index":479,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptates",{"_index":553,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatibus",{"_index":460,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["voluptatum",{"_index":499,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["webkit",{"_index":614,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["whether",{"_index":166,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["whole",{"_index":182,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["width",{"_index":594,"title":{},"body":{"components/GraphViewerComponent.html":{},"classes/Line.html":{}}}],["window.innerheight",{"_index":247,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["window.innerwidth",{"_index":245,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["works",{"_index":119,"title":{},"body":{"components/AuthorizationComponent.html":{},"components/RegistrationComponent.html":{}}}],["wrapper",{"_index":590,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["x",{"_index":156,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["x:100",{"_index":382,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["x:200",{"_index":558,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["y",{"_index":159,"title":{},"body":{"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"components/GraphViewerComponent.html":{},"classes/Label.html":{},"interfaces/LabelOptions.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{}}}],["y:100",{"_index":383,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["y:200",{"_index":559,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["z",{"_index":598,"title":{},"body":{"components/GraphViewerComponent.html":{}}}],["zone.js",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/Graph.html":{},"interfaces/GraphInfo.html":{},"interfaces/LinkInfo.html":{},"interfaces/NodeInfo.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Achievy'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Achievy';\n}\n\n    \n\n    \n        \n\n\n  \n  \n  Document\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Document'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthorizationComponent\n\nAuthorizationComponent\n\nAppModule -->\n\nAuthorizationComponent->AppModule\n\n\n\n\n\nGraphViewerComponent\n\nGraphViewerComponent\n\nAppModule -->\n\nGraphViewerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthorizationComponent\n                        \n                        \n                            GraphViewerComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GraphViewerComponent } from './components/graph-viewer/graph-viewer.component';\nimport { AuthorizationComponent } from './components/authorization/authorization.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphViewerComponent,\n    AuthorizationComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GraphViewerComponent } from './components/graph-viewer/graph-viewer.component';\n\nconst routes: Routes = [\n  {path: '', component: GraphViewerComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthorizationComponent.html":{"url":"components/AuthorizationComponent.html","title":"component - AuthorizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthorizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/authorization/authorization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authorization\n            \n\n            \n                styleUrls\n                ./authorization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./authorization.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/authorization/authorization.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/authorization/authorization.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.scss']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        authorization works!\n\n    \n\n    \n                \n                    ./authorization.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'authorization works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthorizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents graph.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeNode\n                            \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Private\n                                isPanning\n                            \n                            \n                                    Private\n                                lastPosX\n                            \n                            \n                                    Private\n                                lastPosY\n                            \n                            \n                                    Private\n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toggleActiveNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graphInfo: GraphInfo, completedNodeIds: Set, canvas: fabric.Canvas)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/graph.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor of the graph\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        graphInfo\n                                                  \n                                                        \n                                                                        GraphInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                All info about graph.\n\n                                                        \n                                                \n                                                \n                                                        completedNodeIds\n                                                  \n                                                        \n                                                                    Set\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                All completed nodes' ids\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    fabric.Canvas\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Canvas on which objects are drawn.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:45\n                            \n                        \n\n                \n                    \n                        Node that is currently selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Canvas\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:49\n                            \n                        \n\n                \n                    \n                        Canvas on which objects are drawn.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isPanning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:53\n                            \n                        \n\n                \n                    \n                        Shows if canvas is panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastPosX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:57\n                            \n                        \n\n                \n                    \n                        Last X position of the cursor when panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lastPosY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:61\n                            \n                        \n\n                \n                    \n                        Last Y position of the cursor when panning.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/graph.ts:41\n                            \n                        \n\n                \n                    \n                        Array that contains all nodes.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleActiveNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleActiveNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/graph.ts:230\n                \n            \n\n\n            \n                \n                    Tries to toggle selected node.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether it was successfull.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UncompletedNode } from \"./uncompletedNode\";\nimport { CompletedNode } from \"./completedNode\";\nimport { Node, NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: Node;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, completedNodeIds: Set, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: Node;\n            if (completedNodeIds.has(nodeInfo.id)){\n                node = new CompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n            else{\n                node = new UncompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n\n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.SetIdle();\n                }\n                node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(node.state == NodeStates.Idle){\n                    node.SetHover();\n                }\n            }\n            mouseHover.bind(this, node);\n\n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(node.state == NodeStates.Hover){\n                    node.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, node);\n            node.on(\"mouseover\", mouseHover);\n            node.on(\"mouseout\", mouseUnHover);\n\n            this.nodes.push(node);\n            this.canvas.add(node);\n            this.canvas.add(node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].AddChildLine(line);\n            this.nodes[targetId].AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.CanBeToggled()){\n            let newNode:Node = this.activeNode.Toggle();\n            \n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != newNode){\n                    this.activeNode.SetIdle();\n                }\n                newNode.SetActive();\n                this.activeNode = newNode;\n            }\n            mouseClick = mouseClick.bind(this, newNode);\n            newNode.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(newNode.state == NodeStates.Idle){\n                    newNode.SetHover();\n                }\n            }\n            mouseHover.bind(this, newNode);\n            \n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(newNode.state == NodeStates.Hover){\n                    newNode.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, newNode);\n            newNode.on(\"mouseover\", mouseHover);\n            newNode.on(\"mouseout\", mouseUnHover);\n\n            /**\n             * Stops rendering old node.\n             */\n            this.canvas.remove(this.activeNode);\n            this.canvas.remove(this.activeNode.label);\n            /**\n             * Starts rendering new node.\n             */\n            this.canvas.add(newNode);\n            this.canvas.add(newNode.label);\n            this.nodes.splice(this.nodes.indexOf(this.activeNode), 1);\n            delete this.activeNode;\n            this.nodes.push(newNode);\n            this.activeNode = newNode;\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphInfo.html":{"url":"interfaces/GraphInfo.html","title":"interface - GraphInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about whole graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        links\n                                \n                                \n                                        nodes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         LinkInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LinkInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:         NodeInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UncompletedNode } from \"./uncompletedNode\";\nimport { CompletedNode } from \"./completedNode\";\nimport { Node, NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: Node;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, completedNodeIds: Set, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: Node;\n            if (completedNodeIds.has(nodeInfo.id)){\n                node = new CompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n            else{\n                node = new UncompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n\n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.SetIdle();\n                }\n                node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(node.state == NodeStates.Idle){\n                    node.SetHover();\n                }\n            }\n            mouseHover.bind(this, node);\n\n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(node.state == NodeStates.Hover){\n                    node.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, node);\n            node.on(\"mouseover\", mouseHover);\n            node.on(\"mouseout\", mouseUnHover);\n\n            this.nodes.push(node);\n            this.canvas.add(node);\n            this.canvas.add(node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].AddChildLine(line);\n            this.nodes[targetId].AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.CanBeToggled()){\n            let newNode:Node = this.activeNode.Toggle();\n            \n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != newNode){\n                    this.activeNode.SetIdle();\n                }\n                newNode.SetActive();\n                this.activeNode = newNode;\n            }\n            mouseClick = mouseClick.bind(this, newNode);\n            newNode.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(newNode.state == NodeStates.Idle){\n                    newNode.SetHover();\n                }\n            }\n            mouseHover.bind(this, newNode);\n            \n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(newNode.state == NodeStates.Hover){\n                    newNode.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, newNode);\n            newNode.on(\"mouseover\", mouseHover);\n            newNode.on(\"mouseout\", mouseUnHover);\n\n            /**\n             * Stops rendering old node.\n             */\n            this.canvas.remove(this.activeNode);\n            this.canvas.remove(this.activeNode.label);\n            /**\n             * Starts rendering new node.\n             */\n            this.canvas.add(newNode);\n            this.canvas.add(newNode.label);\n            this.nodes.splice(this.nodes.indexOf(this.activeNode), 1);\n            delete this.activeNode;\n            this.nodes.push(newNode);\n            this.activeNode = newNode;\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphViewerComponent.html":{"url":"components/GraphViewerComponent.html","title":"component - GraphViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/graph-viewer/graph-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graph-viewer\n            \n\n            \n                styleUrls\n                ./graph-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvas\n                            \n                            \n                                    Public\n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttonClassSelector\n                            \n                            \n                                    Public\n                                closeSidePanel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleSelectedNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/graph-viewer/graph-viewer.component.ts:24\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buttonClassSelector\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClassSelector()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:103\n                \n            \n\n\n            \n                \n                    Selector of classes for done/undone button.\n\n\n                    \n                        Returns :     { doneButton: boolean; undoneButton: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeSidePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeSidePanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:95\n                \n            \n\n\n            \n                \n                    Method that fires when sidepanel is closing.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSelectedNode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSelectedNode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:114\n                \n            \n\n\n            \n                \n                    Toggles selected node.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Canvas\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:24\n                            \n                        \n\n                \n                    \n                        Canvas on which objects are drawn.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/graph-viewer/graph-viewer.component.ts:20\n                            \n                        \n\n                \n                    \n                        Contains all objects that are being drawn.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Graph, GraphInfo, LinkInfo, NodeInfo } from \"../../classes/graph\";\nimport { Node } from \"../../classes/node\";\nimport { UncompletedNode } from \"../../classes/uncompletedNode\";\nimport { CompletedNode } from \"../../classes/completedNode\";\nimport { Label } from \"../../classes/label\";\nimport { fabric } from \"fabric\";\nimport { Line } from \"../../classes/line\";\n@Component({\n  selector: 'app-graph-viewer',\n  templateUrl: './graph-viewer.component.html',\n  styleUrls: ['./graph-viewer.component.scss']\n})\n\n\nexport class GraphViewerComponent implements OnInit {\n  /**\n   * Contains all objects that are being drawn.\n   */\n  public graph:Graph;\n  /**\n   * Canvas on which objects are drawn.\n   */\n  private canvas:fabric.Canvas;\n  constructor() {\n    UncompletedNode.Init(\n      new fabric.Shadow({\n        color: \"rgba(255, 100, 255, 1)\",\n        blur: 18,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(15, 15, 15, 0.9)\",\n        blur: 10,\n      }),\n      \"rgba(245, 90, 245, 1)\",\n      \"rgba(245, 90, 245, 1)\",\n      0.975,\n      0.975,\n      3\n    );\n    CompletedNode.Init(\n      new fabric.Shadow({\n        color: \"rgba(57, 255, 20, 1)\",\n        blur: 18,\n      }),\n      \"rgba(57, 255, 20, 1)\",\n      3,\n      0.975\n    )\n    Line.Init(\n      new fabric.Shadow({\n        color: \"rgba(255, 100, 255, 0.7)\",\n        blur: 12,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(255, 211, 25, 0.7)\",\n        blur: 12,\n      }),\n      new fabric.Shadow({\n        color: \"rgba(57, 255, 20, 0.65)\",\n        blur: 12,\n      }),\n      \"rgb(255, 255, 255)\",\n      2\n    );\n    Label.Init(\n      \"rgba(255, 100, 255, 0.9) 2px 2px 2px\",\n      \"rgba(57, 255, 20, 0.9) 2px 2px 2px\"\n    )\n  }\n\n  ngOnInit(): void {\n    this.canvas = new fabric.Canvas(\"canvas\", {\n      selection: false,\n      backgroundColor: \"rgb(40,40,40)\",\n    });\n    Node.InitNode(30, 39, \"rgb(30, 30, 30)\", this.canvas);\n    \n    \n\n    let nodeInfo:NodeInfo = {id:1, x:100, y:100, label:\"Asd\", description:\"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Placeat, repellat possimus expedita veritatis, nulla est amet dolores sint ipsa id doloribus non in aliquid beatae commodi at dolorum. Et recusandae harum eos voluptas optio voluptate veritatis deserunt quidem, obcaecati suscipit veniam neque saepe blanditiis numquam perferendis! Porro nobis assumenda ab! Placeat tempore ut labore quidem sapiente consectetur quam, unde blanditiis rem officia odio quod illo nemo illum libero nesciunt distinctio molestias repudiandae veritatis iusto cum ad consequuntur, magnam laborum. Suscipit quae optio accusamus magni ipsum ad modi! Culpa repellendus voluptatibus blanditiis exercitationem ab! Minus dicta perspiciatis optio debitis adipisci, porro accusantium voluptas quod rem non, nisi molestiae maxime at numquam similique velit. Assumenda fuga cum tenetur est officiis dicta quam sed, consequatur eligendi voluptatem molestiae deleniti libero. Id commodi, quas minus nostrum ea obcaecati tempore assumenda ratione veniam recusandae tenetur, possimus molestias nobis vel hic unde consectetur itaque eum quidem dicta autem. Repellat, itaque aliquid. Quidem et sequi nihil earum autem, quisquam numquam repellendus ratione id ab adipisci, inventore, sed illo temporibus quibusdam atque illum nisi voluptatem quasi fuga voluptatum! Quae qui ex veritatis consequuntur esse ab, ducimus in aperiam est ut similique perferendis quo rerum saepe, architecto illo quasi error ipsam excepturi magnam dolorem eos. Ducimus quaerat iure accusantium delectus fugit maiores. Non, inventore rem ex iusto repellat sapiente, quasi nostrum tenetur harum aut ut amet enim praesentium nulla, porro obcaecati error perferendis natus eius veritatis asperiores. Modi, numquam reprehenderit. Doloremque earum ad quis debitis placeat assumenda sint totam impedit rem officia laboriosam iure quod corporis esse molestias amet incidunt recusandae accusamus quibusdam, odit ipsam unde tenetur saepe cupiditate. Et quas dolores veritatis, laudantium voluptatem molestiae totam quasi in magnam sequi labore quis assumenda quod soluta omnis obcaecati est aut. Aut accusantium aperiam dolorem vero, autem maiores dignissimos illum delectus. Debitis placeat, ut voluptate doloremque fugiat totam eligendi autem molestias vel ex expedita sapiente dolorum magnam fuga aliquid nesciunt sequi accusamus et! Porro, officia nihil. Nemo nisi modi consequatur vero obcaecati! Illum quod quaerat mollitia placeat? Fugiat eum, sint similique quae, ipsa ullam corporis, nostrum quos omnis molestias quas. Delectus eaque hic quidem amet. Sed nisi saepe ullam eveniet ducimus, soluta molestias deserunt veniam quo. Est facere voluptatum dicta molestias, quisquam odio quo aliquam. Quisquam possimus inventore reprehenderit quos a iure voluptatum, repellat labore commodi aliquid tempore sunt aperiam vero ipsam dignissimos maxime fugiat cupiditate repudiandae! Qui error veniam nemo porro repellendus, molestiae aliquid tenetur laborum illo? Ut perspiciatis tempore necessitatibus excepturi fuga praesentium assumenda veritatis rerum cumque. Aliquam odio architecto rerum, harum, vel magni cum voluptate, temporibus ut minima reiciendis ipsa repellat doloribus autem ipsum laborum accusamus ex! Voluptatum ullam fugit autem nostrum soluta repudiandae error, corrupti quia voluptates, enim delectus. Quisquam fuga corrupti id impedit maiores, perspiciatis quos ratione facilis enim facere obcaecati a quasi soluta architecto quia deleniti quas nobis? Quod suscipit ad illo. Consequatur incidunt cumque odit possimus, recusandae aliquam laboriosam voluptate nihil sint quisquam esse, ex facere, odio voluptatibus facilis obcaecati modi. Iste, minus.\"};\n    let nodeInfo2:NodeInfo = {id:2, x:200, y:200, label:\"Asd\", description:\"asdasdasd\"};\n    let nodeInfo3:NodeInfo = {id:3, x:100, y:200, label:\"Asd\", description:\"asdasdasd\"};\n    let link1:LinkInfo = {sourceId: 1, targetId: 2};\n    let link2:LinkInfo = {sourceId: 2, targetId: 3};\n    let graphInfo:GraphInfo = {nodes: [nodeInfo, nodeInfo2, nodeInfo3], links: [link1, link2]};\n    let active:Set = new Set();\n    active.add(3);\n    this.graph = new Graph(graphInfo, active, this.canvas);\n  }\n\n  /**\n   * Method that fires when sidepanel is closing.\n   */\n  public closeSidePanel(){\n    this.graph.activeNode.SetIdle();\n    this.graph.activeNode = null;\n  }\n  \n  /**\n   * Selector of classes for done/undone button.\n   */\n  public buttonClassSelector(){\n    let classes = {\n      doneButton:this.graph.activeNode.isCompleted === false,\n      undoneButton:this.graph.activeNode.isCompleted === true,\n    };\n    return classes;\n  }\n\n  /**\n   * Toggles selected node.\n   */\n  public toggleSelectedNode(){\n    let result = this.graph.toggleActiveNode();\n    if(result === false){\n      alert(\"Вы не можете совершить данное действие.\");\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n    Document\n\n\n    \n        \n            \n                \n                    {{graph.activeNode.nodeName}}\n                    X\n                \n                Описание:\n                {{graph.activeNode.description}}\n                {{graph.activeNode.isCompleted === true ? \"Undone\" : \"Done\"}}\n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./graph-viewer.component.scss\n                \n                body {\n    overflow: hidden;\n}\n  \n.wrapper {\n    position: relative;\n    overflow: hidden;\n}\n\n.canvas-wrapper {\n    height: 100vh;\n    width: 100vw;\n}\n\ncanvas {\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n\n.sidepanel {\n    z-index: 1;\n    position: fixed; /* положение */\n    top: 100px; /* отступ сверху */\n    background: #505050;\n    background-color: rgb(80, 80, 80); /* цвет фона */\n    color: #bbb; /* цвет текста */\n    width: 200px; /* ширина блока */\n    height: 80vh; /* высота блока */\n    padding: 10px; /* отступы от границ внутри блока */\n    text-align: left; /* выравнивание текста */\n  \n    -webkit-transition-duration: 0.3s; /* анимационное выдвижение для всех браузеров*/\n    -moz-transition-duration: 0.3s;\n    -o-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n  \n    -webkit-border-radius: 0 5px 5px 0; /* закругление границ для всех браузеров*/\n    -moz-border-radius: 0 5px 5px 0;\n    border-radius: 0 5px 5px 0;\n}\n\n.closeButton {\n    float: right;\n    text-shadow: none;\n    outline: 0;\n    cursor: pointer;\n}\n\n.header-wrapper{\n    margin-bottom: 5px;\n}\n.header{\n    font-size: 2.5em;\n}\n\n.description-header{\n    font-size: 1.7em;\n    margin-bottom: 3px;\n}\n\n.description-wrapper{\n    font-family: 'ComicSans';\n    overflow-y: auto;\n    height: 68vh;\n}\n\n.doneButton{\n    margin-top: 5px;\n    background-color: #8b0000;\n    border-color: #730000;\n    width: 195px;\n    height: 30px;\n    border-radius: 5px;\n    border-width: 2px;\n    border-style: solid;\n    cursor: pointer;\n}\n\n.doneButton:focus {\n    outline: none !important;\n    box-shadow: none !important;\n}\n\n.undoneButton{\n    margin-top: 5px;\n    background-color: #6c757d;\n    border-color: #545b62;\n    width: 195px;\n    height: 30px;\n    border-radius: 5px;\n    border-width: 2px;\n    border-style: solid;\n    cursor: pointer;\n}\n\n.undoneButton:focus {\n    outline: none !important;\n    box-shadow: none !important;\n}\n\n/* width */\n::-webkit-scrollbar {\n    background-color: rgb(80, 80, 80);\n    width: 4px;\n  }\n  \n  /* Track */\n  ::-webkit-scrollbar-track {\n    border-radius: 4px;\n  }\n  \n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: #333;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Document                                                            {{graph.activeNode.nodeName}}                    X                                Описание:                {{graph.activeNode.description}}                {{graph.activeNode.isCompleted === true ? \"Undone\" : \"Done\"}}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Label.html":{"url":"classes/Label.html","title":"class - Label","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Label\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/label.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents label.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                completedShadow\n                            \n                            \n                                    Private\n                                    Static\n                                uncompletedShadow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Init\n                            \n                            \n                                    Public\n                                SetCompleted\n                            \n                            \n                                    Public\n                                SetUncompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: LabelOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/label.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor of the label\nParameters for the label.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        LabelOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            completedShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Shadow | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/label.ts:49\n                            \n                        \n\n                \n                    \n                        Shadow of the text when label's node is complete.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            uncompletedShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     fabric.Shadow | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/label.ts:44\n                            \n                        \n\n                \n                    \n                        Shadow of the text when label's node is uncomplete.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Init(uncompletedShadow: fabric.Shadow | string, completedShadow: fabric.Shadow | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:90\n                \n            \n\n\n            \n                \n                    Initializes all static parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uncompletedShadow\n                                    \n                                            fabric.Shadow | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the text when label's node is uncomplete.\n\n                                    \n                                \n                                \n                                    completedShadow\n                                    \n                                            fabric.Shadow | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the text when label's node is complete. \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:101\n                \n            \n\n\n            \n                \n                    Makes label look completed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetUncompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetUncompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/label.ts:108\n                \n            \n\n\n            \n                \n                    Makes label look uncompleted.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fabric } from 'fabric';\n\n/**\n * Interface that passes down options into constructor.\n */\ninterface LabelOptions {\n  /**\n   * Text thst will be shown.\n   */\n  text: string;\n  /**\n   * X coordinate of the label.\n   */\n  posX: number;\n  /**\n   * Y coordinate of the label.\n   */\n  posY: number;\n  /**\n   * Font family.\n   */\n  fontFamily: string;\n  /**\n   * Size of the text.\n   */\n  fontSize: number;\n  /**\n   * Inside color of the font.\n   */\n  fontFill: string | fabric.Pattern | fabric.Gradient;\n  /**\n   * Shows whether label's node is complete or not.\n   */\n  isCompleted: boolean;\n}\n\n/**\n * Class that represents label.\n */\nexport class Label extends fabric.Text {\n  /**\n   * Shadow of the text when label's node is uncomplete.\n   */\n  private static uncompletedShadow: fabric.Shadow | string;\n  \n  /**\n   * Shadow of the text when label's node is complete.\n   */\n  private static completedShadow: fabric.Shadow | string;\n\n  /**\n   * Constructor of the label\n   * Parameters for the label.\n   */\n  constructor({\n    text,\n    posX,\n    posY,\n    fontFamily,\n    fontSize,\n    fontFill,\n    isCompleted,\n  }: LabelOptions) {\n    super(text, {\n      originX: 'left',\n      originY: 'bottom',\n      fontFamily: fontFamily,\n      hoverCursor: 'cursor',\n      shadow:\n        isCompleted === false ? Label.uncompletedShadow : Label.completedShadow,\n      left: posX,\n      top: posY,\n      fontSize: fontSize,\n      lockMovementX: true,\n      lockMovementY: true,\n      selectable: false,\n      hasControls: false,\n      hasBorders: false,\n      hasRotatingPoint: false,\n      minScaleLimit: 1,\n      fill: fontFill,\n    });\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {fabric.Shadow | string} uncompletedShadow Shadow of the text when label's node is uncomplete.\n   * @param {fabric.Shadow | string} completedShadow Shadow of the text when label's node is complete. \n   */\n  public static Init(\n    uncompletedShadow: fabric.Shadow | string,\n    completedShadow: fabric.Shadow | string\n  ): void {\n    Label.uncompletedShadow = uncompletedShadow;\n    Label.completedShadow = completedShadow;\n  }\n\n  /**\n   * Makes label look completed.\n   */\n  public SetCompleted(): void {\n    this.setShadow(Label.completedShadow);\n  }\n\n  /**\n   * Makes label look uncompleted.\n   */\n  public SetUncompleted(): void {\n    this.setShadow(Label.uncompletedShadow);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LabelOptions.html":{"url":"interfaces/LabelOptions.html","title":"interface - LabelOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LabelOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/label.ts\n        \n\n            \n                Description\n            \n            \n                Interface that passes down options into constructor.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fontFamily\n                                \n                                \n                                        fontFill\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        isCompleted\n                                \n                                \n                                        posX\n                                \n                                \n                                        posY\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fontFamily\n                                    \n                                \n                                \n                                    \n                                        fontFamily:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Font family.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontFill\n                                    \n                                \n                                \n                                    \n                                        fontFill:     string | fabric.Pattern | fabric.Gradient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | fabric.Pattern | fabric.Gradient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Inside color of the font.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Size of the text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isCompleted\n                                    \n                                \n                                \n                                    \n                                        isCompleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Shows whether label's node is complete or not.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posX\n                                    \n                                \n                                \n                                    \n                                        posX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X coordinate of the label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        posY\n                                    \n                                \n                                \n                                    \n                                        posY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y coordinate of the label.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text thst will be shown.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { fabric } from 'fabric';\n\n/**\n * Interface that passes down options into constructor.\n */\ninterface LabelOptions {\n  /**\n   * Text thst will be shown.\n   */\n  text: string;\n  /**\n   * X coordinate of the label.\n   */\n  posX: number;\n  /**\n   * Y coordinate of the label.\n   */\n  posY: number;\n  /**\n   * Font family.\n   */\n  fontFamily: string;\n  /**\n   * Size of the text.\n   */\n  fontSize: number;\n  /**\n   * Inside color of the font.\n   */\n  fontFill: string | fabric.Pattern | fabric.Gradient;\n  /**\n   * Shows whether label's node is complete or not.\n   */\n  isCompleted: boolean;\n}\n\n/**\n * Class that represents label.\n */\nexport class Label extends fabric.Text {\n  /**\n   * Shadow of the text when label's node is uncomplete.\n   */\n  private static uncompletedShadow: fabric.Shadow | string;\n  \n  /**\n   * Shadow of the text when label's node is complete.\n   */\n  private static completedShadow: fabric.Shadow | string;\n\n  /**\n   * Constructor of the label\n   * Parameters for the label.\n   */\n  constructor({\n    text,\n    posX,\n    posY,\n    fontFamily,\n    fontSize,\n    fontFill,\n    isCompleted,\n  }: LabelOptions) {\n    super(text, {\n      originX: 'left',\n      originY: 'bottom',\n      fontFamily: fontFamily,\n      hoverCursor: 'cursor',\n      shadow:\n        isCompleted === false ? Label.uncompletedShadow : Label.completedShadow,\n      left: posX,\n      top: posY,\n      fontSize: fontSize,\n      lockMovementX: true,\n      lockMovementY: true,\n      selectable: false,\n      hasControls: false,\n      hasBorders: false,\n      hasRotatingPoint: false,\n      minScaleLimit: 1,\n      fill: fontFill,\n    });\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {fabric.Shadow | string} uncompletedShadow Shadow of the text when label's node is uncomplete.\n   * @param {fabric.Shadow | string} completedShadow Shadow of the text when label's node is complete. \n   */\n  public static Init(\n    uncompletedShadow: fabric.Shadow | string,\n    completedShadow: fabric.Shadow | string\n  ): void {\n    Label.uncompletedShadow = uncompletedShadow;\n    Label.completedShadow = completedShadow;\n  }\n\n  /**\n   * Makes label look completed.\n   */\n  public SetCompleted(): void {\n    this.setShadow(Label.completedShadow);\n  }\n\n  /**\n   * Makes label look uncompleted.\n   */\n  public SetUncompleted(): void {\n    this.setShadow(Label.uncompletedShadow);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/line.ts\n        \n\n            \n                Description\n            \n            \n                Class that represents line.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                activeShadow\n                            \n                            \n                                    Private\n                                    Static\n                                color\n                            \n                            \n                                    Private\n                                    Static\n                                inactiveShadow\n                            \n                            \n                                    Private\n                                    Static\n                                lineWidth\n                            \n                            \n                                    Private\n                                    Static\n                                semiActiveShadow\n                            \n                            \n                                    Public\n                                source\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Init\n                            \n                            \n                                    Public\n                                SetActive\n                            \n                            \n                                    Public\n                                SetInactive\n                            \n                            \n                                    Public\n                                SetSemiActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: Node, target: Node)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/line.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for the line\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        Node\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the node where line comes from.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        Node\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Instance of the node where line comes in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            activeShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:19\n                            \n                        \n\n                \n                    \n                        Shadow of the line when both target and source nodes are completed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:23\n                            \n                        \n\n                \n                    \n                        Color of the line.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            inactiveShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:11\n                            \n                        \n\n                \n                    \n                        Shadow of the line when both target and source nodes are uncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            lineWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:27\n                            \n                        \n\n                \n                    \n                        Width of the line.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            semiActiveShadow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | fabric.Shadow\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:15\n                            \n                        \n\n                \n                    \n                        Shadow of the line when only source is completed but target node is uncompleted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:31\n                            \n                        \n\n                \n                    \n                        Instance of the node where line comes from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Node\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/line.ts:35\n                            \n                        \n\n                \n                    \n                        Instance of the node where line comes in.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Init(inactiveShadow: string | fabric.Shadow, semiActiveShadow: string | fabric.Shadow, activeShadow: string | fabric.Shadow, color: string, width: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:78\n                \n            \n\n\n            \n                \n                    Initializes all static parameters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inactiveShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when both target and source nodes are uncompleted.\n\n                                    \n                                \n                                \n                                    semiActiveShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when only source is completed but target node is uncompleted.\n\n                                    \n                                \n                                \n                                    activeShadow\n                                    \n                                            string | fabric.Shadow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Shadow of the line when both target and source nodes are completed.\n\n                                    \n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color of the line. \n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Width of the line.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:95\n                \n            \n\n\n            \n                \n                    Make line looks active.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetInactive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetInactive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:109\n                \n            \n\n\n            \n                \n                    Make line looks inactive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            SetSemiActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SetSemiActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/line.ts:102\n                \n            \n\n\n            \n                \n                    Make line looks semiactive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fabric } from 'fabric';\nimport { Node } from './node';\n\n/**\n * Class that represents line.\n */\nexport class Line extends fabric.Line {\n  /**\n   * Shadow of the line when both target and source nodes are uncompleted.\n   */\n  private static inactiveShadow: string | fabric.Shadow;\n  /**\n   * Shadow of the line when only source is completed but target node is uncompleted.\n   */\n  private static semiActiveShadow: string | fabric.Shadow;\n  /**\n   * Shadow of the line when both target and source nodes are completed.\n   */\n  private static activeShadow: string | fabric.Shadow;\n  /**\n   * Color of the line.\n   */\n  private static color: string;\n  /**\n   * Width of the line.\n   */\n  private static lineWidth: number;\n  /**\n   * Instance of the node where line comes from.\n   */\n  public source: Node;\n  /**\n   * Instance of the node where line comes in.\n   */\n  public target: Node;\n\n  /**\n   * Constructor for the line\n   * @param source Instance of the node where line comes from.\n   * @param target Instance of the node where line comes in.\n   */\n  constructor(\n    source: Node,\n    target: Node\n  ) {\n    let lineShadow: string | fabric.Shadow; \n    /**\n     * Defines visuals of the line based on source and target nodes.\n     */\n    if(source.isCompleted){\n      if(target.isCompleted){\n        lineShadow = Line.activeShadow;\n      }else{\n        lineShadow = Line.semiActiveShadow;\n      }\n    }else{\n      lineShadow = Line.inactiveShadow;\n    }\n    super([source.left, source.top, target.left, target.top], {\n      stroke: Line.color,\n      strokeWidth: Line.lineWidth,\n      selectable: false,\n      evented: false,\n      shadow: lineShadow,\n    });\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * Initializes all static parameters\n   * @param {string | fabric.Shadow} inactiveShadow Shadow of the line when both target and source nodes are uncompleted.\n   * @param {string | fabric.Shadow} semiActiveShadow Shadow of the line when only source is completed but target node is uncompleted.\n   * @param {string | fabric.Shadow} activeShadow Shadow of the line when both target and source nodes are completed.\n   * @param {string} color Color of the line. \n   * @param {number} width Width of the line.\n   */\n  public static Init(\n    inactiveShadow: string | fabric.Shadow,\n    semiActiveShadow: string | fabric.Shadow,\n    activeShadow: string | fabric.Shadow,\n    color: string,\n    width: number\n  ): void {\n    Line.inactiveShadow = inactiveShadow;\n    Line.semiActiveShadow = semiActiveShadow;\n    Line.activeShadow = activeShadow;\n    Line.color = color;\n    Line.lineWidth = width;\n  }\n\n  /**\n   * Make line looks active.\n   */\n  public SetActive(): void {\n    this.setShadow(Line.activeShadow);\n  }\n\n  /**\n   * Make line looks semiactive.\n   */\n  public SetSemiActive(): void {\n    this.setShadow(Line.semiActiveShadow);\n  }\n\n  /**\n   * Make line looks inactive.\n   */\n  public SetInactive(): void {\n    this.setShadow(Line.inactiveShadow);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkInfo.html":{"url":"interfaces/LinkInfo.html","title":"interface - LinkInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LinkInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about link.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sourceId\n                                \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceId\n                                    \n                                \n                                \n                                    \n                                        sourceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UncompletedNode } from \"./uncompletedNode\";\nimport { CompletedNode } from \"./completedNode\";\nimport { Node, NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: Node;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, completedNodeIds: Set, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: Node;\n            if (completedNodeIds.has(nodeInfo.id)){\n                node = new CompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n            else{\n                node = new UncompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n\n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.SetIdle();\n                }\n                node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(node.state == NodeStates.Idle){\n                    node.SetHover();\n                }\n            }\n            mouseHover.bind(this, node);\n\n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(node.state == NodeStates.Hover){\n                    node.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, node);\n            node.on(\"mouseover\", mouseHover);\n            node.on(\"mouseout\", mouseUnHover);\n\n            this.nodes.push(node);\n            this.canvas.add(node);\n            this.canvas.add(node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].AddChildLine(line);\n            this.nodes[targetId].AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.CanBeToggled()){\n            let newNode:Node = this.activeNode.Toggle();\n            \n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != newNode){\n                    this.activeNode.SetIdle();\n                }\n                newNode.SetActive();\n                this.activeNode = newNode;\n            }\n            mouseClick = mouseClick.bind(this, newNode);\n            newNode.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(newNode.state == NodeStates.Idle){\n                    newNode.SetHover();\n                }\n            }\n            mouseHover.bind(this, newNode);\n            \n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(newNode.state == NodeStates.Hover){\n                    newNode.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, newNode);\n            newNode.on(\"mouseover\", mouseHover);\n            newNode.on(\"mouseout\", mouseUnHover);\n\n            /**\n             * Stops rendering old node.\n             */\n            this.canvas.remove(this.activeNode);\n            this.canvas.remove(this.activeNode.label);\n            /**\n             * Starts rendering new node.\n             */\n            this.canvas.add(newNode);\n            this.canvas.add(newNode.label);\n            this.nodes.splice(this.nodes.indexOf(this.activeNode), 1);\n            delete this.activeNode;\n            this.nodes.push(newNode);\n            this.activeNode = newNode;\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeInfo.html":{"url":"interfaces/NodeInfo.html","title":"interface - NodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/graph.ts\n        \n\n            \n                Description\n            \n            \n                Interface that represents information about node.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UncompletedNode } from \"./uncompletedNode\";\nimport { CompletedNode } from \"./completedNode\";\nimport { Node, NodeStates } from \"./node\";\nimport { Line } from \"./line\";\nimport { fabric } from \"fabric\";\n\n/**\n * Interface that represents information about node.\n */\nexport interface NodeInfo{\n    \"id\": number,\n    \"x\": number,\n    \"y\": number,\n    \"label\": string,\n    \"description\": string\n}\n\n/**\n * Interface that represents information about link.\n */\nexport interface LinkInfo{\n    \"sourceId\": number,\n    \"targetId\": number\n}\n\n/**\n * Interface that represents information about whole graph.\n */\nexport interface GraphInfo{\n    \"nodes\": NodeInfo[],\n    \"links\": LinkInfo[]\n}\n\n/**\n * Class that represents graph.\n */\nexport class Graph {\n    /**\n     * Array that contains all nodes.\n     */\n    private nodes: Array;\n    /**\n     * Node that is currently selected.\n     */\n    public activeNode: Node;\n    /**\n     * Canvas on which objects are drawn.\n     */\n    private canvas: fabric.Canvas;\n    /**\n     * Shows if canvas is panning.\n     */\n    private isPanning: boolean;\n    /**\n     * Last X position of the cursor when panning.\n     */\n    private lastPosX: number;\n    /**\n     * Last Y position of the cursor when panning.\n     */\n    private lastPosY: number;\n    \n    /**\n     * Constructor of the graph\n     * @param {GraphInfo} graphInfo All info about graph.\n     * @param {Set} completedNodeIds All completed nodes' ids\n     * @param {fabric.Canvas} canvas Canvas on which objects are drawn.\n     */\n    constructor(graphInfo: GraphInfo, completedNodeIds: Set, canvas: fabric.Canvas){\n        this.nodes = new Array();\n        this.canvas = canvas;\n        this.activeNode = null;\n        /**\n         * Creating all nodes.\n         */\n        graphInfo.nodes.forEach(nodeInfo => {\n            let node: Node;\n            if (completedNodeIds.has(nodeInfo.id)){\n                node = new CompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n            else{\n                node = new UncompletedNode(nodeInfo.id, nodeInfo.label, nodeInfo.description, nodeInfo.x, nodeInfo.y);\n            }\n\n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != node){\n                    this.activeNode.SetIdle();\n                }\n                node.SetActive();\n                this.activeNode = node;\n            }\n            mouseClick = mouseClick.bind(this, node);\n            node.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(node.state == NodeStates.Idle){\n                    node.SetHover();\n                }\n            }\n            mouseHover.bind(this, node);\n\n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(node.state == NodeStates.Hover){\n                    node.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, node);\n            node.on(\"mouseover\", mouseHover);\n            node.on(\"mouseout\", mouseUnHover);\n\n            this.nodes.push(node);\n            this.canvas.add(node);\n            this.canvas.add(node.label);\n        });\n\n        /**\n         * Creating all lines.\n         */\n        graphInfo.links.forEach(linkInfo => {\n            let sourceId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.sourceId;\n            });\n            let targetId: number = this.nodes.findIndex( (node: Node, index: number, arr: Node[]) =>{\n                return node.id === linkInfo.targetId;\n            });\n            let line: Line = new Line(this.nodes[sourceId], this.nodes[targetId]);\n            this.nodes[sourceId].AddChild(this.nodes[targetId]);\n            this.nodes[sourceId].AddChildLine(line);\n            this.nodes[targetId].AddParent(this.nodes[sourceId]);\n            this.nodes[targetId].AddParentLine(line);\n            this.canvas.add(line);\n            line.sendToBack();\n        });\n\n        /**\n         * Sets canvas's resizing.\n         */\n        let resize = () => {\n            let viewportWidth = window.innerWidth;\n            let viewportHeight = window.innerHeight;\n            canvas.setWidth(viewportWidth);\n            canvas.setHeight(viewportHeight);\n            canvas.calcOffset();\n        };\n        resize = resize.bind(this);\n        this.canvas.on(\"before:render\", resize);\n\n        /**\n         * Sets canvas's behavior on mouse scroll.\n         * @param opt \n         */\n        let zoom = (opt) => {\n            let delta = opt.e.deltaY;\n            let zoom = this.canvas.getZoom();\n            zoom = zoom - delta / 1000;\n            if (zoom > 1.5) zoom = 1.5;\n            if (zoom  {\n            let evt = opt.e;\n            if (opt.target == null) {\n                this.isPanning = true;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n            }\n        };\n        startPanning.bind(this);\n\n        /**\n         * Sets canvas's behavior when panning.\n         * @param opt \n         */\n        let pan = (opt) => {\n            if (this.isPanning) {\n                let evt = opt.e;\n                this.canvas.viewportTransform[4] += evt.clientX - this.lastPosX;\n                this.canvas.viewportTransform[5] += evt.clientY - this.lastPosY;\n                this.lastPosX = evt.clientX;\n                this.lastPosY = evt.clientY;\n                this.canvas.forEachObject((obj) => {\n                  obj.setCoords();\n                });\n                this.canvas.requestRenderAll();\n            }\n        };\n        pan = pan.bind(this);\n\n        /**\n         * Sets canvas's behavior on mouse up.\n         * @param opt \n         */\n        let stopPanning = (opt) => {\n            this.isPanning = false;\n        }\n        stopPanning = stopPanning.bind(this);\n        this.canvas.on(\"mouse:down\", startPanning);\n        this.canvas.on(\"mouse:up\", stopPanning);\n        this.canvas.on(\"mouse:move\", pan);\n\n        \n        this.canvas.renderAll();\n    }\n\n    /**\n     * Tries to toggle selected node.\n     * @returns {boolean} Whether it was successfull.\n     */\n    public toggleActiveNode(): boolean{\n        if(this.activeNode.CanBeToggled()){\n            let newNode:Node = this.activeNode.Toggle();\n            \n            /**\n             * Sets node behavior on mouse click.\n             * @param event \n             */\n            let mouseClick = (event) => {\n                if(this.activeNode != null && this.activeNode != newNode){\n                    this.activeNode.SetIdle();\n                }\n                newNode.SetActive();\n                this.activeNode = newNode;\n            }\n            mouseClick = mouseClick.bind(this, newNode);\n            newNode.on(\"mouseup\", mouseClick);\n\n            /**\n             * Sets node behavior on mouse hover.\n             * @param event \n             */\n            let mouseHover = (event) =>{\n                if(newNode.state == NodeStates.Idle){\n                    newNode.SetHover();\n                }\n            }\n            mouseHover.bind(this, newNode);\n            \n            /**\n             * Sets node behavior on mouse leaving it.\n             * @param event \n             */\n            let mouseUnHover = (event) =>{\n                if(newNode.state == NodeStates.Hover){\n                    newNode.SetIdle();\n                }\n            }\n            mouseUnHover.bind(this, newNode);\n            newNode.on(\"mouseover\", mouseHover);\n            newNode.on(\"mouseout\", mouseUnHover);\n\n            /**\n             * Stops rendering old node.\n             */\n            this.canvas.remove(this.activeNode);\n            this.canvas.remove(this.activeNode.label);\n            /**\n             * Starts rendering new node.\n             */\n            this.canvas.add(newNode);\n            this.canvas.add(newNode.label);\n            this.nodes.splice(this.nodes.indexOf(this.activeNode), 1);\n            delete this.activeNode;\n            this.nodes.push(newNode);\n            this.activeNode = newNode;\n            this.canvas.requestRenderAll();\n        }else{\n            return false\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registration/registration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registration/registration.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        registration works!\n\n    \n\n    \n                \n                    ./registration.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'registration works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizationComponent', 'selector': 'app-authorization'},{'name': 'GraphViewerComponent', 'selector': 'app-graph-viewer'},{'name': 'RegistrationComponent', 'selector': 'app-registration'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/classes/completedNode.ts\n            \n            class\n            CompletedNode\n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            class\n            Graph\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            GraphInfo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            LinkInfo\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/classes/graph.ts\n            \n            interface\n            NodeInfo\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/classes/label.ts\n            \n            class\n            Label\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/classes/label.ts\n            \n            interface\n            LabelOptions\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/line.ts\n            \n            class\n            Line\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/classes/node.ts\n            \n            class\n            Node\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/classes/uncompletedNode.ts\n            \n            class\n            UncompletedNode\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                src/app/components/authorization/authorization.component.ts\n            \n            component\n            AuthorizationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/graph-viewer/graph-viewer.component.ts\n            \n            component\n            GraphViewerComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/components/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.5\n        \n            @angular/common : ~10.0.5\n        \n            @angular/compiler : ~10.0.5\n        \n            @angular/core : ~10.0.5\n        \n            @angular/forms : ~10.0.5\n        \n            @angular/platform-browser : ~10.0.5\n        \n            @angular/platform-browser-dynamic : ~10.0.5\n        \n            @angular/router : ~10.0.5\n        \n            fabric : ^3.6.3\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeStates   (src/.../node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/node.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeStates\n                    \n                \n                        \n                            \n                                 Idle\n                            \n                        \n                        \n                            \n                                 Hover\n                            \n                        \n                        \n                            \n                                 Active\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAchievyAngular\nThis project was generated with Angular CLI version 10.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthorizationComponent\n\nAuthorizationComponent\n\nAppModule -->\n\nAuthorizationComponent->AppModule\n\n\n\n\n\nGraphViewerComponent\n\nGraphViewerComponent\n\nAppModule -->\n\nGraphViewerComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        1 Route\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
